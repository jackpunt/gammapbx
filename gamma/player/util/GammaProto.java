// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gamma.proto

package gamma.player.util;

public final class GammaProto {
  private GammaProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code Fields}
   */
  public enum Fields
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>none = 0;</code>
     */
    none(0),
    /**
     * <code>turn = 1;</code>
     */
    turn(1),
    /**
     * <code>update = 2;</code>
     */
    update(2),
    /**
     * <code>reveal = 3;</code>
     */
    reveal(3),
    /**
     * <code>add = 4;</code>
     */
    add(4),
    /**
     * <code>del = 5;</code>
     */
    del(5),
    /**
     * <code>timages = 21;</code>
     */
    timages(21),
    /**
     * <code>mimages = 22;</code>
     */
    mimages(22),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>none = 0;</code>
     */
    public static final int none_VALUE = 0;
    /**
     * <code>turn = 1;</code>
     */
    public static final int turn_VALUE = 1;
    /**
     * <code>update = 2;</code>
     */
    public static final int update_VALUE = 2;
    /**
     * <code>reveal = 3;</code>
     */
    public static final int reveal_VALUE = 3;
    /**
     * <code>add = 4;</code>
     */
    public static final int add_VALUE = 4;
    /**
     * <code>del = 5;</code>
     */
    public static final int del_VALUE = 5;
    /**
     * <code>timages = 21;</code>
     */
    public static final int timages_VALUE = 21;
    /**
     * <code>mimages = 22;</code>
     */
    public static final int mimages_VALUE = 22;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Fields valueOf(int value) {
      return forNumber(value);
    }

    public static Fields forNumber(int value) {
      switch (value) {
        case 0: return none;
        case 1: return turn;
        case 2: return update;
        case 3: return reveal;
        case 4: return add;
        case 5: return del;
        case 21: return timages;
        case 22: return mimages;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Fields>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Fields> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Fields>() {
            public Fields findValueByNumber(int number) {
              return Fields.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final Fields[] VALUES = values();

    public static Fields valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Fields(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:Fields)
  }

  public interface IlocOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Iloc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 y = 1;</code>
     */
    int getY();

    /**
     * <code>int32 x = 2;</code>
     */
    int getX();
  }
  /**
   * Protobuf type {@code Iloc}
   */
  public  static final class Iloc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Iloc)
      IlocOrBuilder {
    // Use Iloc.newBuilder() to construct.
    private Iloc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Iloc() {
      y_ = 0;
      x_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Iloc(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              y_ = input.readInt32();
              break;
            }
            case 16: {

              x_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_Iloc_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_Iloc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.Iloc.class, gamma.player.util.GammaProto.Iloc.Builder.class);
    }

    public static final int Y_FIELD_NUMBER = 1;
    private int y_;
    /**
     * <code>int32 y = 1;</code>
     */
    public int getY() {
      return y_;
    }

    public static final int X_FIELD_NUMBER = 2;
    private int x_;
    /**
     * <code>int32 x = 2;</code>
     */
    public int getX() {
      return x_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (y_ != 0) {
        output.writeInt32(1, y_);
      }
      if (x_ != 0) {
        output.writeInt32(2, x_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (y_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, y_);
      }
      if (x_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, x_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.Iloc)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.Iloc other = (gamma.player.util.GammaProto.Iloc) obj;

      boolean result = true;
      result = result && (getY()
          == other.getY());
      result = result && (getX()
          == other.getX());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + getY();
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + getX();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.Iloc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Iloc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Iloc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Iloc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Iloc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Iloc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Iloc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Iloc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Iloc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Iloc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.Iloc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Iloc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Iloc)
        gamma.player.util.GammaProto.IlocOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_Iloc_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_Iloc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.Iloc.class, gamma.player.util.GammaProto.Iloc.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.Iloc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        y_ = 0;

        x_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_Iloc_descriptor;
      }

      public gamma.player.util.GammaProto.Iloc getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.Iloc.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.Iloc build() {
        gamma.player.util.GammaProto.Iloc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.Iloc buildPartial() {
        gamma.player.util.GammaProto.Iloc result = new gamma.player.util.GammaProto.Iloc(this);
        result.y_ = y_;
        result.x_ = x_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.Iloc) {
          return mergeFrom((gamma.player.util.GammaProto.Iloc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.Iloc other) {
        if (other == gamma.player.util.GammaProto.Iloc.getDefaultInstance()) return this;
        if (other.getY() != 0) {
          setY(other.getY());
        }
        if (other.getX() != 0) {
          setX(other.getX());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.Iloc parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.Iloc) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int y_ ;
      /**
       * <code>int32 y = 1;</code>
       */
      public int getY() {
        return y_;
      }
      /**
       * <code>int32 y = 1;</code>
       */
      public Builder setY(int value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 y = 1;</code>
       */
      public Builder clearY() {
        
        y_ = 0;
        onChanged();
        return this;
      }

      private int x_ ;
      /**
       * <code>int32 x = 2;</code>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>int32 x = 2;</code>
       */
      public Builder setX(int value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 x = 2;</code>
       */
      public Builder clearX() {
        
        x_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Iloc)
    }

    // @@protoc_insertion_point(class_scope:Iloc)
    private static final gamma.player.util.GammaProto.Iloc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.Iloc();
    }

    public static gamma.player.util.GammaProto.Iloc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Iloc>
        PARSER = new com.google.protobuf.AbstractParser<Iloc>() {
      public Iloc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Iloc(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Iloc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Iloc> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.Iloc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FlocOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Floc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float y = 1;</code>
     */
    float getY();

    /**
     * <code>float x = 2;</code>
     */
    float getX();
  }
  /**
   * Protobuf type {@code Floc}
   */
  public  static final class Floc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Floc)
      FlocOrBuilder {
    // Use Floc.newBuilder() to construct.
    private Floc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Floc() {
      y_ = 0F;
      x_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Floc(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 13: {

              y_ = input.readFloat();
              break;
            }
            case 21: {

              x_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_Floc_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_Floc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.Floc.class, gamma.player.util.GammaProto.Floc.Builder.class);
    }

    public static final int Y_FIELD_NUMBER = 1;
    private float y_;
    /**
     * <code>float y = 1;</code>
     */
    public float getY() {
      return y_;
    }

    public static final int X_FIELD_NUMBER = 2;
    private float x_;
    /**
     * <code>float x = 2;</code>
     */
    public float getX() {
      return x_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (y_ != 0F) {
        output.writeFloat(1, y_);
      }
      if (x_ != 0F) {
        output.writeFloat(2, x_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (y_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, y_);
      }
      if (x_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, x_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.Floc)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.Floc other = (gamma.player.util.GammaProto.Floc) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getY())
          == java.lang.Float.floatToIntBits(
              other.getY()));
      result = result && (
          java.lang.Float.floatToIntBits(getX())
          == java.lang.Float.floatToIntBits(
              other.getX()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY());
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.Floc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Floc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Floc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Floc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Floc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Floc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Floc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Floc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Floc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Floc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.Floc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Floc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Floc)
        gamma.player.util.GammaProto.FlocOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_Floc_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_Floc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.Floc.class, gamma.player.util.GammaProto.Floc.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.Floc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        y_ = 0F;

        x_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_Floc_descriptor;
      }

      public gamma.player.util.GammaProto.Floc getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.Floc.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.Floc build() {
        gamma.player.util.GammaProto.Floc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.Floc buildPartial() {
        gamma.player.util.GammaProto.Floc result = new gamma.player.util.GammaProto.Floc(this);
        result.y_ = y_;
        result.x_ = x_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.Floc) {
          return mergeFrom((gamma.player.util.GammaProto.Floc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.Floc other) {
        if (other == gamma.player.util.GammaProto.Floc.getDefaultInstance()) return this;
        if (other.getY() != 0F) {
          setY(other.getY());
        }
        if (other.getX() != 0F) {
          setX(other.getX());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.Floc parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.Floc) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float y_ ;
      /**
       * <code>float y = 1;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <code>float y = 1;</code>
       */
      public Builder setY(float value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float y = 1;</code>
       */
      public Builder clearY() {
        
        y_ = 0F;
        onChanged();
        return this;
      }

      private float x_ ;
      /**
       * <code>float x = 2;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <code>float x = 2;</code>
       */
      public Builder setX(float value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float x = 2;</code>
       */
      public Builder clearX() {
        
        x_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Floc)
    }

    // @@protoc_insertion_point(class_scope:Floc)
    private static final gamma.player.util.GammaProto.Floc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.Floc();
    }

    public static gamma.player.util.GammaProto.Floc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Floc>
        PARSER = new com.google.protobuf.AbstractParser<Floc>() {
      public Floc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Floc(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Floc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Floc> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.Floc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IDlocOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IDloc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 dy = 1;</code>
     */
    int getDy();

    /**
     * <code>int32 dx = 2;</code>
     */
    int getDx();
  }
  /**
   * <pre>
   * delta loc .. is this robust/usable? 
   * Expect to send keyframe every 5 or so
   * interpolated with FDloc/IDloc updates
   * [or not: if keyframe includes a Dloc, and unit still on track]
   * </pre>
   *
   * Protobuf type {@code IDloc}
   */
  public  static final class IDloc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:IDloc)
      IDlocOrBuilder {
    // Use IDloc.newBuilder() to construct.
    private IDloc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IDloc() {
      dy_ = 0;
      dx_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private IDloc(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              dy_ = input.readInt32();
              break;
            }
            case 16: {

              dx_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_IDloc_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_IDloc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.IDloc.class, gamma.player.util.GammaProto.IDloc.Builder.class);
    }

    public static final int DY_FIELD_NUMBER = 1;
    private int dy_;
    /**
     * <code>int32 dy = 1;</code>
     */
    public int getDy() {
      return dy_;
    }

    public static final int DX_FIELD_NUMBER = 2;
    private int dx_;
    /**
     * <code>int32 dx = 2;</code>
     */
    public int getDx() {
      return dx_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (dy_ != 0) {
        output.writeInt32(1, dy_);
      }
      if (dx_ != 0) {
        output.writeInt32(2, dx_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dy_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, dy_);
      }
      if (dx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, dx_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.IDloc)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.IDloc other = (gamma.player.util.GammaProto.IDloc) obj;

      boolean result = true;
      result = result && (getDy()
          == other.getDy());
      result = result && (getDx()
          == other.getDx());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DY_FIELD_NUMBER;
      hash = (53 * hash) + getDy();
      hash = (37 * hash) + DX_FIELD_NUMBER;
      hash = (53 * hash) + getDx();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.IDloc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.IDloc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.IDloc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.IDloc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.IDloc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.IDloc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.IDloc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.IDloc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.IDloc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.IDloc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.IDloc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * delta loc .. is this robust/usable? 
     * Expect to send keyframe every 5 or so
     * interpolated with FDloc/IDloc updates
     * [or not: if keyframe includes a Dloc, and unit still on track]
     * </pre>
     *
     * Protobuf type {@code IDloc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IDloc)
        gamma.player.util.GammaProto.IDlocOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_IDloc_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_IDloc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.IDloc.class, gamma.player.util.GammaProto.IDloc.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.IDloc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        dy_ = 0;

        dx_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_IDloc_descriptor;
      }

      public gamma.player.util.GammaProto.IDloc getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.IDloc.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.IDloc build() {
        gamma.player.util.GammaProto.IDloc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.IDloc buildPartial() {
        gamma.player.util.GammaProto.IDloc result = new gamma.player.util.GammaProto.IDloc(this);
        result.dy_ = dy_;
        result.dx_ = dx_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.IDloc) {
          return mergeFrom((gamma.player.util.GammaProto.IDloc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.IDloc other) {
        if (other == gamma.player.util.GammaProto.IDloc.getDefaultInstance()) return this;
        if (other.getDy() != 0) {
          setDy(other.getDy());
        }
        if (other.getDx() != 0) {
          setDx(other.getDx());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.IDloc parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.IDloc) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int dy_ ;
      /**
       * <code>int32 dy = 1;</code>
       */
      public int getDy() {
        return dy_;
      }
      /**
       * <code>int32 dy = 1;</code>
       */
      public Builder setDy(int value) {
        
        dy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 dy = 1;</code>
       */
      public Builder clearDy() {
        
        dy_ = 0;
        onChanged();
        return this;
      }

      private int dx_ ;
      /**
       * <code>int32 dx = 2;</code>
       */
      public int getDx() {
        return dx_;
      }
      /**
       * <code>int32 dx = 2;</code>
       */
      public Builder setDx(int value) {
        
        dx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 dx = 2;</code>
       */
      public Builder clearDx() {
        
        dx_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:IDloc)
    }

    // @@protoc_insertion_point(class_scope:IDloc)
    private static final gamma.player.util.GammaProto.IDloc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.IDloc();
    }

    public static gamma.player.util.GammaProto.IDloc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IDloc>
        PARSER = new com.google.protobuf.AbstractParser<IDloc>() {
      public IDloc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new IDloc(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IDloc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IDloc> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.IDloc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FDlocOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FDloc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float dy = 1;</code>
     */
    float getDy();

    /**
     * <code>float dx = 2;</code>
     */
    float getDx();
  }
  /**
   * <pre>
   * delta loc
   * </pre>
   *
   * Protobuf type {@code FDloc}
   */
  public  static final class FDloc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:FDloc)
      FDlocOrBuilder {
    // Use FDloc.newBuilder() to construct.
    private FDloc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FDloc() {
      dy_ = 0F;
      dx_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FDloc(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 13: {

              dy_ = input.readFloat();
              break;
            }
            case 21: {

              dx_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_FDloc_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_FDloc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.FDloc.class, gamma.player.util.GammaProto.FDloc.Builder.class);
    }

    public static final int DY_FIELD_NUMBER = 1;
    private float dy_;
    /**
     * <code>float dy = 1;</code>
     */
    public float getDy() {
      return dy_;
    }

    public static final int DX_FIELD_NUMBER = 2;
    private float dx_;
    /**
     * <code>float dx = 2;</code>
     */
    public float getDx() {
      return dx_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (dy_ != 0F) {
        output.writeFloat(1, dy_);
      }
      if (dx_ != 0F) {
        output.writeFloat(2, dx_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dy_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, dy_);
      }
      if (dx_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, dx_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.FDloc)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.FDloc other = (gamma.player.util.GammaProto.FDloc) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getDy())
          == java.lang.Float.floatToIntBits(
              other.getDy()));
      result = result && (
          java.lang.Float.floatToIntBits(getDx())
          == java.lang.Float.floatToIntBits(
              other.getDx()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDy());
      hash = (37 * hash) + DX_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDx());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.FDloc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.FDloc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.FDloc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.FDloc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.FDloc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.FDloc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.FDloc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.FDloc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.FDloc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.FDloc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.FDloc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * delta loc
     * </pre>
     *
     * Protobuf type {@code FDloc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FDloc)
        gamma.player.util.GammaProto.FDlocOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_FDloc_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_FDloc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.FDloc.class, gamma.player.util.GammaProto.FDloc.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.FDloc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        dy_ = 0F;

        dx_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_FDloc_descriptor;
      }

      public gamma.player.util.GammaProto.FDloc getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.FDloc.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.FDloc build() {
        gamma.player.util.GammaProto.FDloc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.FDloc buildPartial() {
        gamma.player.util.GammaProto.FDloc result = new gamma.player.util.GammaProto.FDloc(this);
        result.dy_ = dy_;
        result.dx_ = dx_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.FDloc) {
          return mergeFrom((gamma.player.util.GammaProto.FDloc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.FDloc other) {
        if (other == gamma.player.util.GammaProto.FDloc.getDefaultInstance()) return this;
        if (other.getDy() != 0F) {
          setDy(other.getDy());
        }
        if (other.getDx() != 0F) {
          setDx(other.getDx());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.FDloc parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.FDloc) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float dy_ ;
      /**
       * <code>float dy = 1;</code>
       */
      public float getDy() {
        return dy_;
      }
      /**
       * <code>float dy = 1;</code>
       */
      public Builder setDy(float value) {
        
        dy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float dy = 1;</code>
       */
      public Builder clearDy() {
        
        dy_ = 0F;
        onChanged();
        return this;
      }

      private float dx_ ;
      /**
       * <code>float dx = 2;</code>
       */
      public float getDx() {
        return dx_;
      }
      /**
       * <code>float dx = 2;</code>
       */
      public Builder setDx(float value) {
        
        dx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float dx = 2;</code>
       */
      public Builder clearDx() {
        
        dx_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:FDloc)
    }

    // @@protoc_insertion_point(class_scope:FDloc)
    private static final gamma.player.util.GammaProto.FDloc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.FDloc();
    }

    public static gamma.player.util.GammaProto.FDloc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FDloc>
        PARSER = new com.google.protobuf.AbstractParser<FDloc>() {
      public FDloc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FDloc(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FDloc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FDloc> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.FDloc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DlocOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Dloc)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float dy_dt = 1;</code>
     */
    float getDyDt();

    /**
     * <code>float dx_dt = 2;</code>
     */
    float getDxDt();
  }
  /**
   * <pre>
   * set a speed: [dloc/dturn]
   * </pre>
   *
   * Protobuf type {@code Dloc}
   */
  public  static final class Dloc extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Dloc)
      DlocOrBuilder {
    // Use Dloc.newBuilder() to construct.
    private Dloc(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Dloc() {
      dyDt_ = 0F;
      dxDt_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Dloc(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 13: {

              dyDt_ = input.readFloat();
              break;
            }
            case 21: {

              dxDt_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_Dloc_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_Dloc_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.Dloc.class, gamma.player.util.GammaProto.Dloc.Builder.class);
    }

    public static final int DY_DT_FIELD_NUMBER = 1;
    private float dyDt_;
    /**
     * <code>float dy_dt = 1;</code>
     */
    public float getDyDt() {
      return dyDt_;
    }

    public static final int DX_DT_FIELD_NUMBER = 2;
    private float dxDt_;
    /**
     * <code>float dx_dt = 2;</code>
     */
    public float getDxDt() {
      return dxDt_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (dyDt_ != 0F) {
        output.writeFloat(1, dyDt_);
      }
      if (dxDt_ != 0F) {
        output.writeFloat(2, dxDt_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dyDt_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, dyDt_);
      }
      if (dxDt_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, dxDt_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.Dloc)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.Dloc other = (gamma.player.util.GammaProto.Dloc) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getDyDt())
          == java.lang.Float.floatToIntBits(
              other.getDyDt()));
      result = result && (
          java.lang.Float.floatToIntBits(getDxDt())
          == java.lang.Float.floatToIntBits(
              other.getDxDt()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DY_DT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDyDt());
      hash = (37 * hash) + DX_DT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDxDt());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.Dloc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Dloc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Dloc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Dloc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Dloc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Dloc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Dloc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Dloc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Dloc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Dloc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.Dloc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * set a speed: [dloc/dturn]
     * </pre>
     *
     * Protobuf type {@code Dloc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Dloc)
        gamma.player.util.GammaProto.DlocOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_Dloc_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_Dloc_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.Dloc.class, gamma.player.util.GammaProto.Dloc.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.Dloc.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        dyDt_ = 0F;

        dxDt_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_Dloc_descriptor;
      }

      public gamma.player.util.GammaProto.Dloc getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.Dloc.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.Dloc build() {
        gamma.player.util.GammaProto.Dloc result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.Dloc buildPartial() {
        gamma.player.util.GammaProto.Dloc result = new gamma.player.util.GammaProto.Dloc(this);
        result.dyDt_ = dyDt_;
        result.dxDt_ = dxDt_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.Dloc) {
          return mergeFrom((gamma.player.util.GammaProto.Dloc)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.Dloc other) {
        if (other == gamma.player.util.GammaProto.Dloc.getDefaultInstance()) return this;
        if (other.getDyDt() != 0F) {
          setDyDt(other.getDyDt());
        }
        if (other.getDxDt() != 0F) {
          setDxDt(other.getDxDt());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.Dloc parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.Dloc) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float dyDt_ ;
      /**
       * <code>float dy_dt = 1;</code>
       */
      public float getDyDt() {
        return dyDt_;
      }
      /**
       * <code>float dy_dt = 1;</code>
       */
      public Builder setDyDt(float value) {
        
        dyDt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float dy_dt = 1;</code>
       */
      public Builder clearDyDt() {
        
        dyDt_ = 0F;
        onChanged();
        return this;
      }

      private float dxDt_ ;
      /**
       * <code>float dx_dt = 2;</code>
       */
      public float getDxDt() {
        return dxDt_;
      }
      /**
       * <code>float dx_dt = 2;</code>
       */
      public Builder setDxDt(float value) {
        
        dxDt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float dx_dt = 2;</code>
       */
      public Builder clearDxDt() {
        
        dxDt_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Dloc)
    }

    // @@protoc_insertion_point(class_scope:Dloc)
    private static final gamma.player.util.GammaProto.Dloc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.Dloc();
    }

    public static gamma.player.util.GammaProto.Dloc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Dloc>
        PARSER = new com.google.protobuf.AbstractParser<Dloc>() {
      public Dloc parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Dloc(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Dloc> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Dloc> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.Dloc getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TurnOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Turn)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * new turn number; no Seq for this...
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     */
    int getId();
  }
  /**
   * Protobuf type {@code Turn}
   */
  public  static final class Turn extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Turn)
      TurnOrBuilder {
    // Use Turn.newBuilder() to construct.
    private Turn(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Turn() {
      id_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Turn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_Turn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_Turn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.Turn.class, gamma.player.util.GammaProto.Turn.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     * new turn number; no Seq for this...
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.Turn)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.Turn other = (gamma.player.util.GammaProto.Turn) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.Turn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Turn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Turn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Turn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Turn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Turn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Turn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Turn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Turn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Turn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.Turn prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Turn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Turn)
        gamma.player.util.GammaProto.TurnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_Turn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_Turn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.Turn.class, gamma.player.util.GammaProto.Turn.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.Turn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_Turn_descriptor;
      }

      public gamma.player.util.GammaProto.Turn getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.Turn.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.Turn build() {
        gamma.player.util.GammaProto.Turn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.Turn buildPartial() {
        gamma.player.util.GammaProto.Turn result = new gamma.player.util.GammaProto.Turn(this);
        result.id_ = id_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.Turn) {
          return mergeFrom((gamma.player.util.GammaProto.Turn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.Turn other) {
        if (other == gamma.player.util.GammaProto.Turn.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.Turn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.Turn) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       * new turn number; no Seq for this...
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * new turn number; no Seq for this...
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * new turn number; no Seq for this...
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Turn)
    }

    // @@protoc_insertion_point(class_scope:Turn)
    private static final gamma.player.util.GammaProto.Turn DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.Turn();
    }

    public static gamma.player.util.GammaProto.Turn getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Turn>
        PARSER = new com.google.protobuf.AbstractParser<Turn>() {
      public Turn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Turn(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Turn> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Turn> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.Turn getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Turn
     * </pre>
     *
     * <code>.Turn turn = 1;</code>
     */
    boolean hasTurn();
    /**
     * <pre>
     * Turn
     * </pre>
     *
     * <code>.Turn turn = 1;</code>
     */
    gamma.player.util.GammaProto.Turn getTurn();
    /**
     * <pre>
     * Turn
     * </pre>
     *
     * <code>.Turn turn = 1;</code>
     */
    gamma.player.util.GammaProto.TurnOrBuilder getTurnOrBuilder();

    /**
     * <pre>
     * Update
     * </pre>
     *
     * <code>.UpdateSeq updates = 2;</code>
     */
    boolean hasUpdates();
    /**
     * <pre>
     * Update
     * </pre>
     *
     * <code>.UpdateSeq updates = 2;</code>
     */
    gamma.player.util.GammaProto.UpdateSeq getUpdates();
    /**
     * <pre>
     * Update
     * </pre>
     *
     * <code>.UpdateSeq updates = 2;</code>
     */
    gamma.player.util.GammaProto.UpdateSeqOrBuilder getUpdatesOrBuilder();

    /**
     * <pre>
     * Reveal
     * </pre>
     *
     * <code>.RevealSeq reveals = 3;</code>
     */
    boolean hasReveals();
    /**
     * <pre>
     * Reveal
     * </pre>
     *
     * <code>.RevealSeq reveals = 3;</code>
     */
    gamma.player.util.GammaProto.RevealSeq getReveals();
    /**
     * <pre>
     * Reveal
     * </pre>
     *
     * <code>.RevealSeq reveals = 3;</code>
     */
    gamma.player.util.GammaProto.RevealSeqOrBuilder getRevealsOrBuilder();

    /**
     * <pre>
     * Add (Ident, Update)
     * </pre>
     *
     * <code>.AddSeq adds = 4;</code>
     */
    boolean hasAdds();
    /**
     * <pre>
     * Add (Ident, Update)
     * </pre>
     *
     * <code>.AddSeq adds = 4;</code>
     */
    gamma.player.util.GammaProto.AddSeq getAdds();
    /**
     * <pre>
     * Add (Ident, Update)
     * </pre>
     *
     * <code>.AddSeq adds = 4;</code>
     */
    gamma.player.util.GammaProto.AddSeqOrBuilder getAddsOrBuilder();

    /**
     * <pre>
     * Del
     * </pre>
     *
     * <code>.DelSeq dels = 5;</code>
     */
    boolean hasDels();
    /**
     * <pre>
     * Del
     * </pre>
     *
     * <code>.DelSeq dels = 5;</code>
     */
    gamma.player.util.GammaProto.DelSeq getDels();
    /**
     * <pre>
     * Del
     * </pre>
     *
     * <code>.DelSeq dels = 5;</code>
     */
    gamma.player.util.GammaProto.DelSeqOrBuilder getDelsOrBuilder();

    /**
     * <pre>
     * TerImage, ImageAry
     * </pre>
     *
     * <code>.TerImageSeq ter_images = 21;</code>
     */
    boolean hasTerImages();
    /**
     * <pre>
     * TerImage, ImageAry
     * </pre>
     *
     * <code>.TerImageSeq ter_images = 21;</code>
     */
    gamma.player.util.GammaProto.TerImageSeq getTerImages();
    /**
     * <pre>
     * TerImage, ImageAry
     * </pre>
     *
     * <code>.TerImageSeq ter_images = 21;</code>
     */
    gamma.player.util.GammaProto.TerImageSeqOrBuilder getTerImagesOrBuilder();

    /**
     * <pre>
     * ModImage, ImageAry
     * </pre>
     *
     * <code>.ModImageSeq mod_images = 22;</code>
     */
    boolean hasModImages();
    /**
     * <pre>
     * ModImage, ImageAry
     * </pre>
     *
     * <code>.ModImageSeq mod_images = 22;</code>
     */
    gamma.player.util.GammaProto.ModImageSeq getModImages();
    /**
     * <pre>
     * ModImage, ImageAry
     * </pre>
     *
     * <code>.ModImageSeq mod_images = 22;</code>
     */
    gamma.player.util.GammaProto.ModImageSeqOrBuilder getModImagesOrBuilder();
  }
  /**
   * <pre>
   * type of following message:
   * </pre>
   *
   * Protobuf type {@code AMessage}
   */
  public  static final class AMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:AMessage)
      AMessageOrBuilder {
    // Use AMessage.newBuilder() to construct.
    private AMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AMessage() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              gamma.player.util.GammaProto.Turn.Builder subBuilder = null;
              if (turn_ != null) {
                subBuilder = turn_.toBuilder();
              }
              turn_ = input.readMessage(gamma.player.util.GammaProto.Turn.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(turn_);
                turn_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              gamma.player.util.GammaProto.UpdateSeq.Builder subBuilder = null;
              if (updates_ != null) {
                subBuilder = updates_.toBuilder();
              }
              updates_ = input.readMessage(gamma.player.util.GammaProto.UpdateSeq.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updates_);
                updates_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              gamma.player.util.GammaProto.RevealSeq.Builder subBuilder = null;
              if (reveals_ != null) {
                subBuilder = reveals_.toBuilder();
              }
              reveals_ = input.readMessage(gamma.player.util.GammaProto.RevealSeq.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(reveals_);
                reveals_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              gamma.player.util.GammaProto.AddSeq.Builder subBuilder = null;
              if (adds_ != null) {
                subBuilder = adds_.toBuilder();
              }
              adds_ = input.readMessage(gamma.player.util.GammaProto.AddSeq.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(adds_);
                adds_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              gamma.player.util.GammaProto.DelSeq.Builder subBuilder = null;
              if (dels_ != null) {
                subBuilder = dels_.toBuilder();
              }
              dels_ = input.readMessage(gamma.player.util.GammaProto.DelSeq.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dels_);
                dels_ = subBuilder.buildPartial();
              }

              break;
            }
            case 170: {
              gamma.player.util.GammaProto.TerImageSeq.Builder subBuilder = null;
              if (terImages_ != null) {
                subBuilder = terImages_.toBuilder();
              }
              terImages_ = input.readMessage(gamma.player.util.GammaProto.TerImageSeq.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(terImages_);
                terImages_ = subBuilder.buildPartial();
              }

              break;
            }
            case 178: {
              gamma.player.util.GammaProto.ModImageSeq.Builder subBuilder = null;
              if (modImages_ != null) {
                subBuilder = modImages_.toBuilder();
              }
              modImages_ = input.readMessage(gamma.player.util.GammaProto.ModImageSeq.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(modImages_);
                modImages_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_AMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_AMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.AMessage.class, gamma.player.util.GammaProto.AMessage.Builder.class);
    }

    public static final int TURN_FIELD_NUMBER = 1;
    private gamma.player.util.GammaProto.Turn turn_;
    /**
     * <pre>
     * Turn
     * </pre>
     *
     * <code>.Turn turn = 1;</code>
     */
    public boolean hasTurn() {
      return turn_ != null;
    }
    /**
     * <pre>
     * Turn
     * </pre>
     *
     * <code>.Turn turn = 1;</code>
     */
    public gamma.player.util.GammaProto.Turn getTurn() {
      return turn_ == null ? gamma.player.util.GammaProto.Turn.getDefaultInstance() : turn_;
    }
    /**
     * <pre>
     * Turn
     * </pre>
     *
     * <code>.Turn turn = 1;</code>
     */
    public gamma.player.util.GammaProto.TurnOrBuilder getTurnOrBuilder() {
      return getTurn();
    }

    public static final int UPDATES_FIELD_NUMBER = 2;
    private gamma.player.util.GammaProto.UpdateSeq updates_;
    /**
     * <pre>
     * Update
     * </pre>
     *
     * <code>.UpdateSeq updates = 2;</code>
     */
    public boolean hasUpdates() {
      return updates_ != null;
    }
    /**
     * <pre>
     * Update
     * </pre>
     *
     * <code>.UpdateSeq updates = 2;</code>
     */
    public gamma.player.util.GammaProto.UpdateSeq getUpdates() {
      return updates_ == null ? gamma.player.util.GammaProto.UpdateSeq.getDefaultInstance() : updates_;
    }
    /**
     * <pre>
     * Update
     * </pre>
     *
     * <code>.UpdateSeq updates = 2;</code>
     */
    public gamma.player.util.GammaProto.UpdateSeqOrBuilder getUpdatesOrBuilder() {
      return getUpdates();
    }

    public static final int REVEALS_FIELD_NUMBER = 3;
    private gamma.player.util.GammaProto.RevealSeq reveals_;
    /**
     * <pre>
     * Reveal
     * </pre>
     *
     * <code>.RevealSeq reveals = 3;</code>
     */
    public boolean hasReveals() {
      return reveals_ != null;
    }
    /**
     * <pre>
     * Reveal
     * </pre>
     *
     * <code>.RevealSeq reveals = 3;</code>
     */
    public gamma.player.util.GammaProto.RevealSeq getReveals() {
      return reveals_ == null ? gamma.player.util.GammaProto.RevealSeq.getDefaultInstance() : reveals_;
    }
    /**
     * <pre>
     * Reveal
     * </pre>
     *
     * <code>.RevealSeq reveals = 3;</code>
     */
    public gamma.player.util.GammaProto.RevealSeqOrBuilder getRevealsOrBuilder() {
      return getReveals();
    }

    public static final int ADDS_FIELD_NUMBER = 4;
    private gamma.player.util.GammaProto.AddSeq adds_;
    /**
     * <pre>
     * Add (Ident, Update)
     * </pre>
     *
     * <code>.AddSeq adds = 4;</code>
     */
    public boolean hasAdds() {
      return adds_ != null;
    }
    /**
     * <pre>
     * Add (Ident, Update)
     * </pre>
     *
     * <code>.AddSeq adds = 4;</code>
     */
    public gamma.player.util.GammaProto.AddSeq getAdds() {
      return adds_ == null ? gamma.player.util.GammaProto.AddSeq.getDefaultInstance() : adds_;
    }
    /**
     * <pre>
     * Add (Ident, Update)
     * </pre>
     *
     * <code>.AddSeq adds = 4;</code>
     */
    public gamma.player.util.GammaProto.AddSeqOrBuilder getAddsOrBuilder() {
      return getAdds();
    }

    public static final int DELS_FIELD_NUMBER = 5;
    private gamma.player.util.GammaProto.DelSeq dels_;
    /**
     * <pre>
     * Del
     * </pre>
     *
     * <code>.DelSeq dels = 5;</code>
     */
    public boolean hasDels() {
      return dels_ != null;
    }
    /**
     * <pre>
     * Del
     * </pre>
     *
     * <code>.DelSeq dels = 5;</code>
     */
    public gamma.player.util.GammaProto.DelSeq getDels() {
      return dels_ == null ? gamma.player.util.GammaProto.DelSeq.getDefaultInstance() : dels_;
    }
    /**
     * <pre>
     * Del
     * </pre>
     *
     * <code>.DelSeq dels = 5;</code>
     */
    public gamma.player.util.GammaProto.DelSeqOrBuilder getDelsOrBuilder() {
      return getDels();
    }

    public static final int TER_IMAGES_FIELD_NUMBER = 21;
    private gamma.player.util.GammaProto.TerImageSeq terImages_;
    /**
     * <pre>
     * TerImage, ImageAry
     * </pre>
     *
     * <code>.TerImageSeq ter_images = 21;</code>
     */
    public boolean hasTerImages() {
      return terImages_ != null;
    }
    /**
     * <pre>
     * TerImage, ImageAry
     * </pre>
     *
     * <code>.TerImageSeq ter_images = 21;</code>
     */
    public gamma.player.util.GammaProto.TerImageSeq getTerImages() {
      return terImages_ == null ? gamma.player.util.GammaProto.TerImageSeq.getDefaultInstance() : terImages_;
    }
    /**
     * <pre>
     * TerImage, ImageAry
     * </pre>
     *
     * <code>.TerImageSeq ter_images = 21;</code>
     */
    public gamma.player.util.GammaProto.TerImageSeqOrBuilder getTerImagesOrBuilder() {
      return getTerImages();
    }

    public static final int MOD_IMAGES_FIELD_NUMBER = 22;
    private gamma.player.util.GammaProto.ModImageSeq modImages_;
    /**
     * <pre>
     * ModImage, ImageAry
     * </pre>
     *
     * <code>.ModImageSeq mod_images = 22;</code>
     */
    public boolean hasModImages() {
      return modImages_ != null;
    }
    /**
     * <pre>
     * ModImage, ImageAry
     * </pre>
     *
     * <code>.ModImageSeq mod_images = 22;</code>
     */
    public gamma.player.util.GammaProto.ModImageSeq getModImages() {
      return modImages_ == null ? gamma.player.util.GammaProto.ModImageSeq.getDefaultInstance() : modImages_;
    }
    /**
     * <pre>
     * ModImage, ImageAry
     * </pre>
     *
     * <code>.ModImageSeq mod_images = 22;</code>
     */
    public gamma.player.util.GammaProto.ModImageSeqOrBuilder getModImagesOrBuilder() {
      return getModImages();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (turn_ != null) {
        output.writeMessage(1, getTurn());
      }
      if (updates_ != null) {
        output.writeMessage(2, getUpdates());
      }
      if (reveals_ != null) {
        output.writeMessage(3, getReveals());
      }
      if (adds_ != null) {
        output.writeMessage(4, getAdds());
      }
      if (dels_ != null) {
        output.writeMessage(5, getDels());
      }
      if (terImages_ != null) {
        output.writeMessage(21, getTerImages());
      }
      if (modImages_ != null) {
        output.writeMessage(22, getModImages());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (turn_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTurn());
      }
      if (updates_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUpdates());
      }
      if (reveals_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getReveals());
      }
      if (adds_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAdds());
      }
      if (dels_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getDels());
      }
      if (terImages_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getTerImages());
      }
      if (modImages_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getModImages());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.AMessage)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.AMessage other = (gamma.player.util.GammaProto.AMessage) obj;

      boolean result = true;
      result = result && (hasTurn() == other.hasTurn());
      if (hasTurn()) {
        result = result && getTurn()
            .equals(other.getTurn());
      }
      result = result && (hasUpdates() == other.hasUpdates());
      if (hasUpdates()) {
        result = result && getUpdates()
            .equals(other.getUpdates());
      }
      result = result && (hasReveals() == other.hasReveals());
      if (hasReveals()) {
        result = result && getReveals()
            .equals(other.getReveals());
      }
      result = result && (hasAdds() == other.hasAdds());
      if (hasAdds()) {
        result = result && getAdds()
            .equals(other.getAdds());
      }
      result = result && (hasDels() == other.hasDels());
      if (hasDels()) {
        result = result && getDels()
            .equals(other.getDels());
      }
      result = result && (hasTerImages() == other.hasTerImages());
      if (hasTerImages()) {
        result = result && getTerImages()
            .equals(other.getTerImages());
      }
      result = result && (hasModImages() == other.hasModImages());
      if (hasModImages()) {
        result = result && getModImages()
            .equals(other.getModImages());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTurn()) {
        hash = (37 * hash) + TURN_FIELD_NUMBER;
        hash = (53 * hash) + getTurn().hashCode();
      }
      if (hasUpdates()) {
        hash = (37 * hash) + UPDATES_FIELD_NUMBER;
        hash = (53 * hash) + getUpdates().hashCode();
      }
      if (hasReveals()) {
        hash = (37 * hash) + REVEALS_FIELD_NUMBER;
        hash = (53 * hash) + getReveals().hashCode();
      }
      if (hasAdds()) {
        hash = (37 * hash) + ADDS_FIELD_NUMBER;
        hash = (53 * hash) + getAdds().hashCode();
      }
      if (hasDels()) {
        hash = (37 * hash) + DELS_FIELD_NUMBER;
        hash = (53 * hash) + getDels().hashCode();
      }
      if (hasTerImages()) {
        hash = (37 * hash) + TER_IMAGES_FIELD_NUMBER;
        hash = (53 * hash) + getTerImages().hashCode();
      }
      if (hasModImages()) {
        hash = (37 * hash) + MOD_IMAGES_FIELD_NUMBER;
        hash = (53 * hash) + getModImages().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.AMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.AMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.AMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.AMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.AMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.AMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.AMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.AMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.AMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.AMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.AMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * type of following message:
     * </pre>
     *
     * Protobuf type {@code AMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:AMessage)
        gamma.player.util.GammaProto.AMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_AMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_AMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.AMessage.class, gamma.player.util.GammaProto.AMessage.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.AMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (turnBuilder_ == null) {
          turn_ = null;
        } else {
          turn_ = null;
          turnBuilder_ = null;
        }
        if (updatesBuilder_ == null) {
          updates_ = null;
        } else {
          updates_ = null;
          updatesBuilder_ = null;
        }
        if (revealsBuilder_ == null) {
          reveals_ = null;
        } else {
          reveals_ = null;
          revealsBuilder_ = null;
        }
        if (addsBuilder_ == null) {
          adds_ = null;
        } else {
          adds_ = null;
          addsBuilder_ = null;
        }
        if (delsBuilder_ == null) {
          dels_ = null;
        } else {
          dels_ = null;
          delsBuilder_ = null;
        }
        if (terImagesBuilder_ == null) {
          terImages_ = null;
        } else {
          terImages_ = null;
          terImagesBuilder_ = null;
        }
        if (modImagesBuilder_ == null) {
          modImages_ = null;
        } else {
          modImages_ = null;
          modImagesBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_AMessage_descriptor;
      }

      public gamma.player.util.GammaProto.AMessage getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.AMessage.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.AMessage build() {
        gamma.player.util.GammaProto.AMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.AMessage buildPartial() {
        gamma.player.util.GammaProto.AMessage result = new gamma.player.util.GammaProto.AMessage(this);
        if (turnBuilder_ == null) {
          result.turn_ = turn_;
        } else {
          result.turn_ = turnBuilder_.build();
        }
        if (updatesBuilder_ == null) {
          result.updates_ = updates_;
        } else {
          result.updates_ = updatesBuilder_.build();
        }
        if (revealsBuilder_ == null) {
          result.reveals_ = reveals_;
        } else {
          result.reveals_ = revealsBuilder_.build();
        }
        if (addsBuilder_ == null) {
          result.adds_ = adds_;
        } else {
          result.adds_ = addsBuilder_.build();
        }
        if (delsBuilder_ == null) {
          result.dels_ = dels_;
        } else {
          result.dels_ = delsBuilder_.build();
        }
        if (terImagesBuilder_ == null) {
          result.terImages_ = terImages_;
        } else {
          result.terImages_ = terImagesBuilder_.build();
        }
        if (modImagesBuilder_ == null) {
          result.modImages_ = modImages_;
        } else {
          result.modImages_ = modImagesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.AMessage) {
          return mergeFrom((gamma.player.util.GammaProto.AMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.AMessage other) {
        if (other == gamma.player.util.GammaProto.AMessage.getDefaultInstance()) return this;
        if (other.hasTurn()) {
          mergeTurn(other.getTurn());
        }
        if (other.hasUpdates()) {
          mergeUpdates(other.getUpdates());
        }
        if (other.hasReveals()) {
          mergeReveals(other.getReveals());
        }
        if (other.hasAdds()) {
          mergeAdds(other.getAdds());
        }
        if (other.hasDels()) {
          mergeDels(other.getDels());
        }
        if (other.hasTerImages()) {
          mergeTerImages(other.getTerImages());
        }
        if (other.hasModImages()) {
          mergeModImages(other.getModImages());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.AMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.AMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private gamma.player.util.GammaProto.Turn turn_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.Turn, gamma.player.util.GammaProto.Turn.Builder, gamma.player.util.GammaProto.TurnOrBuilder> turnBuilder_;
      /**
       * <pre>
       * Turn
       * </pre>
       *
       * <code>.Turn turn = 1;</code>
       */
      public boolean hasTurn() {
        return turnBuilder_ != null || turn_ != null;
      }
      /**
       * <pre>
       * Turn
       * </pre>
       *
       * <code>.Turn turn = 1;</code>
       */
      public gamma.player.util.GammaProto.Turn getTurn() {
        if (turnBuilder_ == null) {
          return turn_ == null ? gamma.player.util.GammaProto.Turn.getDefaultInstance() : turn_;
        } else {
          return turnBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Turn
       * </pre>
       *
       * <code>.Turn turn = 1;</code>
       */
      public Builder setTurn(gamma.player.util.GammaProto.Turn value) {
        if (turnBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          turn_ = value;
          onChanged();
        } else {
          turnBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Turn
       * </pre>
       *
       * <code>.Turn turn = 1;</code>
       */
      public Builder setTurn(
          gamma.player.util.GammaProto.Turn.Builder builderForValue) {
        if (turnBuilder_ == null) {
          turn_ = builderForValue.build();
          onChanged();
        } else {
          turnBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Turn
       * </pre>
       *
       * <code>.Turn turn = 1;</code>
       */
      public Builder mergeTurn(gamma.player.util.GammaProto.Turn value) {
        if (turnBuilder_ == null) {
          if (turn_ != null) {
            turn_ =
              gamma.player.util.GammaProto.Turn.newBuilder(turn_).mergeFrom(value).buildPartial();
          } else {
            turn_ = value;
          }
          onChanged();
        } else {
          turnBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Turn
       * </pre>
       *
       * <code>.Turn turn = 1;</code>
       */
      public Builder clearTurn() {
        if (turnBuilder_ == null) {
          turn_ = null;
          onChanged();
        } else {
          turn_ = null;
          turnBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Turn
       * </pre>
       *
       * <code>.Turn turn = 1;</code>
       */
      public gamma.player.util.GammaProto.Turn.Builder getTurnBuilder() {
        
        onChanged();
        return getTurnFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Turn
       * </pre>
       *
       * <code>.Turn turn = 1;</code>
       */
      public gamma.player.util.GammaProto.TurnOrBuilder getTurnOrBuilder() {
        if (turnBuilder_ != null) {
          return turnBuilder_.getMessageOrBuilder();
        } else {
          return turn_ == null ?
              gamma.player.util.GammaProto.Turn.getDefaultInstance() : turn_;
        }
      }
      /**
       * <pre>
       * Turn
       * </pre>
       *
       * <code>.Turn turn = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.Turn, gamma.player.util.GammaProto.Turn.Builder, gamma.player.util.GammaProto.TurnOrBuilder> 
          getTurnFieldBuilder() {
        if (turnBuilder_ == null) {
          turnBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.Turn, gamma.player.util.GammaProto.Turn.Builder, gamma.player.util.GammaProto.TurnOrBuilder>(
                  getTurn(),
                  getParentForChildren(),
                  isClean());
          turn_ = null;
        }
        return turnBuilder_;
      }

      private gamma.player.util.GammaProto.UpdateSeq updates_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.UpdateSeq, gamma.player.util.GammaProto.UpdateSeq.Builder, gamma.player.util.GammaProto.UpdateSeqOrBuilder> updatesBuilder_;
      /**
       * <pre>
       * Update
       * </pre>
       *
       * <code>.UpdateSeq updates = 2;</code>
       */
      public boolean hasUpdates() {
        return updatesBuilder_ != null || updates_ != null;
      }
      /**
       * <pre>
       * Update
       * </pre>
       *
       * <code>.UpdateSeq updates = 2;</code>
       */
      public gamma.player.util.GammaProto.UpdateSeq getUpdates() {
        if (updatesBuilder_ == null) {
          return updates_ == null ? gamma.player.util.GammaProto.UpdateSeq.getDefaultInstance() : updates_;
        } else {
          return updatesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Update
       * </pre>
       *
       * <code>.UpdateSeq updates = 2;</code>
       */
      public Builder setUpdates(gamma.player.util.GammaProto.UpdateSeq value) {
        if (updatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updates_ = value;
          onChanged();
        } else {
          updatesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Update
       * </pre>
       *
       * <code>.UpdateSeq updates = 2;</code>
       */
      public Builder setUpdates(
          gamma.player.util.GammaProto.UpdateSeq.Builder builderForValue) {
        if (updatesBuilder_ == null) {
          updates_ = builderForValue.build();
          onChanged();
        } else {
          updatesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Update
       * </pre>
       *
       * <code>.UpdateSeq updates = 2;</code>
       */
      public Builder mergeUpdates(gamma.player.util.GammaProto.UpdateSeq value) {
        if (updatesBuilder_ == null) {
          if (updates_ != null) {
            updates_ =
              gamma.player.util.GammaProto.UpdateSeq.newBuilder(updates_).mergeFrom(value).buildPartial();
          } else {
            updates_ = value;
          }
          onChanged();
        } else {
          updatesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Update
       * </pre>
       *
       * <code>.UpdateSeq updates = 2;</code>
       */
      public Builder clearUpdates() {
        if (updatesBuilder_ == null) {
          updates_ = null;
          onChanged();
        } else {
          updates_ = null;
          updatesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Update
       * </pre>
       *
       * <code>.UpdateSeq updates = 2;</code>
       */
      public gamma.player.util.GammaProto.UpdateSeq.Builder getUpdatesBuilder() {
        
        onChanged();
        return getUpdatesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Update
       * </pre>
       *
       * <code>.UpdateSeq updates = 2;</code>
       */
      public gamma.player.util.GammaProto.UpdateSeqOrBuilder getUpdatesOrBuilder() {
        if (updatesBuilder_ != null) {
          return updatesBuilder_.getMessageOrBuilder();
        } else {
          return updates_ == null ?
              gamma.player.util.GammaProto.UpdateSeq.getDefaultInstance() : updates_;
        }
      }
      /**
       * <pre>
       * Update
       * </pre>
       *
       * <code>.UpdateSeq updates = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.UpdateSeq, gamma.player.util.GammaProto.UpdateSeq.Builder, gamma.player.util.GammaProto.UpdateSeqOrBuilder> 
          getUpdatesFieldBuilder() {
        if (updatesBuilder_ == null) {
          updatesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.UpdateSeq, gamma.player.util.GammaProto.UpdateSeq.Builder, gamma.player.util.GammaProto.UpdateSeqOrBuilder>(
                  getUpdates(),
                  getParentForChildren(),
                  isClean());
          updates_ = null;
        }
        return updatesBuilder_;
      }

      private gamma.player.util.GammaProto.RevealSeq reveals_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.RevealSeq, gamma.player.util.GammaProto.RevealSeq.Builder, gamma.player.util.GammaProto.RevealSeqOrBuilder> revealsBuilder_;
      /**
       * <pre>
       * Reveal
       * </pre>
       *
       * <code>.RevealSeq reveals = 3;</code>
       */
      public boolean hasReveals() {
        return revealsBuilder_ != null || reveals_ != null;
      }
      /**
       * <pre>
       * Reveal
       * </pre>
       *
       * <code>.RevealSeq reveals = 3;</code>
       */
      public gamma.player.util.GammaProto.RevealSeq getReveals() {
        if (revealsBuilder_ == null) {
          return reveals_ == null ? gamma.player.util.GammaProto.RevealSeq.getDefaultInstance() : reveals_;
        } else {
          return revealsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Reveal
       * </pre>
       *
       * <code>.RevealSeq reveals = 3;</code>
       */
      public Builder setReveals(gamma.player.util.GammaProto.RevealSeq value) {
        if (revealsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          reveals_ = value;
          onChanged();
        } else {
          revealsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Reveal
       * </pre>
       *
       * <code>.RevealSeq reveals = 3;</code>
       */
      public Builder setReveals(
          gamma.player.util.GammaProto.RevealSeq.Builder builderForValue) {
        if (revealsBuilder_ == null) {
          reveals_ = builderForValue.build();
          onChanged();
        } else {
          revealsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Reveal
       * </pre>
       *
       * <code>.RevealSeq reveals = 3;</code>
       */
      public Builder mergeReveals(gamma.player.util.GammaProto.RevealSeq value) {
        if (revealsBuilder_ == null) {
          if (reveals_ != null) {
            reveals_ =
              gamma.player.util.GammaProto.RevealSeq.newBuilder(reveals_).mergeFrom(value).buildPartial();
          } else {
            reveals_ = value;
          }
          onChanged();
        } else {
          revealsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Reveal
       * </pre>
       *
       * <code>.RevealSeq reveals = 3;</code>
       */
      public Builder clearReveals() {
        if (revealsBuilder_ == null) {
          reveals_ = null;
          onChanged();
        } else {
          reveals_ = null;
          revealsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Reveal
       * </pre>
       *
       * <code>.RevealSeq reveals = 3;</code>
       */
      public gamma.player.util.GammaProto.RevealSeq.Builder getRevealsBuilder() {
        
        onChanged();
        return getRevealsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Reveal
       * </pre>
       *
       * <code>.RevealSeq reveals = 3;</code>
       */
      public gamma.player.util.GammaProto.RevealSeqOrBuilder getRevealsOrBuilder() {
        if (revealsBuilder_ != null) {
          return revealsBuilder_.getMessageOrBuilder();
        } else {
          return reveals_ == null ?
              gamma.player.util.GammaProto.RevealSeq.getDefaultInstance() : reveals_;
        }
      }
      /**
       * <pre>
       * Reveal
       * </pre>
       *
       * <code>.RevealSeq reveals = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.RevealSeq, gamma.player.util.GammaProto.RevealSeq.Builder, gamma.player.util.GammaProto.RevealSeqOrBuilder> 
          getRevealsFieldBuilder() {
        if (revealsBuilder_ == null) {
          revealsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.RevealSeq, gamma.player.util.GammaProto.RevealSeq.Builder, gamma.player.util.GammaProto.RevealSeqOrBuilder>(
                  getReveals(),
                  getParentForChildren(),
                  isClean());
          reveals_ = null;
        }
        return revealsBuilder_;
      }

      private gamma.player.util.GammaProto.AddSeq adds_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.AddSeq, gamma.player.util.GammaProto.AddSeq.Builder, gamma.player.util.GammaProto.AddSeqOrBuilder> addsBuilder_;
      /**
       * <pre>
       * Add (Ident, Update)
       * </pre>
       *
       * <code>.AddSeq adds = 4;</code>
       */
      public boolean hasAdds() {
        return addsBuilder_ != null || adds_ != null;
      }
      /**
       * <pre>
       * Add (Ident, Update)
       * </pre>
       *
       * <code>.AddSeq adds = 4;</code>
       */
      public gamma.player.util.GammaProto.AddSeq getAdds() {
        if (addsBuilder_ == null) {
          return adds_ == null ? gamma.player.util.GammaProto.AddSeq.getDefaultInstance() : adds_;
        } else {
          return addsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Add (Ident, Update)
       * </pre>
       *
       * <code>.AddSeq adds = 4;</code>
       */
      public Builder setAdds(gamma.player.util.GammaProto.AddSeq value) {
        if (addsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          adds_ = value;
          onChanged();
        } else {
          addsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Add (Ident, Update)
       * </pre>
       *
       * <code>.AddSeq adds = 4;</code>
       */
      public Builder setAdds(
          gamma.player.util.GammaProto.AddSeq.Builder builderForValue) {
        if (addsBuilder_ == null) {
          adds_ = builderForValue.build();
          onChanged();
        } else {
          addsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Add (Ident, Update)
       * </pre>
       *
       * <code>.AddSeq adds = 4;</code>
       */
      public Builder mergeAdds(gamma.player.util.GammaProto.AddSeq value) {
        if (addsBuilder_ == null) {
          if (adds_ != null) {
            adds_ =
              gamma.player.util.GammaProto.AddSeq.newBuilder(adds_).mergeFrom(value).buildPartial();
          } else {
            adds_ = value;
          }
          onChanged();
        } else {
          addsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Add (Ident, Update)
       * </pre>
       *
       * <code>.AddSeq adds = 4;</code>
       */
      public Builder clearAdds() {
        if (addsBuilder_ == null) {
          adds_ = null;
          onChanged();
        } else {
          adds_ = null;
          addsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Add (Ident, Update)
       * </pre>
       *
       * <code>.AddSeq adds = 4;</code>
       */
      public gamma.player.util.GammaProto.AddSeq.Builder getAddsBuilder() {
        
        onChanged();
        return getAddsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Add (Ident, Update)
       * </pre>
       *
       * <code>.AddSeq adds = 4;</code>
       */
      public gamma.player.util.GammaProto.AddSeqOrBuilder getAddsOrBuilder() {
        if (addsBuilder_ != null) {
          return addsBuilder_.getMessageOrBuilder();
        } else {
          return adds_ == null ?
              gamma.player.util.GammaProto.AddSeq.getDefaultInstance() : adds_;
        }
      }
      /**
       * <pre>
       * Add (Ident, Update)
       * </pre>
       *
       * <code>.AddSeq adds = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.AddSeq, gamma.player.util.GammaProto.AddSeq.Builder, gamma.player.util.GammaProto.AddSeqOrBuilder> 
          getAddsFieldBuilder() {
        if (addsBuilder_ == null) {
          addsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.AddSeq, gamma.player.util.GammaProto.AddSeq.Builder, gamma.player.util.GammaProto.AddSeqOrBuilder>(
                  getAdds(),
                  getParentForChildren(),
                  isClean());
          adds_ = null;
        }
        return addsBuilder_;
      }

      private gamma.player.util.GammaProto.DelSeq dels_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.DelSeq, gamma.player.util.GammaProto.DelSeq.Builder, gamma.player.util.GammaProto.DelSeqOrBuilder> delsBuilder_;
      /**
       * <pre>
       * Del
       * </pre>
       *
       * <code>.DelSeq dels = 5;</code>
       */
      public boolean hasDels() {
        return delsBuilder_ != null || dels_ != null;
      }
      /**
       * <pre>
       * Del
       * </pre>
       *
       * <code>.DelSeq dels = 5;</code>
       */
      public gamma.player.util.GammaProto.DelSeq getDels() {
        if (delsBuilder_ == null) {
          return dels_ == null ? gamma.player.util.GammaProto.DelSeq.getDefaultInstance() : dels_;
        } else {
          return delsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Del
       * </pre>
       *
       * <code>.DelSeq dels = 5;</code>
       */
      public Builder setDels(gamma.player.util.GammaProto.DelSeq value) {
        if (delsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dels_ = value;
          onChanged();
        } else {
          delsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Del
       * </pre>
       *
       * <code>.DelSeq dels = 5;</code>
       */
      public Builder setDels(
          gamma.player.util.GammaProto.DelSeq.Builder builderForValue) {
        if (delsBuilder_ == null) {
          dels_ = builderForValue.build();
          onChanged();
        } else {
          delsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Del
       * </pre>
       *
       * <code>.DelSeq dels = 5;</code>
       */
      public Builder mergeDels(gamma.player.util.GammaProto.DelSeq value) {
        if (delsBuilder_ == null) {
          if (dels_ != null) {
            dels_ =
              gamma.player.util.GammaProto.DelSeq.newBuilder(dels_).mergeFrom(value).buildPartial();
          } else {
            dels_ = value;
          }
          onChanged();
        } else {
          delsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Del
       * </pre>
       *
       * <code>.DelSeq dels = 5;</code>
       */
      public Builder clearDels() {
        if (delsBuilder_ == null) {
          dels_ = null;
          onChanged();
        } else {
          dels_ = null;
          delsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Del
       * </pre>
       *
       * <code>.DelSeq dels = 5;</code>
       */
      public gamma.player.util.GammaProto.DelSeq.Builder getDelsBuilder() {
        
        onChanged();
        return getDelsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Del
       * </pre>
       *
       * <code>.DelSeq dels = 5;</code>
       */
      public gamma.player.util.GammaProto.DelSeqOrBuilder getDelsOrBuilder() {
        if (delsBuilder_ != null) {
          return delsBuilder_.getMessageOrBuilder();
        } else {
          return dels_ == null ?
              gamma.player.util.GammaProto.DelSeq.getDefaultInstance() : dels_;
        }
      }
      /**
       * <pre>
       * Del
       * </pre>
       *
       * <code>.DelSeq dels = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.DelSeq, gamma.player.util.GammaProto.DelSeq.Builder, gamma.player.util.GammaProto.DelSeqOrBuilder> 
          getDelsFieldBuilder() {
        if (delsBuilder_ == null) {
          delsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.DelSeq, gamma.player.util.GammaProto.DelSeq.Builder, gamma.player.util.GammaProto.DelSeqOrBuilder>(
                  getDels(),
                  getParentForChildren(),
                  isClean());
          dels_ = null;
        }
        return delsBuilder_;
      }

      private gamma.player.util.GammaProto.TerImageSeq terImages_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.TerImageSeq, gamma.player.util.GammaProto.TerImageSeq.Builder, gamma.player.util.GammaProto.TerImageSeqOrBuilder> terImagesBuilder_;
      /**
       * <pre>
       * TerImage, ImageAry
       * </pre>
       *
       * <code>.TerImageSeq ter_images = 21;</code>
       */
      public boolean hasTerImages() {
        return terImagesBuilder_ != null || terImages_ != null;
      }
      /**
       * <pre>
       * TerImage, ImageAry
       * </pre>
       *
       * <code>.TerImageSeq ter_images = 21;</code>
       */
      public gamma.player.util.GammaProto.TerImageSeq getTerImages() {
        if (terImagesBuilder_ == null) {
          return terImages_ == null ? gamma.player.util.GammaProto.TerImageSeq.getDefaultInstance() : terImages_;
        } else {
          return terImagesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * TerImage, ImageAry
       * </pre>
       *
       * <code>.TerImageSeq ter_images = 21;</code>
       */
      public Builder setTerImages(gamma.player.util.GammaProto.TerImageSeq value) {
        if (terImagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          terImages_ = value;
          onChanged();
        } else {
          terImagesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * TerImage, ImageAry
       * </pre>
       *
       * <code>.TerImageSeq ter_images = 21;</code>
       */
      public Builder setTerImages(
          gamma.player.util.GammaProto.TerImageSeq.Builder builderForValue) {
        if (terImagesBuilder_ == null) {
          terImages_ = builderForValue.build();
          onChanged();
        } else {
          terImagesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * TerImage, ImageAry
       * </pre>
       *
       * <code>.TerImageSeq ter_images = 21;</code>
       */
      public Builder mergeTerImages(gamma.player.util.GammaProto.TerImageSeq value) {
        if (terImagesBuilder_ == null) {
          if (terImages_ != null) {
            terImages_ =
              gamma.player.util.GammaProto.TerImageSeq.newBuilder(terImages_).mergeFrom(value).buildPartial();
          } else {
            terImages_ = value;
          }
          onChanged();
        } else {
          terImagesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * TerImage, ImageAry
       * </pre>
       *
       * <code>.TerImageSeq ter_images = 21;</code>
       */
      public Builder clearTerImages() {
        if (terImagesBuilder_ == null) {
          terImages_ = null;
          onChanged();
        } else {
          terImages_ = null;
          terImagesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * TerImage, ImageAry
       * </pre>
       *
       * <code>.TerImageSeq ter_images = 21;</code>
       */
      public gamma.player.util.GammaProto.TerImageSeq.Builder getTerImagesBuilder() {
        
        onChanged();
        return getTerImagesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * TerImage, ImageAry
       * </pre>
       *
       * <code>.TerImageSeq ter_images = 21;</code>
       */
      public gamma.player.util.GammaProto.TerImageSeqOrBuilder getTerImagesOrBuilder() {
        if (terImagesBuilder_ != null) {
          return terImagesBuilder_.getMessageOrBuilder();
        } else {
          return terImages_ == null ?
              gamma.player.util.GammaProto.TerImageSeq.getDefaultInstance() : terImages_;
        }
      }
      /**
       * <pre>
       * TerImage, ImageAry
       * </pre>
       *
       * <code>.TerImageSeq ter_images = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.TerImageSeq, gamma.player.util.GammaProto.TerImageSeq.Builder, gamma.player.util.GammaProto.TerImageSeqOrBuilder> 
          getTerImagesFieldBuilder() {
        if (terImagesBuilder_ == null) {
          terImagesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.TerImageSeq, gamma.player.util.GammaProto.TerImageSeq.Builder, gamma.player.util.GammaProto.TerImageSeqOrBuilder>(
                  getTerImages(),
                  getParentForChildren(),
                  isClean());
          terImages_ = null;
        }
        return terImagesBuilder_;
      }

      private gamma.player.util.GammaProto.ModImageSeq modImages_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.ModImageSeq, gamma.player.util.GammaProto.ModImageSeq.Builder, gamma.player.util.GammaProto.ModImageSeqOrBuilder> modImagesBuilder_;
      /**
       * <pre>
       * ModImage, ImageAry
       * </pre>
       *
       * <code>.ModImageSeq mod_images = 22;</code>
       */
      public boolean hasModImages() {
        return modImagesBuilder_ != null || modImages_ != null;
      }
      /**
       * <pre>
       * ModImage, ImageAry
       * </pre>
       *
       * <code>.ModImageSeq mod_images = 22;</code>
       */
      public gamma.player.util.GammaProto.ModImageSeq getModImages() {
        if (modImagesBuilder_ == null) {
          return modImages_ == null ? gamma.player.util.GammaProto.ModImageSeq.getDefaultInstance() : modImages_;
        } else {
          return modImagesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * ModImage, ImageAry
       * </pre>
       *
       * <code>.ModImageSeq mod_images = 22;</code>
       */
      public Builder setModImages(gamma.player.util.GammaProto.ModImageSeq value) {
        if (modImagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modImages_ = value;
          onChanged();
        } else {
          modImagesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * ModImage, ImageAry
       * </pre>
       *
       * <code>.ModImageSeq mod_images = 22;</code>
       */
      public Builder setModImages(
          gamma.player.util.GammaProto.ModImageSeq.Builder builderForValue) {
        if (modImagesBuilder_ == null) {
          modImages_ = builderForValue.build();
          onChanged();
        } else {
          modImagesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * ModImage, ImageAry
       * </pre>
       *
       * <code>.ModImageSeq mod_images = 22;</code>
       */
      public Builder mergeModImages(gamma.player.util.GammaProto.ModImageSeq value) {
        if (modImagesBuilder_ == null) {
          if (modImages_ != null) {
            modImages_ =
              gamma.player.util.GammaProto.ModImageSeq.newBuilder(modImages_).mergeFrom(value).buildPartial();
          } else {
            modImages_ = value;
          }
          onChanged();
        } else {
          modImagesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * ModImage, ImageAry
       * </pre>
       *
       * <code>.ModImageSeq mod_images = 22;</code>
       */
      public Builder clearModImages() {
        if (modImagesBuilder_ == null) {
          modImages_ = null;
          onChanged();
        } else {
          modImages_ = null;
          modImagesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * ModImage, ImageAry
       * </pre>
       *
       * <code>.ModImageSeq mod_images = 22;</code>
       */
      public gamma.player.util.GammaProto.ModImageSeq.Builder getModImagesBuilder() {
        
        onChanged();
        return getModImagesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * ModImage, ImageAry
       * </pre>
       *
       * <code>.ModImageSeq mod_images = 22;</code>
       */
      public gamma.player.util.GammaProto.ModImageSeqOrBuilder getModImagesOrBuilder() {
        if (modImagesBuilder_ != null) {
          return modImagesBuilder_.getMessageOrBuilder();
        } else {
          return modImages_ == null ?
              gamma.player.util.GammaProto.ModImageSeq.getDefaultInstance() : modImages_;
        }
      }
      /**
       * <pre>
       * ModImage, ImageAry
       * </pre>
       *
       * <code>.ModImageSeq mod_images = 22;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.ModImageSeq, gamma.player.util.GammaProto.ModImageSeq.Builder, gamma.player.util.GammaProto.ModImageSeqOrBuilder> 
          getModImagesFieldBuilder() {
        if (modImagesBuilder_ == null) {
          modImagesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.ModImageSeq, gamma.player.util.GammaProto.ModImageSeq.Builder, gamma.player.util.GammaProto.ModImageSeqOrBuilder>(
                  getModImages(),
                  getParentForChildren(),
                  isClean());
          modImages_ = null;
        }
        return modImagesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:AMessage)
    }

    // @@protoc_insertion_point(class_scope:AMessage)
    private static final gamma.player.util.GammaProto.AMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.AMessage();
    }

    public static gamma.player.util.GammaProto.AMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AMessage>
        PARSER = new com.google.protobuf.AbstractParser<AMessage>() {
      public AMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AMessage> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.AMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Update)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * objectId (required)
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     */
    int getId();

    /**
     * <pre>
     * hp for Unit update
     * </pre>
     *
     * <code>int32 hp = 2;</code>
     */
    int getHp();

    /**
     * <code>bool isHp = 3;</code>
     */
    boolean getIsHp();

    /**
     * <pre>
     * one of {floc, iloc}
     * </pre>
     *
     * <code>.Floc floc = 4;</code>
     */
    boolean hasFloc();
    /**
     * <pre>
     * one of {floc, iloc}
     * </pre>
     *
     * <code>.Floc floc = 4;</code>
     */
    gamma.player.util.GammaProto.Floc getFloc();
    /**
     * <pre>
     * one of {floc, iloc}
     * </pre>
     *
     * <code>.Floc floc = 4;</code>
     */
    gamma.player.util.GammaProto.FlocOrBuilder getFlocOrBuilder();

    /**
     * <code>bool is_floc = 5;</code>
     */
    boolean getIsFloc();

    /**
     * <code>.Iloc iloc = 6;</code>
     */
    boolean hasIloc();
    /**
     * <code>.Iloc iloc = 6;</code>
     */
    gamma.player.util.GammaProto.Iloc getIloc();
    /**
     * <code>.Iloc iloc = 6;</code>
     */
    gamma.player.util.GammaProto.IlocOrBuilder getIlocOrBuilder();

    /**
     * <code>bool is_iloc = 7;</code>
     */
    boolean getIsIloc();

    /**
     * <pre>
     * set expected speed: (close enough for many purposes; on keyframe set Floc/Idoc)
     * </pre>
     *
     * <code>.Dloc dloc = 8;</code>
     */
    boolean hasDloc();
    /**
     * <pre>
     * set expected speed: (close enough for many purposes; on keyframe set Floc/Idoc)
     * </pre>
     *
     * <code>.Dloc dloc = 8;</code>
     */
    gamma.player.util.GammaProto.Dloc getDloc();
    /**
     * <pre>
     * set expected speed: (close enough for many purposes; on keyframe set Floc/Idoc)
     * </pre>
     *
     * <code>.Dloc dloc = 8;</code>
     */
    gamma.player.util.GammaProto.DlocOrBuilder getDlocOrBuilder();

    /**
     * <code>bool is_dloc = 9;</code>
     */
    boolean getIsDloc();

    /**
     * <pre>
     * change of owner: push it into Ident[id]
     * </pre>
     *
     * <code>uint32 player_id = 10;</code>
     */
    int getPlayerId();

    /**
     * <pre>
     * of road...
     * </pre>
     *
     * <code>float quality = 11;</code>
     */
    float getQuality();
  }
  /**
   * <pre>
   * Unit position/health update:
   * Update-Floc, Update-Iloc, Update-Dloc, ...
   * </pre>
   *
   * Protobuf type {@code Update}
   */
  public  static final class Update extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Update)
      UpdateOrBuilder {
    // Use Update.newBuilder() to construct.
    private Update(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Update() {
      id_ = 0;
      hp_ = 0;
      isHp_ = false;
      isFloc_ = false;
      isIloc_ = false;
      isDloc_ = false;
      playerId_ = 0;
      quality_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Update(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readUInt32();
              break;
            }
            case 16: {

              hp_ = input.readInt32();
              break;
            }
            case 24: {

              isHp_ = input.readBool();
              break;
            }
            case 34: {
              gamma.player.util.GammaProto.Floc.Builder subBuilder = null;
              if (floc_ != null) {
                subBuilder = floc_.toBuilder();
              }
              floc_ = input.readMessage(gamma.player.util.GammaProto.Floc.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(floc_);
                floc_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              isFloc_ = input.readBool();
              break;
            }
            case 50: {
              gamma.player.util.GammaProto.Iloc.Builder subBuilder = null;
              if (iloc_ != null) {
                subBuilder = iloc_.toBuilder();
              }
              iloc_ = input.readMessage(gamma.player.util.GammaProto.Iloc.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(iloc_);
                iloc_ = subBuilder.buildPartial();
              }

              break;
            }
            case 56: {

              isIloc_ = input.readBool();
              break;
            }
            case 66: {
              gamma.player.util.GammaProto.Dloc.Builder subBuilder = null;
              if (dloc_ != null) {
                subBuilder = dloc_.toBuilder();
              }
              dloc_ = input.readMessage(gamma.player.util.GammaProto.Dloc.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dloc_);
                dloc_ = subBuilder.buildPartial();
              }

              break;
            }
            case 72: {

              isDloc_ = input.readBool();
              break;
            }
            case 80: {

              playerId_ = input.readUInt32();
              break;
            }
            case 93: {

              quality_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_Update_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_Update_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.Update.class, gamma.player.util.GammaProto.Update.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     * objectId (required)
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int HP_FIELD_NUMBER = 2;
    private int hp_;
    /**
     * <pre>
     * hp for Unit update
     * </pre>
     *
     * <code>int32 hp = 2;</code>
     */
    public int getHp() {
      return hp_;
    }

    public static final int ISHP_FIELD_NUMBER = 3;
    private boolean isHp_;
    /**
     * <code>bool isHp = 3;</code>
     */
    public boolean getIsHp() {
      return isHp_;
    }

    public static final int FLOC_FIELD_NUMBER = 4;
    private gamma.player.util.GammaProto.Floc floc_;
    /**
     * <pre>
     * one of {floc, iloc}
     * </pre>
     *
     * <code>.Floc floc = 4;</code>
     */
    public boolean hasFloc() {
      return floc_ != null;
    }
    /**
     * <pre>
     * one of {floc, iloc}
     * </pre>
     *
     * <code>.Floc floc = 4;</code>
     */
    public gamma.player.util.GammaProto.Floc getFloc() {
      return floc_ == null ? gamma.player.util.GammaProto.Floc.getDefaultInstance() : floc_;
    }
    /**
     * <pre>
     * one of {floc, iloc}
     * </pre>
     *
     * <code>.Floc floc = 4;</code>
     */
    public gamma.player.util.GammaProto.FlocOrBuilder getFlocOrBuilder() {
      return getFloc();
    }

    public static final int IS_FLOC_FIELD_NUMBER = 5;
    private boolean isFloc_;
    /**
     * <code>bool is_floc = 5;</code>
     */
    public boolean getIsFloc() {
      return isFloc_;
    }

    public static final int ILOC_FIELD_NUMBER = 6;
    private gamma.player.util.GammaProto.Iloc iloc_;
    /**
     * <code>.Iloc iloc = 6;</code>
     */
    public boolean hasIloc() {
      return iloc_ != null;
    }
    /**
     * <code>.Iloc iloc = 6;</code>
     */
    public gamma.player.util.GammaProto.Iloc getIloc() {
      return iloc_ == null ? gamma.player.util.GammaProto.Iloc.getDefaultInstance() : iloc_;
    }
    /**
     * <code>.Iloc iloc = 6;</code>
     */
    public gamma.player.util.GammaProto.IlocOrBuilder getIlocOrBuilder() {
      return getIloc();
    }

    public static final int IS_ILOC_FIELD_NUMBER = 7;
    private boolean isIloc_;
    /**
     * <code>bool is_iloc = 7;</code>
     */
    public boolean getIsIloc() {
      return isIloc_;
    }

    public static final int DLOC_FIELD_NUMBER = 8;
    private gamma.player.util.GammaProto.Dloc dloc_;
    /**
     * <pre>
     * set expected speed: (close enough for many purposes; on keyframe set Floc/Idoc)
     * </pre>
     *
     * <code>.Dloc dloc = 8;</code>
     */
    public boolean hasDloc() {
      return dloc_ != null;
    }
    /**
     * <pre>
     * set expected speed: (close enough for many purposes; on keyframe set Floc/Idoc)
     * </pre>
     *
     * <code>.Dloc dloc = 8;</code>
     */
    public gamma.player.util.GammaProto.Dloc getDloc() {
      return dloc_ == null ? gamma.player.util.GammaProto.Dloc.getDefaultInstance() : dloc_;
    }
    /**
     * <pre>
     * set expected speed: (close enough for many purposes; on keyframe set Floc/Idoc)
     * </pre>
     *
     * <code>.Dloc dloc = 8;</code>
     */
    public gamma.player.util.GammaProto.DlocOrBuilder getDlocOrBuilder() {
      return getDloc();
    }

    public static final int IS_DLOC_FIELD_NUMBER = 9;
    private boolean isDloc_;
    /**
     * <code>bool is_dloc = 9;</code>
     */
    public boolean getIsDloc() {
      return isDloc_;
    }

    public static final int PLAYER_ID_FIELD_NUMBER = 10;
    private int playerId_;
    /**
     * <pre>
     * change of owner: push it into Ident[id]
     * </pre>
     *
     * <code>uint32 player_id = 10;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    public static final int QUALITY_FIELD_NUMBER = 11;
    private float quality_;
    /**
     * <pre>
     * of road...
     * </pre>
     *
     * <code>float quality = 11;</code>
     */
    public float getQuality() {
      return quality_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      if (hp_ != 0) {
        output.writeInt32(2, hp_);
      }
      if (isHp_ != false) {
        output.writeBool(3, isHp_);
      }
      if (floc_ != null) {
        output.writeMessage(4, getFloc());
      }
      if (isFloc_ != false) {
        output.writeBool(5, isFloc_);
      }
      if (iloc_ != null) {
        output.writeMessage(6, getIloc());
      }
      if (isIloc_ != false) {
        output.writeBool(7, isIloc_);
      }
      if (dloc_ != null) {
        output.writeMessage(8, getDloc());
      }
      if (isDloc_ != false) {
        output.writeBool(9, isDloc_);
      }
      if (playerId_ != 0) {
        output.writeUInt32(10, playerId_);
      }
      if (quality_ != 0F) {
        output.writeFloat(11, quality_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (hp_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, hp_);
      }
      if (isHp_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isHp_);
      }
      if (floc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getFloc());
      }
      if (isFloc_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isFloc_);
      }
      if (iloc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getIloc());
      }
      if (isIloc_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isIloc_);
      }
      if (dloc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getDloc());
      }
      if (isDloc_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isDloc_);
      }
      if (playerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, playerId_);
      }
      if (quality_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, quality_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.Update)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.Update other = (gamma.player.util.GammaProto.Update) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (getHp()
          == other.getHp());
      result = result && (getIsHp()
          == other.getIsHp());
      result = result && (hasFloc() == other.hasFloc());
      if (hasFloc()) {
        result = result && getFloc()
            .equals(other.getFloc());
      }
      result = result && (getIsFloc()
          == other.getIsFloc());
      result = result && (hasIloc() == other.hasIloc());
      if (hasIloc()) {
        result = result && getIloc()
            .equals(other.getIloc());
      }
      result = result && (getIsIloc()
          == other.getIsIloc());
      result = result && (hasDloc() == other.hasDloc());
      if (hasDloc()) {
        result = result && getDloc()
            .equals(other.getDloc());
      }
      result = result && (getIsDloc()
          == other.getIsDloc());
      result = result && (getPlayerId()
          == other.getPlayerId());
      result = result && (
          java.lang.Float.floatToIntBits(getQuality())
          == java.lang.Float.floatToIntBits(
              other.getQuality()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + HP_FIELD_NUMBER;
      hash = (53 * hash) + getHp();
      hash = (37 * hash) + ISHP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsHp());
      if (hasFloc()) {
        hash = (37 * hash) + FLOC_FIELD_NUMBER;
        hash = (53 * hash) + getFloc().hashCode();
      }
      hash = (37 * hash) + IS_FLOC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsFloc());
      if (hasIloc()) {
        hash = (37 * hash) + ILOC_FIELD_NUMBER;
        hash = (53 * hash) + getIloc().hashCode();
      }
      hash = (37 * hash) + IS_ILOC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsIloc());
      if (hasDloc()) {
        hash = (37 * hash) + DLOC_FIELD_NUMBER;
        hash = (53 * hash) + getDloc().hashCode();
      }
      hash = (37 * hash) + IS_DLOC_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsDloc());
      hash = (37 * hash) + PLAYER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerId();
      hash = (37 * hash) + QUALITY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getQuality());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.Update parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Update parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Update parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Update parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Update parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Update parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Update parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Update parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Update parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Update parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.Update prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Unit position/health update:
     * Update-Floc, Update-Iloc, Update-Dloc, ...
     * </pre>
     *
     * Protobuf type {@code Update}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Update)
        gamma.player.util.GammaProto.UpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_Update_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_Update_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.Update.class, gamma.player.util.GammaProto.Update.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.Update.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;

        hp_ = 0;

        isHp_ = false;

        if (flocBuilder_ == null) {
          floc_ = null;
        } else {
          floc_ = null;
          flocBuilder_ = null;
        }
        isFloc_ = false;

        if (ilocBuilder_ == null) {
          iloc_ = null;
        } else {
          iloc_ = null;
          ilocBuilder_ = null;
        }
        isIloc_ = false;

        if (dlocBuilder_ == null) {
          dloc_ = null;
        } else {
          dloc_ = null;
          dlocBuilder_ = null;
        }
        isDloc_ = false;

        playerId_ = 0;

        quality_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_Update_descriptor;
      }

      public gamma.player.util.GammaProto.Update getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.Update.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.Update build() {
        gamma.player.util.GammaProto.Update result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.Update buildPartial() {
        gamma.player.util.GammaProto.Update result = new gamma.player.util.GammaProto.Update(this);
        result.id_ = id_;
        result.hp_ = hp_;
        result.isHp_ = isHp_;
        if (flocBuilder_ == null) {
          result.floc_ = floc_;
        } else {
          result.floc_ = flocBuilder_.build();
        }
        result.isFloc_ = isFloc_;
        if (ilocBuilder_ == null) {
          result.iloc_ = iloc_;
        } else {
          result.iloc_ = ilocBuilder_.build();
        }
        result.isIloc_ = isIloc_;
        if (dlocBuilder_ == null) {
          result.dloc_ = dloc_;
        } else {
          result.dloc_ = dlocBuilder_.build();
        }
        result.isDloc_ = isDloc_;
        result.playerId_ = playerId_;
        result.quality_ = quality_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.Update) {
          return mergeFrom((gamma.player.util.GammaProto.Update)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.Update other) {
        if (other == gamma.player.util.GammaProto.Update.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getHp() != 0) {
          setHp(other.getHp());
        }
        if (other.getIsHp() != false) {
          setIsHp(other.getIsHp());
        }
        if (other.hasFloc()) {
          mergeFloc(other.getFloc());
        }
        if (other.getIsFloc() != false) {
          setIsFloc(other.getIsFloc());
        }
        if (other.hasIloc()) {
          mergeIloc(other.getIloc());
        }
        if (other.getIsIloc() != false) {
          setIsIloc(other.getIsIloc());
        }
        if (other.hasDloc()) {
          mergeDloc(other.getDloc());
        }
        if (other.getIsDloc() != false) {
          setIsDloc(other.getIsDloc());
        }
        if (other.getPlayerId() != 0) {
          setPlayerId(other.getPlayerId());
        }
        if (other.getQuality() != 0F) {
          setQuality(other.getQuality());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.Update parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.Update) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       * objectId (required)
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * objectId (required)
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * objectId (required)
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private int hp_ ;
      /**
       * <pre>
       * hp for Unit update
       * </pre>
       *
       * <code>int32 hp = 2;</code>
       */
      public int getHp() {
        return hp_;
      }
      /**
       * <pre>
       * hp for Unit update
       * </pre>
       *
       * <code>int32 hp = 2;</code>
       */
      public Builder setHp(int value) {
        
        hp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hp for Unit update
       * </pre>
       *
       * <code>int32 hp = 2;</code>
       */
      public Builder clearHp() {
        
        hp_ = 0;
        onChanged();
        return this;
      }

      private boolean isHp_ ;
      /**
       * <code>bool isHp = 3;</code>
       */
      public boolean getIsHp() {
        return isHp_;
      }
      /**
       * <code>bool isHp = 3;</code>
       */
      public Builder setIsHp(boolean value) {
        
        isHp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool isHp = 3;</code>
       */
      public Builder clearIsHp() {
        
        isHp_ = false;
        onChanged();
        return this;
      }

      private gamma.player.util.GammaProto.Floc floc_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.Floc, gamma.player.util.GammaProto.Floc.Builder, gamma.player.util.GammaProto.FlocOrBuilder> flocBuilder_;
      /**
       * <pre>
       * one of {floc, iloc}
       * </pre>
       *
       * <code>.Floc floc = 4;</code>
       */
      public boolean hasFloc() {
        return flocBuilder_ != null || floc_ != null;
      }
      /**
       * <pre>
       * one of {floc, iloc}
       * </pre>
       *
       * <code>.Floc floc = 4;</code>
       */
      public gamma.player.util.GammaProto.Floc getFloc() {
        if (flocBuilder_ == null) {
          return floc_ == null ? gamma.player.util.GammaProto.Floc.getDefaultInstance() : floc_;
        } else {
          return flocBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * one of {floc, iloc}
       * </pre>
       *
       * <code>.Floc floc = 4;</code>
       */
      public Builder setFloc(gamma.player.util.GammaProto.Floc value) {
        if (flocBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          floc_ = value;
          onChanged();
        } else {
          flocBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * one of {floc, iloc}
       * </pre>
       *
       * <code>.Floc floc = 4;</code>
       */
      public Builder setFloc(
          gamma.player.util.GammaProto.Floc.Builder builderForValue) {
        if (flocBuilder_ == null) {
          floc_ = builderForValue.build();
          onChanged();
        } else {
          flocBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * one of {floc, iloc}
       * </pre>
       *
       * <code>.Floc floc = 4;</code>
       */
      public Builder mergeFloc(gamma.player.util.GammaProto.Floc value) {
        if (flocBuilder_ == null) {
          if (floc_ != null) {
            floc_ =
              gamma.player.util.GammaProto.Floc.newBuilder(floc_).mergeFrom(value).buildPartial();
          } else {
            floc_ = value;
          }
          onChanged();
        } else {
          flocBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * one of {floc, iloc}
       * </pre>
       *
       * <code>.Floc floc = 4;</code>
       */
      public Builder clearFloc() {
        if (flocBuilder_ == null) {
          floc_ = null;
          onChanged();
        } else {
          floc_ = null;
          flocBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * one of {floc, iloc}
       * </pre>
       *
       * <code>.Floc floc = 4;</code>
       */
      public gamma.player.util.GammaProto.Floc.Builder getFlocBuilder() {
        
        onChanged();
        return getFlocFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * one of {floc, iloc}
       * </pre>
       *
       * <code>.Floc floc = 4;</code>
       */
      public gamma.player.util.GammaProto.FlocOrBuilder getFlocOrBuilder() {
        if (flocBuilder_ != null) {
          return flocBuilder_.getMessageOrBuilder();
        } else {
          return floc_ == null ?
              gamma.player.util.GammaProto.Floc.getDefaultInstance() : floc_;
        }
      }
      /**
       * <pre>
       * one of {floc, iloc}
       * </pre>
       *
       * <code>.Floc floc = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.Floc, gamma.player.util.GammaProto.Floc.Builder, gamma.player.util.GammaProto.FlocOrBuilder> 
          getFlocFieldBuilder() {
        if (flocBuilder_ == null) {
          flocBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.Floc, gamma.player.util.GammaProto.Floc.Builder, gamma.player.util.GammaProto.FlocOrBuilder>(
                  getFloc(),
                  getParentForChildren(),
                  isClean());
          floc_ = null;
        }
        return flocBuilder_;
      }

      private boolean isFloc_ ;
      /**
       * <code>bool is_floc = 5;</code>
       */
      public boolean getIsFloc() {
        return isFloc_;
      }
      /**
       * <code>bool is_floc = 5;</code>
       */
      public Builder setIsFloc(boolean value) {
        
        isFloc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_floc = 5;</code>
       */
      public Builder clearIsFloc() {
        
        isFloc_ = false;
        onChanged();
        return this;
      }

      private gamma.player.util.GammaProto.Iloc iloc_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.Iloc, gamma.player.util.GammaProto.Iloc.Builder, gamma.player.util.GammaProto.IlocOrBuilder> ilocBuilder_;
      /**
       * <code>.Iloc iloc = 6;</code>
       */
      public boolean hasIloc() {
        return ilocBuilder_ != null || iloc_ != null;
      }
      /**
       * <code>.Iloc iloc = 6;</code>
       */
      public gamma.player.util.GammaProto.Iloc getIloc() {
        if (ilocBuilder_ == null) {
          return iloc_ == null ? gamma.player.util.GammaProto.Iloc.getDefaultInstance() : iloc_;
        } else {
          return ilocBuilder_.getMessage();
        }
      }
      /**
       * <code>.Iloc iloc = 6;</code>
       */
      public Builder setIloc(gamma.player.util.GammaProto.Iloc value) {
        if (ilocBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          iloc_ = value;
          onChanged();
        } else {
          ilocBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Iloc iloc = 6;</code>
       */
      public Builder setIloc(
          gamma.player.util.GammaProto.Iloc.Builder builderForValue) {
        if (ilocBuilder_ == null) {
          iloc_ = builderForValue.build();
          onChanged();
        } else {
          ilocBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Iloc iloc = 6;</code>
       */
      public Builder mergeIloc(gamma.player.util.GammaProto.Iloc value) {
        if (ilocBuilder_ == null) {
          if (iloc_ != null) {
            iloc_ =
              gamma.player.util.GammaProto.Iloc.newBuilder(iloc_).mergeFrom(value).buildPartial();
          } else {
            iloc_ = value;
          }
          onChanged();
        } else {
          ilocBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Iloc iloc = 6;</code>
       */
      public Builder clearIloc() {
        if (ilocBuilder_ == null) {
          iloc_ = null;
          onChanged();
        } else {
          iloc_ = null;
          ilocBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Iloc iloc = 6;</code>
       */
      public gamma.player.util.GammaProto.Iloc.Builder getIlocBuilder() {
        
        onChanged();
        return getIlocFieldBuilder().getBuilder();
      }
      /**
       * <code>.Iloc iloc = 6;</code>
       */
      public gamma.player.util.GammaProto.IlocOrBuilder getIlocOrBuilder() {
        if (ilocBuilder_ != null) {
          return ilocBuilder_.getMessageOrBuilder();
        } else {
          return iloc_ == null ?
              gamma.player.util.GammaProto.Iloc.getDefaultInstance() : iloc_;
        }
      }
      /**
       * <code>.Iloc iloc = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.Iloc, gamma.player.util.GammaProto.Iloc.Builder, gamma.player.util.GammaProto.IlocOrBuilder> 
          getIlocFieldBuilder() {
        if (ilocBuilder_ == null) {
          ilocBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.Iloc, gamma.player.util.GammaProto.Iloc.Builder, gamma.player.util.GammaProto.IlocOrBuilder>(
                  getIloc(),
                  getParentForChildren(),
                  isClean());
          iloc_ = null;
        }
        return ilocBuilder_;
      }

      private boolean isIloc_ ;
      /**
       * <code>bool is_iloc = 7;</code>
       */
      public boolean getIsIloc() {
        return isIloc_;
      }
      /**
       * <code>bool is_iloc = 7;</code>
       */
      public Builder setIsIloc(boolean value) {
        
        isIloc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_iloc = 7;</code>
       */
      public Builder clearIsIloc() {
        
        isIloc_ = false;
        onChanged();
        return this;
      }

      private gamma.player.util.GammaProto.Dloc dloc_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.Dloc, gamma.player.util.GammaProto.Dloc.Builder, gamma.player.util.GammaProto.DlocOrBuilder> dlocBuilder_;
      /**
       * <pre>
       * set expected speed: (close enough for many purposes; on keyframe set Floc/Idoc)
       * </pre>
       *
       * <code>.Dloc dloc = 8;</code>
       */
      public boolean hasDloc() {
        return dlocBuilder_ != null || dloc_ != null;
      }
      /**
       * <pre>
       * set expected speed: (close enough for many purposes; on keyframe set Floc/Idoc)
       * </pre>
       *
       * <code>.Dloc dloc = 8;</code>
       */
      public gamma.player.util.GammaProto.Dloc getDloc() {
        if (dlocBuilder_ == null) {
          return dloc_ == null ? gamma.player.util.GammaProto.Dloc.getDefaultInstance() : dloc_;
        } else {
          return dlocBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * set expected speed: (close enough for many purposes; on keyframe set Floc/Idoc)
       * </pre>
       *
       * <code>.Dloc dloc = 8;</code>
       */
      public Builder setDloc(gamma.player.util.GammaProto.Dloc value) {
        if (dlocBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dloc_ = value;
          onChanged();
        } else {
          dlocBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * set expected speed: (close enough for many purposes; on keyframe set Floc/Idoc)
       * </pre>
       *
       * <code>.Dloc dloc = 8;</code>
       */
      public Builder setDloc(
          gamma.player.util.GammaProto.Dloc.Builder builderForValue) {
        if (dlocBuilder_ == null) {
          dloc_ = builderForValue.build();
          onChanged();
        } else {
          dlocBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * set expected speed: (close enough for many purposes; on keyframe set Floc/Idoc)
       * </pre>
       *
       * <code>.Dloc dloc = 8;</code>
       */
      public Builder mergeDloc(gamma.player.util.GammaProto.Dloc value) {
        if (dlocBuilder_ == null) {
          if (dloc_ != null) {
            dloc_ =
              gamma.player.util.GammaProto.Dloc.newBuilder(dloc_).mergeFrom(value).buildPartial();
          } else {
            dloc_ = value;
          }
          onChanged();
        } else {
          dlocBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * set expected speed: (close enough for many purposes; on keyframe set Floc/Idoc)
       * </pre>
       *
       * <code>.Dloc dloc = 8;</code>
       */
      public Builder clearDloc() {
        if (dlocBuilder_ == null) {
          dloc_ = null;
          onChanged();
        } else {
          dloc_ = null;
          dlocBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * set expected speed: (close enough for many purposes; on keyframe set Floc/Idoc)
       * </pre>
       *
       * <code>.Dloc dloc = 8;</code>
       */
      public gamma.player.util.GammaProto.Dloc.Builder getDlocBuilder() {
        
        onChanged();
        return getDlocFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * set expected speed: (close enough for many purposes; on keyframe set Floc/Idoc)
       * </pre>
       *
       * <code>.Dloc dloc = 8;</code>
       */
      public gamma.player.util.GammaProto.DlocOrBuilder getDlocOrBuilder() {
        if (dlocBuilder_ != null) {
          return dlocBuilder_.getMessageOrBuilder();
        } else {
          return dloc_ == null ?
              gamma.player.util.GammaProto.Dloc.getDefaultInstance() : dloc_;
        }
      }
      /**
       * <pre>
       * set expected speed: (close enough for many purposes; on keyframe set Floc/Idoc)
       * </pre>
       *
       * <code>.Dloc dloc = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.Dloc, gamma.player.util.GammaProto.Dloc.Builder, gamma.player.util.GammaProto.DlocOrBuilder> 
          getDlocFieldBuilder() {
        if (dlocBuilder_ == null) {
          dlocBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.Dloc, gamma.player.util.GammaProto.Dloc.Builder, gamma.player.util.GammaProto.DlocOrBuilder>(
                  getDloc(),
                  getParentForChildren(),
                  isClean());
          dloc_ = null;
        }
        return dlocBuilder_;
      }

      private boolean isDloc_ ;
      /**
       * <code>bool is_dloc = 9;</code>
       */
      public boolean getIsDloc() {
        return isDloc_;
      }
      /**
       * <code>bool is_dloc = 9;</code>
       */
      public Builder setIsDloc(boolean value) {
        
        isDloc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_dloc = 9;</code>
       */
      public Builder clearIsDloc() {
        
        isDloc_ = false;
        onChanged();
        return this;
      }

      private int playerId_ ;
      /**
       * <pre>
       * change of owner: push it into Ident[id]
       * </pre>
       *
       * <code>uint32 player_id = 10;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <pre>
       * change of owner: push it into Ident[id]
       * </pre>
       *
       * <code>uint32 player_id = 10;</code>
       */
      public Builder setPlayerId(int value) {
        
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * change of owner: push it into Ident[id]
       * </pre>
       *
       * <code>uint32 player_id = 10;</code>
       */
      public Builder clearPlayerId() {
        
        playerId_ = 0;
        onChanged();
        return this;
      }

      private float quality_ ;
      /**
       * <pre>
       * of road...
       * </pre>
       *
       * <code>float quality = 11;</code>
       */
      public float getQuality() {
        return quality_;
      }
      /**
       * <pre>
       * of road...
       * </pre>
       *
       * <code>float quality = 11;</code>
       */
      public Builder setQuality(float value) {
        
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * of road...
       * </pre>
       *
       * <code>float quality = 11;</code>
       */
      public Builder clearQuality() {
        
        quality_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Update)
    }

    // @@protoc_insertion_point(class_scope:Update)
    private static final gamma.player.util.GammaProto.Update DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.Update();
    }

    public static gamma.player.util.GammaProto.Update getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Update>
        PARSER = new com.google.protobuf.AbstractParser<Update>() {
      public Update parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Update(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Update> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Update> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.Update getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpdateSeqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:UpdateSeq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Update updates = 1;</code>
     */
    java.util.List<gamma.player.util.GammaProto.Update> 
        getUpdatesList();
    /**
     * <code>repeated .Update updates = 1;</code>
     */
    gamma.player.util.GammaProto.Update getUpdates(int index);
    /**
     * <code>repeated .Update updates = 1;</code>
     */
    int getUpdatesCount();
    /**
     * <code>repeated .Update updates = 1;</code>
     */
    java.util.List<? extends gamma.player.util.GammaProto.UpdateOrBuilder> 
        getUpdatesOrBuilderList();
    /**
     * <code>repeated .Update updates = 1;</code>
     */
    gamma.player.util.GammaProto.UpdateOrBuilder getUpdatesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * comp_of AMessage
   * </pre>
   *
   * Protobuf type {@code UpdateSeq}
   */
  public  static final class UpdateSeq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:UpdateSeq)
      UpdateSeqOrBuilder {
    // Use UpdateSeq.newBuilder() to construct.
    private UpdateSeq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpdateSeq() {
      updates_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private UpdateSeq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                updates_ = new java.util.ArrayList<gamma.player.util.GammaProto.Update>();
                mutable_bitField0_ |= 0x00000001;
              }
              updates_.add(
                  input.readMessage(gamma.player.util.GammaProto.Update.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          updates_ = java.util.Collections.unmodifiableList(updates_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_UpdateSeq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_UpdateSeq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.UpdateSeq.class, gamma.player.util.GammaProto.UpdateSeq.Builder.class);
    }

    public static final int UPDATES_FIELD_NUMBER = 1;
    private java.util.List<gamma.player.util.GammaProto.Update> updates_;
    /**
     * <code>repeated .Update updates = 1;</code>
     */
    public java.util.List<gamma.player.util.GammaProto.Update> getUpdatesList() {
      return updates_;
    }
    /**
     * <code>repeated .Update updates = 1;</code>
     */
    public java.util.List<? extends gamma.player.util.GammaProto.UpdateOrBuilder> 
        getUpdatesOrBuilderList() {
      return updates_;
    }
    /**
     * <code>repeated .Update updates = 1;</code>
     */
    public int getUpdatesCount() {
      return updates_.size();
    }
    /**
     * <code>repeated .Update updates = 1;</code>
     */
    public gamma.player.util.GammaProto.Update getUpdates(int index) {
      return updates_.get(index);
    }
    /**
     * <code>repeated .Update updates = 1;</code>
     */
    public gamma.player.util.GammaProto.UpdateOrBuilder getUpdatesOrBuilder(
        int index) {
      return updates_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < updates_.size(); i++) {
        output.writeMessage(1, updates_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < updates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, updates_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.UpdateSeq)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.UpdateSeq other = (gamma.player.util.GammaProto.UpdateSeq) obj;

      boolean result = true;
      result = result && getUpdatesList()
          .equals(other.getUpdatesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getUpdatesCount() > 0) {
        hash = (37 * hash) + UPDATES_FIELD_NUMBER;
        hash = (53 * hash) + getUpdatesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.UpdateSeq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.UpdateSeq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.UpdateSeq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.UpdateSeq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.UpdateSeq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.UpdateSeq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.UpdateSeq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.UpdateSeq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.UpdateSeq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.UpdateSeq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.UpdateSeq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * comp_of AMessage
     * </pre>
     *
     * Protobuf type {@code UpdateSeq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:UpdateSeq)
        gamma.player.util.GammaProto.UpdateSeqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_UpdateSeq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_UpdateSeq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.UpdateSeq.class, gamma.player.util.GammaProto.UpdateSeq.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.UpdateSeq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getUpdatesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (updatesBuilder_ == null) {
          updates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          updatesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_UpdateSeq_descriptor;
      }

      public gamma.player.util.GammaProto.UpdateSeq getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.UpdateSeq.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.UpdateSeq build() {
        gamma.player.util.GammaProto.UpdateSeq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.UpdateSeq buildPartial() {
        gamma.player.util.GammaProto.UpdateSeq result = new gamma.player.util.GammaProto.UpdateSeq(this);
        int from_bitField0_ = bitField0_;
        if (updatesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            updates_ = java.util.Collections.unmodifiableList(updates_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.updates_ = updates_;
        } else {
          result.updates_ = updatesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.UpdateSeq) {
          return mergeFrom((gamma.player.util.GammaProto.UpdateSeq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.UpdateSeq other) {
        if (other == gamma.player.util.GammaProto.UpdateSeq.getDefaultInstance()) return this;
        if (updatesBuilder_ == null) {
          if (!other.updates_.isEmpty()) {
            if (updates_.isEmpty()) {
              updates_ = other.updates_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureUpdatesIsMutable();
              updates_.addAll(other.updates_);
            }
            onChanged();
          }
        } else {
          if (!other.updates_.isEmpty()) {
            if (updatesBuilder_.isEmpty()) {
              updatesBuilder_.dispose();
              updatesBuilder_ = null;
              updates_ = other.updates_;
              bitField0_ = (bitField0_ & ~0x00000001);
              updatesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUpdatesFieldBuilder() : null;
            } else {
              updatesBuilder_.addAllMessages(other.updates_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.UpdateSeq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.UpdateSeq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<gamma.player.util.GammaProto.Update> updates_ =
        java.util.Collections.emptyList();
      private void ensureUpdatesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          updates_ = new java.util.ArrayList<gamma.player.util.GammaProto.Update>(updates_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          gamma.player.util.GammaProto.Update, gamma.player.util.GammaProto.Update.Builder, gamma.player.util.GammaProto.UpdateOrBuilder> updatesBuilder_;

      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public java.util.List<gamma.player.util.GammaProto.Update> getUpdatesList() {
        if (updatesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(updates_);
        } else {
          return updatesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public int getUpdatesCount() {
        if (updatesBuilder_ == null) {
          return updates_.size();
        } else {
          return updatesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public gamma.player.util.GammaProto.Update getUpdates(int index) {
        if (updatesBuilder_ == null) {
          return updates_.get(index);
        } else {
          return updatesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public Builder setUpdates(
          int index, gamma.player.util.GammaProto.Update value) {
        if (updatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpdatesIsMutable();
          updates_.set(index, value);
          onChanged();
        } else {
          updatesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public Builder setUpdates(
          int index, gamma.player.util.GammaProto.Update.Builder builderForValue) {
        if (updatesBuilder_ == null) {
          ensureUpdatesIsMutable();
          updates_.set(index, builderForValue.build());
          onChanged();
        } else {
          updatesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public Builder addUpdates(gamma.player.util.GammaProto.Update value) {
        if (updatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpdatesIsMutable();
          updates_.add(value);
          onChanged();
        } else {
          updatesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public Builder addUpdates(
          int index, gamma.player.util.GammaProto.Update value) {
        if (updatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUpdatesIsMutable();
          updates_.add(index, value);
          onChanged();
        } else {
          updatesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public Builder addUpdates(
          gamma.player.util.GammaProto.Update.Builder builderForValue) {
        if (updatesBuilder_ == null) {
          ensureUpdatesIsMutable();
          updates_.add(builderForValue.build());
          onChanged();
        } else {
          updatesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public Builder addUpdates(
          int index, gamma.player.util.GammaProto.Update.Builder builderForValue) {
        if (updatesBuilder_ == null) {
          ensureUpdatesIsMutable();
          updates_.add(index, builderForValue.build());
          onChanged();
        } else {
          updatesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public Builder addAllUpdates(
          java.lang.Iterable<? extends gamma.player.util.GammaProto.Update> values) {
        if (updatesBuilder_ == null) {
          ensureUpdatesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, updates_);
          onChanged();
        } else {
          updatesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public Builder clearUpdates() {
        if (updatesBuilder_ == null) {
          updates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          updatesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public Builder removeUpdates(int index) {
        if (updatesBuilder_ == null) {
          ensureUpdatesIsMutable();
          updates_.remove(index);
          onChanged();
        } else {
          updatesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public gamma.player.util.GammaProto.Update.Builder getUpdatesBuilder(
          int index) {
        return getUpdatesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public gamma.player.util.GammaProto.UpdateOrBuilder getUpdatesOrBuilder(
          int index) {
        if (updatesBuilder_ == null) {
          return updates_.get(index);  } else {
          return updatesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public java.util.List<? extends gamma.player.util.GammaProto.UpdateOrBuilder> 
           getUpdatesOrBuilderList() {
        if (updatesBuilder_ != null) {
          return updatesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(updates_);
        }
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public gamma.player.util.GammaProto.Update.Builder addUpdatesBuilder() {
        return getUpdatesFieldBuilder().addBuilder(
            gamma.player.util.GammaProto.Update.getDefaultInstance());
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public gamma.player.util.GammaProto.Update.Builder addUpdatesBuilder(
          int index) {
        return getUpdatesFieldBuilder().addBuilder(
            index, gamma.player.util.GammaProto.Update.getDefaultInstance());
      }
      /**
       * <code>repeated .Update updates = 1;</code>
       */
      public java.util.List<gamma.player.util.GammaProto.Update.Builder> 
           getUpdatesBuilderList() {
        return getUpdatesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          gamma.player.util.GammaProto.Update, gamma.player.util.GammaProto.Update.Builder, gamma.player.util.GammaProto.UpdateOrBuilder> 
          getUpdatesFieldBuilder() {
        if (updatesBuilder_ == null) {
          updatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              gamma.player.util.GammaProto.Update, gamma.player.util.GammaProto.Update.Builder, gamma.player.util.GammaProto.UpdateOrBuilder>(
                  updates_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          updates_ = null;
        }
        return updatesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:UpdateSeq)
    }

    // @@protoc_insertion_point(class_scope:UpdateSeq)
    private static final gamma.player.util.GammaProto.UpdateSeq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.UpdateSeq();
    }

    public static gamma.player.util.GammaProto.UpdateSeq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpdateSeq>
        PARSER = new com.google.protobuf.AbstractParser<UpdateSeq>() {
      public UpdateSeq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new UpdateSeq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UpdateSeq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateSeq> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.UpdateSeq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IdentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Ident)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * unit_id, referenced in Update, Del (from Update, if missing)
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     */
    int getId();

    /**
     * <pre>
     * engineer, building, scout, etc (determines menu)
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     * engineer, building, scout, etc (determines menu)
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * ModImage of constant size icon
     * </pre>
     *
     * <code>uint32 i_ndx = 3;</code>
     */
    int getINdx();

    /**
     * <pre>
     * 2D ModImage (scaled image or shape) or 3D-model identifier
     * </pre>
     *
     * <code>uint32 m_ndx = 4;</code>
     */
    int getMNdx();

    /**
     * <pre>
     * display name for new Unit (hovertext: eng#5)
     * </pre>
     *
     * <code>string display = 8;</code>
     */
    java.lang.String getDisplay();
    /**
     * <pre>
     * display name for new Unit (hovertext: eng#5)
     * </pre>
     *
     * <code>string display = 8;</code>
     */
    com.google.protobuf.ByteString
        getDisplayBytes();

    /**
     * <pre>
     * new Unit associated with Player (player id, livery)
     * </pre>
     *
     * <code>uint32 player_id = 10;</code>
     */
    int getPlayerId();
  }
  /**
   * <pre>
   * unit identity and presentation
   * </pre>
   *
   * Protobuf type {@code Ident}
   */
  public  static final class Ident extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Ident)
      IdentOrBuilder {
    // Use Ident.newBuilder() to construct.
    private Ident(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Ident() {
      id_ = 0;
      type_ = "";
      iNdx_ = 0;
      mNdx_ = 0;
      display_ = "";
      playerId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Ident(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 24: {

              iNdx_ = input.readUInt32();
              break;
            }
            case 32: {

              mNdx_ = input.readUInt32();
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              display_ = s;
              break;
            }
            case 80: {

              playerId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_Ident_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_Ident_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.Ident.class, gamma.player.util.GammaProto.Ident.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     * unit_id, referenced in Update, Del (from Update, if missing)
     * </pre>
     *
     * <code>uint32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     * engineer, building, scout, etc (determines menu)
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * engineer, building, scout, etc (determines menu)
     * </pre>
     *
     * <code>string type = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int I_NDX_FIELD_NUMBER = 3;
    private int iNdx_;
    /**
     * <pre>
     * ModImage of constant size icon
     * </pre>
     *
     * <code>uint32 i_ndx = 3;</code>
     */
    public int getINdx() {
      return iNdx_;
    }

    public static final int M_NDX_FIELD_NUMBER = 4;
    private int mNdx_;
    /**
     * <pre>
     * 2D ModImage (scaled image or shape) or 3D-model identifier
     * </pre>
     *
     * <code>uint32 m_ndx = 4;</code>
     */
    public int getMNdx() {
      return mNdx_;
    }

    public static final int DISPLAY_FIELD_NUMBER = 8;
    private volatile java.lang.Object display_;
    /**
     * <pre>
     * display name for new Unit (hovertext: eng#5)
     * </pre>
     *
     * <code>string display = 8;</code>
     */
    public java.lang.String getDisplay() {
      java.lang.Object ref = display_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        display_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * display name for new Unit (hovertext: eng#5)
     * </pre>
     *
     * <code>string display = 8;</code>
     */
    public com.google.protobuf.ByteString
        getDisplayBytes() {
      java.lang.Object ref = display_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        display_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAYER_ID_FIELD_NUMBER = 10;
    private int playerId_;
    /**
     * <pre>
     * new Unit associated with Player (player id, livery)
     * </pre>
     *
     * <code>uint32 player_id = 10;</code>
     */
    public int getPlayerId() {
      return playerId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, type_);
      }
      if (iNdx_ != 0) {
        output.writeUInt32(3, iNdx_);
      }
      if (mNdx_ != 0) {
        output.writeUInt32(4, mNdx_);
      }
      if (!getDisplayBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, display_);
      }
      if (playerId_ != 0) {
        output.writeUInt32(10, playerId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, type_);
      }
      if (iNdx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, iNdx_);
      }
      if (mNdx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, mNdx_);
      }
      if (!getDisplayBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, display_);
      }
      if (playerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, playerId_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.Ident)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.Ident other = (gamma.player.util.GammaProto.Ident) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && getType()
          .equals(other.getType());
      result = result && (getINdx()
          == other.getINdx());
      result = result && (getMNdx()
          == other.getMNdx());
      result = result && getDisplay()
          .equals(other.getDisplay());
      result = result && (getPlayerId()
          == other.getPlayerId());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + I_NDX_FIELD_NUMBER;
      hash = (53 * hash) + getINdx();
      hash = (37 * hash) + M_NDX_FIELD_NUMBER;
      hash = (53 * hash) + getMNdx();
      hash = (37 * hash) + DISPLAY_FIELD_NUMBER;
      hash = (53 * hash) + getDisplay().hashCode();
      hash = (37 * hash) + PLAYER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.Ident parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Ident parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Ident parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Ident parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Ident parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Ident parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Ident parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Ident parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Ident parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Ident parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.Ident prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * unit identity and presentation
     * </pre>
     *
     * Protobuf type {@code Ident}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Ident)
        gamma.player.util.GammaProto.IdentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_Ident_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_Ident_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.Ident.class, gamma.player.util.GammaProto.Ident.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.Ident.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;

        type_ = "";

        iNdx_ = 0;

        mNdx_ = 0;

        display_ = "";

        playerId_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_Ident_descriptor;
      }

      public gamma.player.util.GammaProto.Ident getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.Ident.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.Ident build() {
        gamma.player.util.GammaProto.Ident result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.Ident buildPartial() {
        gamma.player.util.GammaProto.Ident result = new gamma.player.util.GammaProto.Ident(this);
        result.id_ = id_;
        result.type_ = type_;
        result.iNdx_ = iNdx_;
        result.mNdx_ = mNdx_;
        result.display_ = display_;
        result.playerId_ = playerId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.Ident) {
          return mergeFrom((gamma.player.util.GammaProto.Ident)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.Ident other) {
        if (other == gamma.player.util.GammaProto.Ident.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (other.getINdx() != 0) {
          setINdx(other.getINdx());
        }
        if (other.getMNdx() != 0) {
          setMNdx(other.getMNdx());
        }
        if (!other.getDisplay().isEmpty()) {
          display_ = other.display_;
          onChanged();
        }
        if (other.getPlayerId() != 0) {
          setPlayerId(other.getPlayerId());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.Ident parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.Ident) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       * unit_id, referenced in Update, Del (from Update, if missing)
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * unit_id, referenced in Update, Del (from Update, if missing)
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * unit_id, referenced in Update, Del (from Update, if missing)
       * </pre>
       *
       * <code>uint32 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * engineer, building, scout, etc (determines menu)
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * engineer, building, scout, etc (determines menu)
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * engineer, building, scout, etc (determines menu)
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * engineer, building, scout, etc (determines menu)
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * engineer, building, scout, etc (determines menu)
       * </pre>
       *
       * <code>string type = 2;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private int iNdx_ ;
      /**
       * <pre>
       * ModImage of constant size icon
       * </pre>
       *
       * <code>uint32 i_ndx = 3;</code>
       */
      public int getINdx() {
        return iNdx_;
      }
      /**
       * <pre>
       * ModImage of constant size icon
       * </pre>
       *
       * <code>uint32 i_ndx = 3;</code>
       */
      public Builder setINdx(int value) {
        
        iNdx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ModImage of constant size icon
       * </pre>
       *
       * <code>uint32 i_ndx = 3;</code>
       */
      public Builder clearINdx() {
        
        iNdx_ = 0;
        onChanged();
        return this;
      }

      private int mNdx_ ;
      /**
       * <pre>
       * 2D ModImage (scaled image or shape) or 3D-model identifier
       * </pre>
       *
       * <code>uint32 m_ndx = 4;</code>
       */
      public int getMNdx() {
        return mNdx_;
      }
      /**
       * <pre>
       * 2D ModImage (scaled image or shape) or 3D-model identifier
       * </pre>
       *
       * <code>uint32 m_ndx = 4;</code>
       */
      public Builder setMNdx(int value) {
        
        mNdx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 2D ModImage (scaled image or shape) or 3D-model identifier
       * </pre>
       *
       * <code>uint32 m_ndx = 4;</code>
       */
      public Builder clearMNdx() {
        
        mNdx_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object display_ = "";
      /**
       * <pre>
       * display name for new Unit (hovertext: eng#5)
       * </pre>
       *
       * <code>string display = 8;</code>
       */
      public java.lang.String getDisplay() {
        java.lang.Object ref = display_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          display_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * display name for new Unit (hovertext: eng#5)
       * </pre>
       *
       * <code>string display = 8;</code>
       */
      public com.google.protobuf.ByteString
          getDisplayBytes() {
        java.lang.Object ref = display_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          display_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * display name for new Unit (hovertext: eng#5)
       * </pre>
       *
       * <code>string display = 8;</code>
       */
      public Builder setDisplay(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        display_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * display name for new Unit (hovertext: eng#5)
       * </pre>
       *
       * <code>string display = 8;</code>
       */
      public Builder clearDisplay() {
        
        display_ = getDefaultInstance().getDisplay();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * display name for new Unit (hovertext: eng#5)
       * </pre>
       *
       * <code>string display = 8;</code>
       */
      public Builder setDisplayBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        display_ = value;
        onChanged();
        return this;
      }

      private int playerId_ ;
      /**
       * <pre>
       * new Unit associated with Player (player id, livery)
       * </pre>
       *
       * <code>uint32 player_id = 10;</code>
       */
      public int getPlayerId() {
        return playerId_;
      }
      /**
       * <pre>
       * new Unit associated with Player (player id, livery)
       * </pre>
       *
       * <code>uint32 player_id = 10;</code>
       */
      public Builder setPlayerId(int value) {
        
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * new Unit associated with Player (player id, livery)
       * </pre>
       *
       * <code>uint32 player_id = 10;</code>
       */
      public Builder clearPlayerId() {
        
        playerId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Ident)
    }

    // @@protoc_insertion_point(class_scope:Ident)
    private static final gamma.player.util.GammaProto.Ident DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.Ident();
    }

    public static gamma.player.util.GammaProto.Ident getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Ident>
        PARSER = new com.google.protobuf.AbstractParser<Ident>() {
      public Ident parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Ident(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Ident> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ident> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.Ident getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AddOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Add)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * who/what
     * </pre>
     *
     * <code>.Ident ident = 1;</code>
     */
    boolean hasIdent();
    /**
     * <pre>
     * who/what
     * </pre>
     *
     * <code>.Ident ident = 1;</code>
     */
    gamma.player.util.GammaProto.Ident getIdent();
    /**
     * <pre>
     * who/what
     * </pre>
     *
     * <code>.Ident ident = 1;</code>
     */
    gamma.player.util.GammaProto.IdentOrBuilder getIdentOrBuilder();

    /**
     * <pre>
     * where (initial value)
     * </pre>
     *
     * <code>.Update update = 2;</code>
     */
    boolean hasUpdate();
    /**
     * <pre>
     * where (initial value)
     * </pre>
     *
     * <code>.Update update = 2;</code>
     */
    gamma.player.util.GammaProto.Update getUpdate();
    /**
     * <pre>
     * where (initial value)
     * </pre>
     *
     * <code>.Update update = 2;</code>
     */
    gamma.player.util.GammaProto.UpdateOrBuilder getUpdateOrBuilder();
  }
  /**
   * <pre>
   * add Unit (or Player/Team/Civ)
   * Add { type, player, display, Update }
   * </pre>
   *
   * Protobuf type {@code Add}
   */
  public  static final class Add extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Add)
      AddOrBuilder {
    // Use Add.newBuilder() to construct.
    private Add(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Add() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Add(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              gamma.player.util.GammaProto.Ident.Builder subBuilder = null;
              if (ident_ != null) {
                subBuilder = ident_.toBuilder();
              }
              ident_ = input.readMessage(gamma.player.util.GammaProto.Ident.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ident_);
                ident_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              gamma.player.util.GammaProto.Update.Builder subBuilder = null;
              if (update_ != null) {
                subBuilder = update_.toBuilder();
              }
              update_ = input.readMessage(gamma.player.util.GammaProto.Update.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(update_);
                update_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_Add_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_Add_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.Add.class, gamma.player.util.GammaProto.Add.Builder.class);
    }

    public static final int IDENT_FIELD_NUMBER = 1;
    private gamma.player.util.GammaProto.Ident ident_;
    /**
     * <pre>
     * who/what
     * </pre>
     *
     * <code>.Ident ident = 1;</code>
     */
    public boolean hasIdent() {
      return ident_ != null;
    }
    /**
     * <pre>
     * who/what
     * </pre>
     *
     * <code>.Ident ident = 1;</code>
     */
    public gamma.player.util.GammaProto.Ident getIdent() {
      return ident_ == null ? gamma.player.util.GammaProto.Ident.getDefaultInstance() : ident_;
    }
    /**
     * <pre>
     * who/what
     * </pre>
     *
     * <code>.Ident ident = 1;</code>
     */
    public gamma.player.util.GammaProto.IdentOrBuilder getIdentOrBuilder() {
      return getIdent();
    }

    public static final int UPDATE_FIELD_NUMBER = 2;
    private gamma.player.util.GammaProto.Update update_;
    /**
     * <pre>
     * where (initial value)
     * </pre>
     *
     * <code>.Update update = 2;</code>
     */
    public boolean hasUpdate() {
      return update_ != null;
    }
    /**
     * <pre>
     * where (initial value)
     * </pre>
     *
     * <code>.Update update = 2;</code>
     */
    public gamma.player.util.GammaProto.Update getUpdate() {
      return update_ == null ? gamma.player.util.GammaProto.Update.getDefaultInstance() : update_;
    }
    /**
     * <pre>
     * where (initial value)
     * </pre>
     *
     * <code>.Update update = 2;</code>
     */
    public gamma.player.util.GammaProto.UpdateOrBuilder getUpdateOrBuilder() {
      return getUpdate();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ident_ != null) {
        output.writeMessage(1, getIdent());
      }
      if (update_ != null) {
        output.writeMessage(2, getUpdate());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ident_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIdent());
      }
      if (update_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUpdate());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.Add)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.Add other = (gamma.player.util.GammaProto.Add) obj;

      boolean result = true;
      result = result && (hasIdent() == other.hasIdent());
      if (hasIdent()) {
        result = result && getIdent()
            .equals(other.getIdent());
      }
      result = result && (hasUpdate() == other.hasUpdate());
      if (hasUpdate()) {
        result = result && getUpdate()
            .equals(other.getUpdate());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIdent()) {
        hash = (37 * hash) + IDENT_FIELD_NUMBER;
        hash = (53 * hash) + getIdent().hashCode();
      }
      if (hasUpdate()) {
        hash = (37 * hash) + UPDATE_FIELD_NUMBER;
        hash = (53 * hash) + getUpdate().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.Add parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Add parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Add parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Add parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Add parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Add parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Add parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Add parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Add parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Add parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.Add prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * add Unit (or Player/Team/Civ)
     * Add { type, player, display, Update }
     * </pre>
     *
     * Protobuf type {@code Add}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Add)
        gamma.player.util.GammaProto.AddOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_Add_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_Add_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.Add.class, gamma.player.util.GammaProto.Add.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.Add.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (identBuilder_ == null) {
          ident_ = null;
        } else {
          ident_ = null;
          identBuilder_ = null;
        }
        if (updateBuilder_ == null) {
          update_ = null;
        } else {
          update_ = null;
          updateBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_Add_descriptor;
      }

      public gamma.player.util.GammaProto.Add getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.Add.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.Add build() {
        gamma.player.util.GammaProto.Add result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.Add buildPartial() {
        gamma.player.util.GammaProto.Add result = new gamma.player.util.GammaProto.Add(this);
        if (identBuilder_ == null) {
          result.ident_ = ident_;
        } else {
          result.ident_ = identBuilder_.build();
        }
        if (updateBuilder_ == null) {
          result.update_ = update_;
        } else {
          result.update_ = updateBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.Add) {
          return mergeFrom((gamma.player.util.GammaProto.Add)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.Add other) {
        if (other == gamma.player.util.GammaProto.Add.getDefaultInstance()) return this;
        if (other.hasIdent()) {
          mergeIdent(other.getIdent());
        }
        if (other.hasUpdate()) {
          mergeUpdate(other.getUpdate());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.Add parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.Add) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private gamma.player.util.GammaProto.Ident ident_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.Ident, gamma.player.util.GammaProto.Ident.Builder, gamma.player.util.GammaProto.IdentOrBuilder> identBuilder_;
      /**
       * <pre>
       * who/what
       * </pre>
       *
       * <code>.Ident ident = 1;</code>
       */
      public boolean hasIdent() {
        return identBuilder_ != null || ident_ != null;
      }
      /**
       * <pre>
       * who/what
       * </pre>
       *
       * <code>.Ident ident = 1;</code>
       */
      public gamma.player.util.GammaProto.Ident getIdent() {
        if (identBuilder_ == null) {
          return ident_ == null ? gamma.player.util.GammaProto.Ident.getDefaultInstance() : ident_;
        } else {
          return identBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * who/what
       * </pre>
       *
       * <code>.Ident ident = 1;</code>
       */
      public Builder setIdent(gamma.player.util.GammaProto.Ident value) {
        if (identBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ident_ = value;
          onChanged();
        } else {
          identBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * who/what
       * </pre>
       *
       * <code>.Ident ident = 1;</code>
       */
      public Builder setIdent(
          gamma.player.util.GammaProto.Ident.Builder builderForValue) {
        if (identBuilder_ == null) {
          ident_ = builderForValue.build();
          onChanged();
        } else {
          identBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * who/what
       * </pre>
       *
       * <code>.Ident ident = 1;</code>
       */
      public Builder mergeIdent(gamma.player.util.GammaProto.Ident value) {
        if (identBuilder_ == null) {
          if (ident_ != null) {
            ident_ =
              gamma.player.util.GammaProto.Ident.newBuilder(ident_).mergeFrom(value).buildPartial();
          } else {
            ident_ = value;
          }
          onChanged();
        } else {
          identBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * who/what
       * </pre>
       *
       * <code>.Ident ident = 1;</code>
       */
      public Builder clearIdent() {
        if (identBuilder_ == null) {
          ident_ = null;
          onChanged();
        } else {
          ident_ = null;
          identBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * who/what
       * </pre>
       *
       * <code>.Ident ident = 1;</code>
       */
      public gamma.player.util.GammaProto.Ident.Builder getIdentBuilder() {
        
        onChanged();
        return getIdentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * who/what
       * </pre>
       *
       * <code>.Ident ident = 1;</code>
       */
      public gamma.player.util.GammaProto.IdentOrBuilder getIdentOrBuilder() {
        if (identBuilder_ != null) {
          return identBuilder_.getMessageOrBuilder();
        } else {
          return ident_ == null ?
              gamma.player.util.GammaProto.Ident.getDefaultInstance() : ident_;
        }
      }
      /**
       * <pre>
       * who/what
       * </pre>
       *
       * <code>.Ident ident = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.Ident, gamma.player.util.GammaProto.Ident.Builder, gamma.player.util.GammaProto.IdentOrBuilder> 
          getIdentFieldBuilder() {
        if (identBuilder_ == null) {
          identBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.Ident, gamma.player.util.GammaProto.Ident.Builder, gamma.player.util.GammaProto.IdentOrBuilder>(
                  getIdent(),
                  getParentForChildren(),
                  isClean());
          ident_ = null;
        }
        return identBuilder_;
      }

      private gamma.player.util.GammaProto.Update update_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.Update, gamma.player.util.GammaProto.Update.Builder, gamma.player.util.GammaProto.UpdateOrBuilder> updateBuilder_;
      /**
       * <pre>
       * where (initial value)
       * </pre>
       *
       * <code>.Update update = 2;</code>
       */
      public boolean hasUpdate() {
        return updateBuilder_ != null || update_ != null;
      }
      /**
       * <pre>
       * where (initial value)
       * </pre>
       *
       * <code>.Update update = 2;</code>
       */
      public gamma.player.util.GammaProto.Update getUpdate() {
        if (updateBuilder_ == null) {
          return update_ == null ? gamma.player.util.GammaProto.Update.getDefaultInstance() : update_;
        } else {
          return updateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * where (initial value)
       * </pre>
       *
       * <code>.Update update = 2;</code>
       */
      public Builder setUpdate(gamma.player.util.GammaProto.Update value) {
        if (updateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          update_ = value;
          onChanged();
        } else {
          updateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * where (initial value)
       * </pre>
       *
       * <code>.Update update = 2;</code>
       */
      public Builder setUpdate(
          gamma.player.util.GammaProto.Update.Builder builderForValue) {
        if (updateBuilder_ == null) {
          update_ = builderForValue.build();
          onChanged();
        } else {
          updateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * where (initial value)
       * </pre>
       *
       * <code>.Update update = 2;</code>
       */
      public Builder mergeUpdate(gamma.player.util.GammaProto.Update value) {
        if (updateBuilder_ == null) {
          if (update_ != null) {
            update_ =
              gamma.player.util.GammaProto.Update.newBuilder(update_).mergeFrom(value).buildPartial();
          } else {
            update_ = value;
          }
          onChanged();
        } else {
          updateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * where (initial value)
       * </pre>
       *
       * <code>.Update update = 2;</code>
       */
      public Builder clearUpdate() {
        if (updateBuilder_ == null) {
          update_ = null;
          onChanged();
        } else {
          update_ = null;
          updateBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * where (initial value)
       * </pre>
       *
       * <code>.Update update = 2;</code>
       */
      public gamma.player.util.GammaProto.Update.Builder getUpdateBuilder() {
        
        onChanged();
        return getUpdateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * where (initial value)
       * </pre>
       *
       * <code>.Update update = 2;</code>
       */
      public gamma.player.util.GammaProto.UpdateOrBuilder getUpdateOrBuilder() {
        if (updateBuilder_ != null) {
          return updateBuilder_.getMessageOrBuilder();
        } else {
          return update_ == null ?
              gamma.player.util.GammaProto.Update.getDefaultInstance() : update_;
        }
      }
      /**
       * <pre>
       * where (initial value)
       * </pre>
       *
       * <code>.Update update = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.Update, gamma.player.util.GammaProto.Update.Builder, gamma.player.util.GammaProto.UpdateOrBuilder> 
          getUpdateFieldBuilder() {
        if (updateBuilder_ == null) {
          updateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.Update, gamma.player.util.GammaProto.Update.Builder, gamma.player.util.GammaProto.UpdateOrBuilder>(
                  getUpdate(),
                  getParentForChildren(),
                  isClean());
          update_ = null;
        }
        return updateBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Add)
    }

    // @@protoc_insertion_point(class_scope:Add)
    private static final gamma.player.util.GammaProto.Add DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.Add();
    }

    public static gamma.player.util.GammaProto.Add getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Add>
        PARSER = new com.google.protobuf.AbstractParser<Add>() {
      public Add parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Add(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Add> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Add> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.Add getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AddSeqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:AddSeq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Add adds = 1;</code>
     */
    java.util.List<gamma.player.util.GammaProto.Add> 
        getAddsList();
    /**
     * <code>repeated .Add adds = 1;</code>
     */
    gamma.player.util.GammaProto.Add getAdds(int index);
    /**
     * <code>repeated .Add adds = 1;</code>
     */
    int getAddsCount();
    /**
     * <code>repeated .Add adds = 1;</code>
     */
    java.util.List<? extends gamma.player.util.GammaProto.AddOrBuilder> 
        getAddsOrBuilderList();
    /**
     * <code>repeated .Add adds = 1;</code>
     */
    gamma.player.util.GammaProto.AddOrBuilder getAddsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * comp_of AMessage
   * </pre>
   *
   * Protobuf type {@code AddSeq}
   */
  public  static final class AddSeq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:AddSeq)
      AddSeqOrBuilder {
    // Use AddSeq.newBuilder() to construct.
    private AddSeq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AddSeq() {
      adds_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AddSeq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                adds_ = new java.util.ArrayList<gamma.player.util.GammaProto.Add>();
                mutable_bitField0_ |= 0x00000001;
              }
              adds_.add(
                  input.readMessage(gamma.player.util.GammaProto.Add.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          adds_ = java.util.Collections.unmodifiableList(adds_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_AddSeq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_AddSeq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.AddSeq.class, gamma.player.util.GammaProto.AddSeq.Builder.class);
    }

    public static final int ADDS_FIELD_NUMBER = 1;
    private java.util.List<gamma.player.util.GammaProto.Add> adds_;
    /**
     * <code>repeated .Add adds = 1;</code>
     */
    public java.util.List<gamma.player.util.GammaProto.Add> getAddsList() {
      return adds_;
    }
    /**
     * <code>repeated .Add adds = 1;</code>
     */
    public java.util.List<? extends gamma.player.util.GammaProto.AddOrBuilder> 
        getAddsOrBuilderList() {
      return adds_;
    }
    /**
     * <code>repeated .Add adds = 1;</code>
     */
    public int getAddsCount() {
      return adds_.size();
    }
    /**
     * <code>repeated .Add adds = 1;</code>
     */
    public gamma.player.util.GammaProto.Add getAdds(int index) {
      return adds_.get(index);
    }
    /**
     * <code>repeated .Add adds = 1;</code>
     */
    public gamma.player.util.GammaProto.AddOrBuilder getAddsOrBuilder(
        int index) {
      return adds_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < adds_.size(); i++) {
        output.writeMessage(1, adds_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < adds_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, adds_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.AddSeq)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.AddSeq other = (gamma.player.util.GammaProto.AddSeq) obj;

      boolean result = true;
      result = result && getAddsList()
          .equals(other.getAddsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getAddsCount() > 0) {
        hash = (37 * hash) + ADDS_FIELD_NUMBER;
        hash = (53 * hash) + getAddsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.AddSeq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.AddSeq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.AddSeq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.AddSeq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.AddSeq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.AddSeq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.AddSeq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.AddSeq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.AddSeq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.AddSeq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.AddSeq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * comp_of AMessage
     * </pre>
     *
     * Protobuf type {@code AddSeq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:AddSeq)
        gamma.player.util.GammaProto.AddSeqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_AddSeq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_AddSeq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.AddSeq.class, gamma.player.util.GammaProto.AddSeq.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.AddSeq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAddsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (addsBuilder_ == null) {
          adds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          addsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_AddSeq_descriptor;
      }

      public gamma.player.util.GammaProto.AddSeq getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.AddSeq.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.AddSeq build() {
        gamma.player.util.GammaProto.AddSeq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.AddSeq buildPartial() {
        gamma.player.util.GammaProto.AddSeq result = new gamma.player.util.GammaProto.AddSeq(this);
        int from_bitField0_ = bitField0_;
        if (addsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            adds_ = java.util.Collections.unmodifiableList(adds_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.adds_ = adds_;
        } else {
          result.adds_ = addsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.AddSeq) {
          return mergeFrom((gamma.player.util.GammaProto.AddSeq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.AddSeq other) {
        if (other == gamma.player.util.GammaProto.AddSeq.getDefaultInstance()) return this;
        if (addsBuilder_ == null) {
          if (!other.adds_.isEmpty()) {
            if (adds_.isEmpty()) {
              adds_ = other.adds_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAddsIsMutable();
              adds_.addAll(other.adds_);
            }
            onChanged();
          }
        } else {
          if (!other.adds_.isEmpty()) {
            if (addsBuilder_.isEmpty()) {
              addsBuilder_.dispose();
              addsBuilder_ = null;
              adds_ = other.adds_;
              bitField0_ = (bitField0_ & ~0x00000001);
              addsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAddsFieldBuilder() : null;
            } else {
              addsBuilder_.addAllMessages(other.adds_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.AddSeq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.AddSeq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<gamma.player.util.GammaProto.Add> adds_ =
        java.util.Collections.emptyList();
      private void ensureAddsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          adds_ = new java.util.ArrayList<gamma.player.util.GammaProto.Add>(adds_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          gamma.player.util.GammaProto.Add, gamma.player.util.GammaProto.Add.Builder, gamma.player.util.GammaProto.AddOrBuilder> addsBuilder_;

      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public java.util.List<gamma.player.util.GammaProto.Add> getAddsList() {
        if (addsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(adds_);
        } else {
          return addsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public int getAddsCount() {
        if (addsBuilder_ == null) {
          return adds_.size();
        } else {
          return addsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public gamma.player.util.GammaProto.Add getAdds(int index) {
        if (addsBuilder_ == null) {
          return adds_.get(index);
        } else {
          return addsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public Builder setAdds(
          int index, gamma.player.util.GammaProto.Add value) {
        if (addsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAddsIsMutable();
          adds_.set(index, value);
          onChanged();
        } else {
          addsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public Builder setAdds(
          int index, gamma.player.util.GammaProto.Add.Builder builderForValue) {
        if (addsBuilder_ == null) {
          ensureAddsIsMutable();
          adds_.set(index, builderForValue.build());
          onChanged();
        } else {
          addsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public Builder addAdds(gamma.player.util.GammaProto.Add value) {
        if (addsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAddsIsMutable();
          adds_.add(value);
          onChanged();
        } else {
          addsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public Builder addAdds(
          int index, gamma.player.util.GammaProto.Add value) {
        if (addsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAddsIsMutable();
          adds_.add(index, value);
          onChanged();
        } else {
          addsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public Builder addAdds(
          gamma.player.util.GammaProto.Add.Builder builderForValue) {
        if (addsBuilder_ == null) {
          ensureAddsIsMutable();
          adds_.add(builderForValue.build());
          onChanged();
        } else {
          addsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public Builder addAdds(
          int index, gamma.player.util.GammaProto.Add.Builder builderForValue) {
        if (addsBuilder_ == null) {
          ensureAddsIsMutable();
          adds_.add(index, builderForValue.build());
          onChanged();
        } else {
          addsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public Builder addAllAdds(
          java.lang.Iterable<? extends gamma.player.util.GammaProto.Add> values) {
        if (addsBuilder_ == null) {
          ensureAddsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, adds_);
          onChanged();
        } else {
          addsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public Builder clearAdds() {
        if (addsBuilder_ == null) {
          adds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          addsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public Builder removeAdds(int index) {
        if (addsBuilder_ == null) {
          ensureAddsIsMutable();
          adds_.remove(index);
          onChanged();
        } else {
          addsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public gamma.player.util.GammaProto.Add.Builder getAddsBuilder(
          int index) {
        return getAddsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public gamma.player.util.GammaProto.AddOrBuilder getAddsOrBuilder(
          int index) {
        if (addsBuilder_ == null) {
          return adds_.get(index);  } else {
          return addsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public java.util.List<? extends gamma.player.util.GammaProto.AddOrBuilder> 
           getAddsOrBuilderList() {
        if (addsBuilder_ != null) {
          return addsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(adds_);
        }
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public gamma.player.util.GammaProto.Add.Builder addAddsBuilder() {
        return getAddsFieldBuilder().addBuilder(
            gamma.player.util.GammaProto.Add.getDefaultInstance());
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public gamma.player.util.GammaProto.Add.Builder addAddsBuilder(
          int index) {
        return getAddsFieldBuilder().addBuilder(
            index, gamma.player.util.GammaProto.Add.getDefaultInstance());
      }
      /**
       * <code>repeated .Add adds = 1;</code>
       */
      public java.util.List<gamma.player.util.GammaProto.Add.Builder> 
           getAddsBuilderList() {
        return getAddsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          gamma.player.util.GammaProto.Add, gamma.player.util.GammaProto.Add.Builder, gamma.player.util.GammaProto.AddOrBuilder> 
          getAddsFieldBuilder() {
        if (addsBuilder_ == null) {
          addsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              gamma.player.util.GammaProto.Add, gamma.player.util.GammaProto.Add.Builder, gamma.player.util.GammaProto.AddOrBuilder>(
                  adds_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          adds_ = null;
        }
        return addsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:AddSeq)
    }

    // @@protoc_insertion_point(class_scope:AddSeq)
    private static final gamma.player.util.GammaProto.AddSeq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.AddSeq();
    }

    public static gamma.player.util.GammaProto.AddSeq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AddSeq>
        PARSER = new com.google.protobuf.AbstractParser<AddSeq>() {
      public AddSeq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AddSeq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AddSeq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AddSeq> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.AddSeq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Del)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * required
     * </pre>
     *
     * <code>uint32 id = 2;</code>
     */
    int getId();
  }
  /**
   * <pre>
   * comp_of DelSeq
   * </pre>
   *
   * Protobuf type {@code Del}
   */
  public  static final class Del extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Del)
      DelOrBuilder {
    // Use Del.newBuilder() to construct.
    private Del(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Del() {
      id_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Del(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 16: {

              id_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_Del_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_Del_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.Del.class, gamma.player.util.GammaProto.Del.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <pre>
     * required
     * </pre>
     *
     * <code>uint32 id = 2;</code>
     */
    public int getId() {
      return id_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(2, id_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, id_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.Del)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.Del other = (gamma.player.util.GammaProto.Del) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.Del parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Del parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Del parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.Del parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Del parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Del parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Del parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Del parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.Del parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.Del parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.Del prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * comp_of DelSeq
     * </pre>
     *
     * Protobuf type {@code Del}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Del)
        gamma.player.util.GammaProto.DelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_Del_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_Del_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.Del.class, gamma.player.util.GammaProto.Del.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.Del.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_Del_descriptor;
      }

      public gamma.player.util.GammaProto.Del getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.Del.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.Del build() {
        gamma.player.util.GammaProto.Del result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.Del buildPartial() {
        gamma.player.util.GammaProto.Del result = new gamma.player.util.GammaProto.Del(this);
        result.id_ = id_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.Del) {
          return mergeFrom((gamma.player.util.GammaProto.Del)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.Del other) {
        if (other == gamma.player.util.GammaProto.Del.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.Del parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.Del) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       * required
       * </pre>
       *
       * <code>uint32 id = 2;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * required
       * </pre>
       *
       * <code>uint32 id = 2;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * required
       * </pre>
       *
       * <code>uint32 id = 2;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Del)
    }

    // @@protoc_insertion_point(class_scope:Del)
    private static final gamma.player.util.GammaProto.Del DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.Del();
    }

    public static gamma.player.util.GammaProto.Del getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Del>
        PARSER = new com.google.protobuf.AbstractParser<Del>() {
      public Del parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Del(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Del> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Del> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.Del getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DelSeqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DelSeq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Del dels = 1;</code>
     */
    java.util.List<gamma.player.util.GammaProto.Del> 
        getDelsList();
    /**
     * <code>repeated .Del dels = 1;</code>
     */
    gamma.player.util.GammaProto.Del getDels(int index);
    /**
     * <code>repeated .Del dels = 1;</code>
     */
    int getDelsCount();
    /**
     * <code>repeated .Del dels = 1;</code>
     */
    java.util.List<? extends gamma.player.util.GammaProto.DelOrBuilder> 
        getDelsOrBuilderList();
    /**
     * <code>repeated .Del dels = 1;</code>
     */
    gamma.player.util.GammaProto.DelOrBuilder getDelsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * comp_of AMessage
   * </pre>
   *
   * Protobuf type {@code DelSeq}
   */
  public  static final class DelSeq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DelSeq)
      DelSeqOrBuilder {
    // Use DelSeq.newBuilder() to construct.
    private DelSeq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DelSeq() {
      dels_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DelSeq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dels_ = new java.util.ArrayList<gamma.player.util.GammaProto.Del>();
                mutable_bitField0_ |= 0x00000001;
              }
              dels_.add(
                  input.readMessage(gamma.player.util.GammaProto.Del.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dels_ = java.util.Collections.unmodifiableList(dels_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_DelSeq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_DelSeq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.DelSeq.class, gamma.player.util.GammaProto.DelSeq.Builder.class);
    }

    public static final int DELS_FIELD_NUMBER = 1;
    private java.util.List<gamma.player.util.GammaProto.Del> dels_;
    /**
     * <code>repeated .Del dels = 1;</code>
     */
    public java.util.List<gamma.player.util.GammaProto.Del> getDelsList() {
      return dels_;
    }
    /**
     * <code>repeated .Del dels = 1;</code>
     */
    public java.util.List<? extends gamma.player.util.GammaProto.DelOrBuilder> 
        getDelsOrBuilderList() {
      return dels_;
    }
    /**
     * <code>repeated .Del dels = 1;</code>
     */
    public int getDelsCount() {
      return dels_.size();
    }
    /**
     * <code>repeated .Del dels = 1;</code>
     */
    public gamma.player.util.GammaProto.Del getDels(int index) {
      return dels_.get(index);
    }
    /**
     * <code>repeated .Del dels = 1;</code>
     */
    public gamma.player.util.GammaProto.DelOrBuilder getDelsOrBuilder(
        int index) {
      return dels_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < dels_.size(); i++) {
        output.writeMessage(1, dels_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < dels_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, dels_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.DelSeq)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.DelSeq other = (gamma.player.util.GammaProto.DelSeq) obj;

      boolean result = true;
      result = result && getDelsList()
          .equals(other.getDelsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDelsCount() > 0) {
        hash = (37 * hash) + DELS_FIELD_NUMBER;
        hash = (53 * hash) + getDelsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.DelSeq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.DelSeq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.DelSeq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.DelSeq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.DelSeq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.DelSeq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.DelSeq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.DelSeq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.DelSeq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.DelSeq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.DelSeq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * comp_of AMessage
     * </pre>
     *
     * Protobuf type {@code DelSeq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DelSeq)
        gamma.player.util.GammaProto.DelSeqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_DelSeq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_DelSeq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.DelSeq.class, gamma.player.util.GammaProto.DelSeq.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.DelSeq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDelsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (delsBuilder_ == null) {
          dels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          delsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_DelSeq_descriptor;
      }

      public gamma.player.util.GammaProto.DelSeq getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.DelSeq.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.DelSeq build() {
        gamma.player.util.GammaProto.DelSeq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.DelSeq buildPartial() {
        gamma.player.util.GammaProto.DelSeq result = new gamma.player.util.GammaProto.DelSeq(this);
        int from_bitField0_ = bitField0_;
        if (delsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            dels_ = java.util.Collections.unmodifiableList(dels_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.dels_ = dels_;
        } else {
          result.dels_ = delsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.DelSeq) {
          return mergeFrom((gamma.player.util.GammaProto.DelSeq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.DelSeq other) {
        if (other == gamma.player.util.GammaProto.DelSeq.getDefaultInstance()) return this;
        if (delsBuilder_ == null) {
          if (!other.dels_.isEmpty()) {
            if (dels_.isEmpty()) {
              dels_ = other.dels_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDelsIsMutable();
              dels_.addAll(other.dels_);
            }
            onChanged();
          }
        } else {
          if (!other.dels_.isEmpty()) {
            if (delsBuilder_.isEmpty()) {
              delsBuilder_.dispose();
              delsBuilder_ = null;
              dels_ = other.dels_;
              bitField0_ = (bitField0_ & ~0x00000001);
              delsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDelsFieldBuilder() : null;
            } else {
              delsBuilder_.addAllMessages(other.dels_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.DelSeq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.DelSeq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<gamma.player.util.GammaProto.Del> dels_ =
        java.util.Collections.emptyList();
      private void ensureDelsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dels_ = new java.util.ArrayList<gamma.player.util.GammaProto.Del>(dels_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          gamma.player.util.GammaProto.Del, gamma.player.util.GammaProto.Del.Builder, gamma.player.util.GammaProto.DelOrBuilder> delsBuilder_;

      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public java.util.List<gamma.player.util.GammaProto.Del> getDelsList() {
        if (delsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dels_);
        } else {
          return delsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public int getDelsCount() {
        if (delsBuilder_ == null) {
          return dels_.size();
        } else {
          return delsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public gamma.player.util.GammaProto.Del getDels(int index) {
        if (delsBuilder_ == null) {
          return dels_.get(index);
        } else {
          return delsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public Builder setDels(
          int index, gamma.player.util.GammaProto.Del value) {
        if (delsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDelsIsMutable();
          dels_.set(index, value);
          onChanged();
        } else {
          delsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public Builder setDels(
          int index, gamma.player.util.GammaProto.Del.Builder builderForValue) {
        if (delsBuilder_ == null) {
          ensureDelsIsMutable();
          dels_.set(index, builderForValue.build());
          onChanged();
        } else {
          delsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public Builder addDels(gamma.player.util.GammaProto.Del value) {
        if (delsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDelsIsMutable();
          dels_.add(value);
          onChanged();
        } else {
          delsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public Builder addDels(
          int index, gamma.player.util.GammaProto.Del value) {
        if (delsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDelsIsMutable();
          dels_.add(index, value);
          onChanged();
        } else {
          delsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public Builder addDels(
          gamma.player.util.GammaProto.Del.Builder builderForValue) {
        if (delsBuilder_ == null) {
          ensureDelsIsMutable();
          dels_.add(builderForValue.build());
          onChanged();
        } else {
          delsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public Builder addDels(
          int index, gamma.player.util.GammaProto.Del.Builder builderForValue) {
        if (delsBuilder_ == null) {
          ensureDelsIsMutable();
          dels_.add(index, builderForValue.build());
          onChanged();
        } else {
          delsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public Builder addAllDels(
          java.lang.Iterable<? extends gamma.player.util.GammaProto.Del> values) {
        if (delsBuilder_ == null) {
          ensureDelsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dels_);
          onChanged();
        } else {
          delsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public Builder clearDels() {
        if (delsBuilder_ == null) {
          dels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          delsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public Builder removeDels(int index) {
        if (delsBuilder_ == null) {
          ensureDelsIsMutable();
          dels_.remove(index);
          onChanged();
        } else {
          delsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public gamma.player.util.GammaProto.Del.Builder getDelsBuilder(
          int index) {
        return getDelsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public gamma.player.util.GammaProto.DelOrBuilder getDelsOrBuilder(
          int index) {
        if (delsBuilder_ == null) {
          return dels_.get(index);  } else {
          return delsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public java.util.List<? extends gamma.player.util.GammaProto.DelOrBuilder> 
           getDelsOrBuilderList() {
        if (delsBuilder_ != null) {
          return delsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dels_);
        }
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public gamma.player.util.GammaProto.Del.Builder addDelsBuilder() {
        return getDelsFieldBuilder().addBuilder(
            gamma.player.util.GammaProto.Del.getDefaultInstance());
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public gamma.player.util.GammaProto.Del.Builder addDelsBuilder(
          int index) {
        return getDelsFieldBuilder().addBuilder(
            index, gamma.player.util.GammaProto.Del.getDefaultInstance());
      }
      /**
       * <code>repeated .Del dels = 1;</code>
       */
      public java.util.List<gamma.player.util.GammaProto.Del.Builder> 
           getDelsBuilderList() {
        return getDelsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          gamma.player.util.GammaProto.Del, gamma.player.util.GammaProto.Del.Builder, gamma.player.util.GammaProto.DelOrBuilder> 
          getDelsFieldBuilder() {
        if (delsBuilder_ == null) {
          delsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              gamma.player.util.GammaProto.Del, gamma.player.util.GammaProto.Del.Builder, gamma.player.util.GammaProto.DelOrBuilder>(
                  dels_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          dels_ = null;
        }
        return delsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:DelSeq)
    }

    // @@protoc_insertion_point(class_scope:DelSeq)
    private static final gamma.player.util.GammaProto.DelSeq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.DelSeq();
    }

    public static gamma.player.util.GammaProto.DelSeq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DelSeq>
        PARSER = new com.google.protobuf.AbstractParser<DelSeq>() {
      public DelSeq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DelSeq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DelSeq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DelSeq> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.DelSeq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TerRunXOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TerRunX)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * cells to reveal = dx+1 [dx default=0]
     * </pre>
     *
     * <code>int32 dx = 2;</code>
     */
    int getDx();

    /**
     * <pre>
     * 10-bits(zndx) + 6bit(tv)
     * </pre>
     *
     * <code>int32 ztv = 3;</code>
     */
    int getZtv();
  }
  /**
   * <pre>
   * from iloc(x,y) do set (x..+dx,y) to (ztv = zndx,tv)
   * </pre>
   *
   * Protobuf type {@code TerRunX}
   */
  public  static final class TerRunX extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TerRunX)
      TerRunXOrBuilder {
    // Use TerRunX.newBuilder() to construct.
    private TerRunX(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TerRunX() {
      dx_ = 0;
      ztv_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TerRunX(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 16: {

              dx_ = input.readInt32();
              break;
            }
            case 24: {

              ztv_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_TerRunX_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_TerRunX_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.TerRunX.class, gamma.player.util.GammaProto.TerRunX.Builder.class);
    }

    public static final int DX_FIELD_NUMBER = 2;
    private int dx_;
    /**
     * <pre>
     * cells to reveal = dx+1 [dx default=0]
     * </pre>
     *
     * <code>int32 dx = 2;</code>
     */
    public int getDx() {
      return dx_;
    }

    public static final int ZTV_FIELD_NUMBER = 3;
    private int ztv_;
    /**
     * <pre>
     * 10-bits(zndx) + 6bit(tv)
     * </pre>
     *
     * <code>int32 ztv = 3;</code>
     */
    public int getZtv() {
      return ztv_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (dx_ != 0) {
        output.writeInt32(2, dx_);
      }
      if (ztv_ != 0) {
        output.writeInt32(3, ztv_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, dx_);
      }
      if (ztv_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, ztv_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.TerRunX)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.TerRunX other = (gamma.player.util.GammaProto.TerRunX) obj;

      boolean result = true;
      result = result && (getDx()
          == other.getDx());
      result = result && (getZtv()
          == other.getZtv());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DX_FIELD_NUMBER;
      hash = (53 * hash) + getDx();
      hash = (37 * hash) + ZTV_FIELD_NUMBER;
      hash = (53 * hash) + getZtv();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.TerRunX parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.TerRunX parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerRunX parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.TerRunX parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerRunX parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.TerRunX parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerRunX parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.TerRunX parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerRunX parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.TerRunX parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.TerRunX prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * from iloc(x,y) do set (x..+dx,y) to (ztv = zndx,tv)
     * </pre>
     *
     * Protobuf type {@code TerRunX}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TerRunX)
        gamma.player.util.GammaProto.TerRunXOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_TerRunX_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_TerRunX_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.TerRunX.class, gamma.player.util.GammaProto.TerRunX.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.TerRunX.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        dx_ = 0;

        ztv_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_TerRunX_descriptor;
      }

      public gamma.player.util.GammaProto.TerRunX getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.TerRunX.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.TerRunX build() {
        gamma.player.util.GammaProto.TerRunX result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.TerRunX buildPartial() {
        gamma.player.util.GammaProto.TerRunX result = new gamma.player.util.GammaProto.TerRunX(this);
        result.dx_ = dx_;
        result.ztv_ = ztv_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.TerRunX) {
          return mergeFrom((gamma.player.util.GammaProto.TerRunX)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.TerRunX other) {
        if (other == gamma.player.util.GammaProto.TerRunX.getDefaultInstance()) return this;
        if (other.getDx() != 0) {
          setDx(other.getDx());
        }
        if (other.getZtv() != 0) {
          setZtv(other.getZtv());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.TerRunX parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.TerRunX) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int dx_ ;
      /**
       * <pre>
       * cells to reveal = dx+1 [dx default=0]
       * </pre>
       *
       * <code>int32 dx = 2;</code>
       */
      public int getDx() {
        return dx_;
      }
      /**
       * <pre>
       * cells to reveal = dx+1 [dx default=0]
       * </pre>
       *
       * <code>int32 dx = 2;</code>
       */
      public Builder setDx(int value) {
        
        dx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * cells to reveal = dx+1 [dx default=0]
       * </pre>
       *
       * <code>int32 dx = 2;</code>
       */
      public Builder clearDx() {
        
        dx_ = 0;
        onChanged();
        return this;
      }

      private int ztv_ ;
      /**
       * <pre>
       * 10-bits(zndx) + 6bit(tv)
       * </pre>
       *
       * <code>int32 ztv = 3;</code>
       */
      public int getZtv() {
        return ztv_;
      }
      /**
       * <pre>
       * 10-bits(zndx) + 6bit(tv)
       * </pre>
       *
       * <code>int32 ztv = 3;</code>
       */
      public Builder setZtv(int value) {
        
        ztv_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 10-bits(zndx) + 6bit(tv)
       * </pre>
       *
       * <code>int32 ztv = 3;</code>
       */
      public Builder clearZtv() {
        
        ztv_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:TerRunX)
    }

    // @@protoc_insertion_point(class_scope:TerRunX)
    private static final gamma.player.util.GammaProto.TerRunX DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.TerRunX();
    }

    public static gamma.player.util.GammaProto.TerRunX getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TerRunX>
        PARSER = new com.google.protobuf.AbstractParser<TerRunX>() {
      public TerRunX parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TerRunX(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TerRunX> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TerRunX> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.TerRunX getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TerRowYOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TerRowY)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * start at (y,x) [upper-left corner]
     * </pre>
     *
     * <code>.Iloc loc = 1;</code>
     */
    boolean hasLoc();
    /**
     * <pre>
     * start at (y,x) [upper-left corner]
     * </pre>
     *
     * <code>.Iloc loc = 1;</code>
     */
    gamma.player.util.GammaProto.Iloc getLoc();
    /**
     * <pre>
     * start at (y,x) [upper-left corner]
     * </pre>
     *
     * <code>.Iloc loc = 1;</code>
     */
    gamma.player.util.GammaProto.IlocOrBuilder getLocOrBuilder();

    /**
     * <pre>
     * for each runx: for x+=0..dx: reveal(y,x, ztv) 
     * </pre>
     *
     * <code>repeated .TerRunX runx = 2;</code>
     */
    java.util.List<gamma.player.util.GammaProto.TerRunX> 
        getRunxList();
    /**
     * <pre>
     * for each runx: for x+=0..dx: reveal(y,x, ztv) 
     * </pre>
     *
     * <code>repeated .TerRunX runx = 2;</code>
     */
    gamma.player.util.GammaProto.TerRunX getRunx(int index);
    /**
     * <pre>
     * for each runx: for x+=0..dx: reveal(y,x, ztv) 
     * </pre>
     *
     * <code>repeated .TerRunX runx = 2;</code>
     */
    int getRunxCount();
    /**
     * <pre>
     * for each runx: for x+=0..dx: reveal(y,x, ztv) 
     * </pre>
     *
     * <code>repeated .TerRunX runx = 2;</code>
     */
    java.util.List<? extends gamma.player.util.GammaProto.TerRunXOrBuilder> 
        getRunxOrBuilderList();
    /**
     * <pre>
     * for each runx: for x+=0..dx: reveal(y,x, ztv) 
     * </pre>
     *
     * <code>repeated .TerRunX runx = 2;</code>
     */
    gamma.player.util.GammaProto.TerRunXOrBuilder getRunxOrBuilder(
        int index);
  }
  /**
   * <pre>
   * comp_of RevealSeq
   * </pre>
   *
   * Protobuf type {@code TerRowY}
   */
  public  static final class TerRowY extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TerRowY)
      TerRowYOrBuilder {
    // Use TerRowY.newBuilder() to construct.
    private TerRowY(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TerRowY() {
      runx_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TerRowY(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              gamma.player.util.GammaProto.Iloc.Builder subBuilder = null;
              if (loc_ != null) {
                subBuilder = loc_.toBuilder();
              }
              loc_ = input.readMessage(gamma.player.util.GammaProto.Iloc.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(loc_);
                loc_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                runx_ = new java.util.ArrayList<gamma.player.util.GammaProto.TerRunX>();
                mutable_bitField0_ |= 0x00000002;
              }
              runx_.add(
                  input.readMessage(gamma.player.util.GammaProto.TerRunX.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          runx_ = java.util.Collections.unmodifiableList(runx_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_TerRowY_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_TerRowY_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.TerRowY.class, gamma.player.util.GammaProto.TerRowY.Builder.class);
    }

    private int bitField0_;
    public static final int LOC_FIELD_NUMBER = 1;
    private gamma.player.util.GammaProto.Iloc loc_;
    /**
     * <pre>
     * start at (y,x) [upper-left corner]
     * </pre>
     *
     * <code>.Iloc loc = 1;</code>
     */
    public boolean hasLoc() {
      return loc_ != null;
    }
    /**
     * <pre>
     * start at (y,x) [upper-left corner]
     * </pre>
     *
     * <code>.Iloc loc = 1;</code>
     */
    public gamma.player.util.GammaProto.Iloc getLoc() {
      return loc_ == null ? gamma.player.util.GammaProto.Iloc.getDefaultInstance() : loc_;
    }
    /**
     * <pre>
     * start at (y,x) [upper-left corner]
     * </pre>
     *
     * <code>.Iloc loc = 1;</code>
     */
    public gamma.player.util.GammaProto.IlocOrBuilder getLocOrBuilder() {
      return getLoc();
    }

    public static final int RUNX_FIELD_NUMBER = 2;
    private java.util.List<gamma.player.util.GammaProto.TerRunX> runx_;
    /**
     * <pre>
     * for each runx: for x+=0..dx: reveal(y,x, ztv) 
     * </pre>
     *
     * <code>repeated .TerRunX runx = 2;</code>
     */
    public java.util.List<gamma.player.util.GammaProto.TerRunX> getRunxList() {
      return runx_;
    }
    /**
     * <pre>
     * for each runx: for x+=0..dx: reveal(y,x, ztv) 
     * </pre>
     *
     * <code>repeated .TerRunX runx = 2;</code>
     */
    public java.util.List<? extends gamma.player.util.GammaProto.TerRunXOrBuilder> 
        getRunxOrBuilderList() {
      return runx_;
    }
    /**
     * <pre>
     * for each runx: for x+=0..dx: reveal(y,x, ztv) 
     * </pre>
     *
     * <code>repeated .TerRunX runx = 2;</code>
     */
    public int getRunxCount() {
      return runx_.size();
    }
    /**
     * <pre>
     * for each runx: for x+=0..dx: reveal(y,x, ztv) 
     * </pre>
     *
     * <code>repeated .TerRunX runx = 2;</code>
     */
    public gamma.player.util.GammaProto.TerRunX getRunx(int index) {
      return runx_.get(index);
    }
    /**
     * <pre>
     * for each runx: for x+=0..dx: reveal(y,x, ztv) 
     * </pre>
     *
     * <code>repeated .TerRunX runx = 2;</code>
     */
    public gamma.player.util.GammaProto.TerRunXOrBuilder getRunxOrBuilder(
        int index) {
      return runx_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (loc_ != null) {
        output.writeMessage(1, getLoc());
      }
      for (int i = 0; i < runx_.size(); i++) {
        output.writeMessage(2, runx_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (loc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLoc());
      }
      for (int i = 0; i < runx_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, runx_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.TerRowY)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.TerRowY other = (gamma.player.util.GammaProto.TerRowY) obj;

      boolean result = true;
      result = result && (hasLoc() == other.hasLoc());
      if (hasLoc()) {
        result = result && getLoc()
            .equals(other.getLoc());
      }
      result = result && getRunxList()
          .equals(other.getRunxList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLoc()) {
        hash = (37 * hash) + LOC_FIELD_NUMBER;
        hash = (53 * hash) + getLoc().hashCode();
      }
      if (getRunxCount() > 0) {
        hash = (37 * hash) + RUNX_FIELD_NUMBER;
        hash = (53 * hash) + getRunxList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.TerRowY parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.TerRowY parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerRowY parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.TerRowY parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerRowY parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.TerRowY parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerRowY parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.TerRowY parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerRowY parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.TerRowY parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.TerRowY prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * comp_of RevealSeq
     * </pre>
     *
     * Protobuf type {@code TerRowY}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TerRowY)
        gamma.player.util.GammaProto.TerRowYOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_TerRowY_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_TerRowY_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.TerRowY.class, gamma.player.util.GammaProto.TerRowY.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.TerRowY.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRunxFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (locBuilder_ == null) {
          loc_ = null;
        } else {
          loc_ = null;
          locBuilder_ = null;
        }
        if (runxBuilder_ == null) {
          runx_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          runxBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_TerRowY_descriptor;
      }

      public gamma.player.util.GammaProto.TerRowY getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.TerRowY.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.TerRowY build() {
        gamma.player.util.GammaProto.TerRowY result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.TerRowY buildPartial() {
        gamma.player.util.GammaProto.TerRowY result = new gamma.player.util.GammaProto.TerRowY(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (locBuilder_ == null) {
          result.loc_ = loc_;
        } else {
          result.loc_ = locBuilder_.build();
        }
        if (runxBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            runx_ = java.util.Collections.unmodifiableList(runx_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.runx_ = runx_;
        } else {
          result.runx_ = runxBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.TerRowY) {
          return mergeFrom((gamma.player.util.GammaProto.TerRowY)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.TerRowY other) {
        if (other == gamma.player.util.GammaProto.TerRowY.getDefaultInstance()) return this;
        if (other.hasLoc()) {
          mergeLoc(other.getLoc());
        }
        if (runxBuilder_ == null) {
          if (!other.runx_.isEmpty()) {
            if (runx_.isEmpty()) {
              runx_ = other.runx_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRunxIsMutable();
              runx_.addAll(other.runx_);
            }
            onChanged();
          }
        } else {
          if (!other.runx_.isEmpty()) {
            if (runxBuilder_.isEmpty()) {
              runxBuilder_.dispose();
              runxBuilder_ = null;
              runx_ = other.runx_;
              bitField0_ = (bitField0_ & ~0x00000002);
              runxBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRunxFieldBuilder() : null;
            } else {
              runxBuilder_.addAllMessages(other.runx_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.TerRowY parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.TerRowY) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private gamma.player.util.GammaProto.Iloc loc_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.Iloc, gamma.player.util.GammaProto.Iloc.Builder, gamma.player.util.GammaProto.IlocOrBuilder> locBuilder_;
      /**
       * <pre>
       * start at (y,x) [upper-left corner]
       * </pre>
       *
       * <code>.Iloc loc = 1;</code>
       */
      public boolean hasLoc() {
        return locBuilder_ != null || loc_ != null;
      }
      /**
       * <pre>
       * start at (y,x) [upper-left corner]
       * </pre>
       *
       * <code>.Iloc loc = 1;</code>
       */
      public gamma.player.util.GammaProto.Iloc getLoc() {
        if (locBuilder_ == null) {
          return loc_ == null ? gamma.player.util.GammaProto.Iloc.getDefaultInstance() : loc_;
        } else {
          return locBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * start at (y,x) [upper-left corner]
       * </pre>
       *
       * <code>.Iloc loc = 1;</code>
       */
      public Builder setLoc(gamma.player.util.GammaProto.Iloc value) {
        if (locBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          loc_ = value;
          onChanged();
        } else {
          locBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * start at (y,x) [upper-left corner]
       * </pre>
       *
       * <code>.Iloc loc = 1;</code>
       */
      public Builder setLoc(
          gamma.player.util.GammaProto.Iloc.Builder builderForValue) {
        if (locBuilder_ == null) {
          loc_ = builderForValue.build();
          onChanged();
        } else {
          locBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * start at (y,x) [upper-left corner]
       * </pre>
       *
       * <code>.Iloc loc = 1;</code>
       */
      public Builder mergeLoc(gamma.player.util.GammaProto.Iloc value) {
        if (locBuilder_ == null) {
          if (loc_ != null) {
            loc_ =
              gamma.player.util.GammaProto.Iloc.newBuilder(loc_).mergeFrom(value).buildPartial();
          } else {
            loc_ = value;
          }
          onChanged();
        } else {
          locBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * start at (y,x) [upper-left corner]
       * </pre>
       *
       * <code>.Iloc loc = 1;</code>
       */
      public Builder clearLoc() {
        if (locBuilder_ == null) {
          loc_ = null;
          onChanged();
        } else {
          loc_ = null;
          locBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * start at (y,x) [upper-left corner]
       * </pre>
       *
       * <code>.Iloc loc = 1;</code>
       */
      public gamma.player.util.GammaProto.Iloc.Builder getLocBuilder() {
        
        onChanged();
        return getLocFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * start at (y,x) [upper-left corner]
       * </pre>
       *
       * <code>.Iloc loc = 1;</code>
       */
      public gamma.player.util.GammaProto.IlocOrBuilder getLocOrBuilder() {
        if (locBuilder_ != null) {
          return locBuilder_.getMessageOrBuilder();
        } else {
          return loc_ == null ?
              gamma.player.util.GammaProto.Iloc.getDefaultInstance() : loc_;
        }
      }
      /**
       * <pre>
       * start at (y,x) [upper-left corner]
       * </pre>
       *
       * <code>.Iloc loc = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.Iloc, gamma.player.util.GammaProto.Iloc.Builder, gamma.player.util.GammaProto.IlocOrBuilder> 
          getLocFieldBuilder() {
        if (locBuilder_ == null) {
          locBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.Iloc, gamma.player.util.GammaProto.Iloc.Builder, gamma.player.util.GammaProto.IlocOrBuilder>(
                  getLoc(),
                  getParentForChildren(),
                  isClean());
          loc_ = null;
        }
        return locBuilder_;
      }

      private java.util.List<gamma.player.util.GammaProto.TerRunX> runx_ =
        java.util.Collections.emptyList();
      private void ensureRunxIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          runx_ = new java.util.ArrayList<gamma.player.util.GammaProto.TerRunX>(runx_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          gamma.player.util.GammaProto.TerRunX, gamma.player.util.GammaProto.TerRunX.Builder, gamma.player.util.GammaProto.TerRunXOrBuilder> runxBuilder_;

      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public java.util.List<gamma.player.util.GammaProto.TerRunX> getRunxList() {
        if (runxBuilder_ == null) {
          return java.util.Collections.unmodifiableList(runx_);
        } else {
          return runxBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public int getRunxCount() {
        if (runxBuilder_ == null) {
          return runx_.size();
        } else {
          return runxBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public gamma.player.util.GammaProto.TerRunX getRunx(int index) {
        if (runxBuilder_ == null) {
          return runx_.get(index);
        } else {
          return runxBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public Builder setRunx(
          int index, gamma.player.util.GammaProto.TerRunX value) {
        if (runxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRunxIsMutable();
          runx_.set(index, value);
          onChanged();
        } else {
          runxBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public Builder setRunx(
          int index, gamma.player.util.GammaProto.TerRunX.Builder builderForValue) {
        if (runxBuilder_ == null) {
          ensureRunxIsMutable();
          runx_.set(index, builderForValue.build());
          onChanged();
        } else {
          runxBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public Builder addRunx(gamma.player.util.GammaProto.TerRunX value) {
        if (runxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRunxIsMutable();
          runx_.add(value);
          onChanged();
        } else {
          runxBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public Builder addRunx(
          int index, gamma.player.util.GammaProto.TerRunX value) {
        if (runxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRunxIsMutable();
          runx_.add(index, value);
          onChanged();
        } else {
          runxBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public Builder addRunx(
          gamma.player.util.GammaProto.TerRunX.Builder builderForValue) {
        if (runxBuilder_ == null) {
          ensureRunxIsMutable();
          runx_.add(builderForValue.build());
          onChanged();
        } else {
          runxBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public Builder addRunx(
          int index, gamma.player.util.GammaProto.TerRunX.Builder builderForValue) {
        if (runxBuilder_ == null) {
          ensureRunxIsMutable();
          runx_.add(index, builderForValue.build());
          onChanged();
        } else {
          runxBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public Builder addAllRunx(
          java.lang.Iterable<? extends gamma.player.util.GammaProto.TerRunX> values) {
        if (runxBuilder_ == null) {
          ensureRunxIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, runx_);
          onChanged();
        } else {
          runxBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public Builder clearRunx() {
        if (runxBuilder_ == null) {
          runx_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          runxBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public Builder removeRunx(int index) {
        if (runxBuilder_ == null) {
          ensureRunxIsMutable();
          runx_.remove(index);
          onChanged();
        } else {
          runxBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public gamma.player.util.GammaProto.TerRunX.Builder getRunxBuilder(
          int index) {
        return getRunxFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public gamma.player.util.GammaProto.TerRunXOrBuilder getRunxOrBuilder(
          int index) {
        if (runxBuilder_ == null) {
          return runx_.get(index);  } else {
          return runxBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public java.util.List<? extends gamma.player.util.GammaProto.TerRunXOrBuilder> 
           getRunxOrBuilderList() {
        if (runxBuilder_ != null) {
          return runxBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(runx_);
        }
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public gamma.player.util.GammaProto.TerRunX.Builder addRunxBuilder() {
        return getRunxFieldBuilder().addBuilder(
            gamma.player.util.GammaProto.TerRunX.getDefaultInstance());
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public gamma.player.util.GammaProto.TerRunX.Builder addRunxBuilder(
          int index) {
        return getRunxFieldBuilder().addBuilder(
            index, gamma.player.util.GammaProto.TerRunX.getDefaultInstance());
      }
      /**
       * <pre>
       * for each runx: for x+=0..dx: reveal(y,x, ztv) 
       * </pre>
       *
       * <code>repeated .TerRunX runx = 2;</code>
       */
      public java.util.List<gamma.player.util.GammaProto.TerRunX.Builder> 
           getRunxBuilderList() {
        return getRunxFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          gamma.player.util.GammaProto.TerRunX, gamma.player.util.GammaProto.TerRunX.Builder, gamma.player.util.GammaProto.TerRunXOrBuilder> 
          getRunxFieldBuilder() {
        if (runxBuilder_ == null) {
          runxBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              gamma.player.util.GammaProto.TerRunX, gamma.player.util.GammaProto.TerRunX.Builder, gamma.player.util.GammaProto.TerRunXOrBuilder>(
                  runx_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          runx_ = null;
        }
        return runxBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:TerRowY)
    }

    // @@protoc_insertion_point(class_scope:TerRowY)
    private static final gamma.player.util.GammaProto.TerRowY DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.TerRowY();
    }

    public static gamma.player.util.GammaProto.TerRowY getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TerRowY>
        PARSER = new com.google.protobuf.AbstractParser<TerRowY>() {
      public TerRowY parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TerRowY(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TerRowY> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TerRowY> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.TerRowY getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RevealSeqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RevealSeq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .TerRowY rowy = 1;</code>
     */
    java.util.List<gamma.player.util.GammaProto.TerRowY> 
        getRowyList();
    /**
     * <code>repeated .TerRowY rowy = 1;</code>
     */
    gamma.player.util.GammaProto.TerRowY getRowy(int index);
    /**
     * <code>repeated .TerRowY rowy = 1;</code>
     */
    int getRowyCount();
    /**
     * <code>repeated .TerRowY rowy = 1;</code>
     */
    java.util.List<? extends gamma.player.util.GammaProto.TerRowYOrBuilder> 
        getRowyOrBuilderList();
    /**
     * <code>repeated .TerRowY rowy = 1;</code>
     */
    gamma.player.util.GammaProto.TerRowYOrBuilder getRowyOrBuilder(
        int index);
  }
  /**
   * <pre>
   * comp_of AMessage
   * </pre>
   *
   * Protobuf type {@code RevealSeq}
   */
  public  static final class RevealSeq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RevealSeq)
      RevealSeqOrBuilder {
    // Use RevealSeq.newBuilder() to construct.
    private RevealSeq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RevealSeq() {
      rowy_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RevealSeq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                rowy_ = new java.util.ArrayList<gamma.player.util.GammaProto.TerRowY>();
                mutable_bitField0_ |= 0x00000001;
              }
              rowy_.add(
                  input.readMessage(gamma.player.util.GammaProto.TerRowY.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          rowy_ = java.util.Collections.unmodifiableList(rowy_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_RevealSeq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_RevealSeq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.RevealSeq.class, gamma.player.util.GammaProto.RevealSeq.Builder.class);
    }

    public static final int ROWY_FIELD_NUMBER = 1;
    private java.util.List<gamma.player.util.GammaProto.TerRowY> rowy_;
    /**
     * <code>repeated .TerRowY rowy = 1;</code>
     */
    public java.util.List<gamma.player.util.GammaProto.TerRowY> getRowyList() {
      return rowy_;
    }
    /**
     * <code>repeated .TerRowY rowy = 1;</code>
     */
    public java.util.List<? extends gamma.player.util.GammaProto.TerRowYOrBuilder> 
        getRowyOrBuilderList() {
      return rowy_;
    }
    /**
     * <code>repeated .TerRowY rowy = 1;</code>
     */
    public int getRowyCount() {
      return rowy_.size();
    }
    /**
     * <code>repeated .TerRowY rowy = 1;</code>
     */
    public gamma.player.util.GammaProto.TerRowY getRowy(int index) {
      return rowy_.get(index);
    }
    /**
     * <code>repeated .TerRowY rowy = 1;</code>
     */
    public gamma.player.util.GammaProto.TerRowYOrBuilder getRowyOrBuilder(
        int index) {
      return rowy_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rowy_.size(); i++) {
        output.writeMessage(1, rowy_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rowy_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rowy_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.RevealSeq)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.RevealSeq other = (gamma.player.util.GammaProto.RevealSeq) obj;

      boolean result = true;
      result = result && getRowyList()
          .equals(other.getRowyList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRowyCount() > 0) {
        hash = (37 * hash) + ROWY_FIELD_NUMBER;
        hash = (53 * hash) + getRowyList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.RevealSeq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.RevealSeq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.RevealSeq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.RevealSeq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.RevealSeq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.RevealSeq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.RevealSeq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.RevealSeq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.RevealSeq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.RevealSeq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.RevealSeq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * comp_of AMessage
     * </pre>
     *
     * Protobuf type {@code RevealSeq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RevealSeq)
        gamma.player.util.GammaProto.RevealSeqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_RevealSeq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_RevealSeq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.RevealSeq.class, gamma.player.util.GammaProto.RevealSeq.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.RevealSeq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRowyFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (rowyBuilder_ == null) {
          rowy_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rowyBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_RevealSeq_descriptor;
      }

      public gamma.player.util.GammaProto.RevealSeq getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.RevealSeq.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.RevealSeq build() {
        gamma.player.util.GammaProto.RevealSeq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.RevealSeq buildPartial() {
        gamma.player.util.GammaProto.RevealSeq result = new gamma.player.util.GammaProto.RevealSeq(this);
        int from_bitField0_ = bitField0_;
        if (rowyBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            rowy_ = java.util.Collections.unmodifiableList(rowy_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rowy_ = rowy_;
        } else {
          result.rowy_ = rowyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.RevealSeq) {
          return mergeFrom((gamma.player.util.GammaProto.RevealSeq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.RevealSeq other) {
        if (other == gamma.player.util.GammaProto.RevealSeq.getDefaultInstance()) return this;
        if (rowyBuilder_ == null) {
          if (!other.rowy_.isEmpty()) {
            if (rowy_.isEmpty()) {
              rowy_ = other.rowy_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRowyIsMutable();
              rowy_.addAll(other.rowy_);
            }
            onChanged();
          }
        } else {
          if (!other.rowy_.isEmpty()) {
            if (rowyBuilder_.isEmpty()) {
              rowyBuilder_.dispose();
              rowyBuilder_ = null;
              rowy_ = other.rowy_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rowyBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRowyFieldBuilder() : null;
            } else {
              rowyBuilder_.addAllMessages(other.rowy_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.RevealSeq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.RevealSeq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<gamma.player.util.GammaProto.TerRowY> rowy_ =
        java.util.Collections.emptyList();
      private void ensureRowyIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          rowy_ = new java.util.ArrayList<gamma.player.util.GammaProto.TerRowY>(rowy_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          gamma.player.util.GammaProto.TerRowY, gamma.player.util.GammaProto.TerRowY.Builder, gamma.player.util.GammaProto.TerRowYOrBuilder> rowyBuilder_;

      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public java.util.List<gamma.player.util.GammaProto.TerRowY> getRowyList() {
        if (rowyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rowy_);
        } else {
          return rowyBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public int getRowyCount() {
        if (rowyBuilder_ == null) {
          return rowy_.size();
        } else {
          return rowyBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public gamma.player.util.GammaProto.TerRowY getRowy(int index) {
        if (rowyBuilder_ == null) {
          return rowy_.get(index);
        } else {
          return rowyBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public Builder setRowy(
          int index, gamma.player.util.GammaProto.TerRowY value) {
        if (rowyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowyIsMutable();
          rowy_.set(index, value);
          onChanged();
        } else {
          rowyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public Builder setRowy(
          int index, gamma.player.util.GammaProto.TerRowY.Builder builderForValue) {
        if (rowyBuilder_ == null) {
          ensureRowyIsMutable();
          rowy_.set(index, builderForValue.build());
          onChanged();
        } else {
          rowyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public Builder addRowy(gamma.player.util.GammaProto.TerRowY value) {
        if (rowyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowyIsMutable();
          rowy_.add(value);
          onChanged();
        } else {
          rowyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public Builder addRowy(
          int index, gamma.player.util.GammaProto.TerRowY value) {
        if (rowyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRowyIsMutable();
          rowy_.add(index, value);
          onChanged();
        } else {
          rowyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public Builder addRowy(
          gamma.player.util.GammaProto.TerRowY.Builder builderForValue) {
        if (rowyBuilder_ == null) {
          ensureRowyIsMutable();
          rowy_.add(builderForValue.build());
          onChanged();
        } else {
          rowyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public Builder addRowy(
          int index, gamma.player.util.GammaProto.TerRowY.Builder builderForValue) {
        if (rowyBuilder_ == null) {
          ensureRowyIsMutable();
          rowy_.add(index, builderForValue.build());
          onChanged();
        } else {
          rowyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public Builder addAllRowy(
          java.lang.Iterable<? extends gamma.player.util.GammaProto.TerRowY> values) {
        if (rowyBuilder_ == null) {
          ensureRowyIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rowy_);
          onChanged();
        } else {
          rowyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public Builder clearRowy() {
        if (rowyBuilder_ == null) {
          rowy_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rowyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public Builder removeRowy(int index) {
        if (rowyBuilder_ == null) {
          ensureRowyIsMutable();
          rowy_.remove(index);
          onChanged();
        } else {
          rowyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public gamma.player.util.GammaProto.TerRowY.Builder getRowyBuilder(
          int index) {
        return getRowyFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public gamma.player.util.GammaProto.TerRowYOrBuilder getRowyOrBuilder(
          int index) {
        if (rowyBuilder_ == null) {
          return rowy_.get(index);  } else {
          return rowyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public java.util.List<? extends gamma.player.util.GammaProto.TerRowYOrBuilder> 
           getRowyOrBuilderList() {
        if (rowyBuilder_ != null) {
          return rowyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rowy_);
        }
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public gamma.player.util.GammaProto.TerRowY.Builder addRowyBuilder() {
        return getRowyFieldBuilder().addBuilder(
            gamma.player.util.GammaProto.TerRowY.getDefaultInstance());
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public gamma.player.util.GammaProto.TerRowY.Builder addRowyBuilder(
          int index) {
        return getRowyFieldBuilder().addBuilder(
            index, gamma.player.util.GammaProto.TerRowY.getDefaultInstance());
      }
      /**
       * <code>repeated .TerRowY rowy = 1;</code>
       */
      public java.util.List<gamma.player.util.GammaProto.TerRowY.Builder> 
           getRowyBuilderList() {
        return getRowyFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          gamma.player.util.GammaProto.TerRowY, gamma.player.util.GammaProto.TerRowY.Builder, gamma.player.util.GammaProto.TerRowYOrBuilder> 
          getRowyFieldBuilder() {
        if (rowyBuilder_ == null) {
          rowyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              gamma.player.util.GammaProto.TerRowY, gamma.player.util.GammaProto.TerRowY.Builder, gamma.player.util.GammaProto.TerRowYOrBuilder>(
                  rowy_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          rowy_ = null;
        }
        return rowyBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:RevealSeq)
    }

    // @@protoc_insertion_point(class_scope:RevealSeq)
    private static final gamma.player.util.GammaProto.RevealSeq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.RevealSeq();
    }

    public static gamma.player.util.GammaProto.RevealSeq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RevealSeq>
        PARSER = new com.google.protobuf.AbstractParser<RevealSeq>() {
      public RevealSeq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RevealSeq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RevealSeq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RevealSeq> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.RevealSeq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SubImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SubImage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * npixels*(r=tvid/ncols)
     * </pre>
     *
     * <code>uint32 y0 = 2;</code>
     */
    int getY0();

    /**
     * <pre>
     * npixels*(c=tvid%ncols)
     * </pre>
     *
     * <code>uint32 x0 = 3;</code>
     */
    int getX0();

    /**
     * <pre>
     * npixels
     * </pre>
     *
     * <code>uint32 y_px = 4;</code>
     */
    int getYPx();

    /**
     * <pre>
     * npixels
     * </pre>
     *
     * <code>uint32 x_px = 5;</code>
     */
    int getXPx();

    /**
     * <pre>
     * 0 (offset to drag/rotate center)
     * </pre>
     *
     * <code>uint32 y_off = 6;</code>
     */
    int getYOff();

    /**
     * <pre>
     * 0 (offset to drag/rotate center)
     * </pre>
     *
     * <code>uint32 x_off = 7;</code>
     */
    int getXOff();

    /**
     * <pre>
     * use alternative image (RARE)
     * </pre>
     *
     * <code>string alt_url = 8;</code>
     */
    java.lang.String getAltUrl();
    /**
     * <pre>
     * use alternative image (RARE)
     * </pre>
     *
     * <code>string alt_url = 8;</code>
     */
    com.google.protobuf.ByteString
        getAltUrlBytes();
  }
  /**
   * <pre>
   * override implict image location (from parsing ndx relative to ImageAry)
   * </pre>
   *
   * Protobuf type {@code SubImage}
   */
  public  static final class SubImage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SubImage)
      SubImageOrBuilder {
    // Use SubImage.newBuilder() to construct.
    private SubImage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SubImage() {
      y0_ = 0;
      x0_ = 0;
      yPx_ = 0;
      xPx_ = 0;
      yOff_ = 0;
      xOff_ = 0;
      altUrl_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SubImage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 16: {

              y0_ = input.readUInt32();
              break;
            }
            case 24: {

              x0_ = input.readUInt32();
              break;
            }
            case 32: {

              yPx_ = input.readUInt32();
              break;
            }
            case 40: {

              xPx_ = input.readUInt32();
              break;
            }
            case 48: {

              yOff_ = input.readUInt32();
              break;
            }
            case 56: {

              xOff_ = input.readUInt32();
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              altUrl_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_SubImage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_SubImage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.SubImage.class, gamma.player.util.GammaProto.SubImage.Builder.class);
    }

    public static final int Y0_FIELD_NUMBER = 2;
    private int y0_;
    /**
     * <pre>
     * npixels*(r=tvid/ncols)
     * </pre>
     *
     * <code>uint32 y0 = 2;</code>
     */
    public int getY0() {
      return y0_;
    }

    public static final int X0_FIELD_NUMBER = 3;
    private int x0_;
    /**
     * <pre>
     * npixels*(c=tvid%ncols)
     * </pre>
     *
     * <code>uint32 x0 = 3;</code>
     */
    public int getX0() {
      return x0_;
    }

    public static final int Y_PX_FIELD_NUMBER = 4;
    private int yPx_;
    /**
     * <pre>
     * npixels
     * </pre>
     *
     * <code>uint32 y_px = 4;</code>
     */
    public int getYPx() {
      return yPx_;
    }

    public static final int X_PX_FIELD_NUMBER = 5;
    private int xPx_;
    /**
     * <pre>
     * npixels
     * </pre>
     *
     * <code>uint32 x_px = 5;</code>
     */
    public int getXPx() {
      return xPx_;
    }

    public static final int Y_OFF_FIELD_NUMBER = 6;
    private int yOff_;
    /**
     * <pre>
     * 0 (offset to drag/rotate center)
     * </pre>
     *
     * <code>uint32 y_off = 6;</code>
     */
    public int getYOff() {
      return yOff_;
    }

    public static final int X_OFF_FIELD_NUMBER = 7;
    private int xOff_;
    /**
     * <pre>
     * 0 (offset to drag/rotate center)
     * </pre>
     *
     * <code>uint32 x_off = 7;</code>
     */
    public int getXOff() {
      return xOff_;
    }

    public static final int ALT_URL_FIELD_NUMBER = 8;
    private volatile java.lang.Object altUrl_;
    /**
     * <pre>
     * use alternative image (RARE)
     * </pre>
     *
     * <code>string alt_url = 8;</code>
     */
    public java.lang.String getAltUrl() {
      java.lang.Object ref = altUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        altUrl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * use alternative image (RARE)
     * </pre>
     *
     * <code>string alt_url = 8;</code>
     */
    public com.google.protobuf.ByteString
        getAltUrlBytes() {
      java.lang.Object ref = altUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        altUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (y0_ != 0) {
        output.writeUInt32(2, y0_);
      }
      if (x0_ != 0) {
        output.writeUInt32(3, x0_);
      }
      if (yPx_ != 0) {
        output.writeUInt32(4, yPx_);
      }
      if (xPx_ != 0) {
        output.writeUInt32(5, xPx_);
      }
      if (yOff_ != 0) {
        output.writeUInt32(6, yOff_);
      }
      if (xOff_ != 0) {
        output.writeUInt32(7, xOff_);
      }
      if (!getAltUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, altUrl_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (y0_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, y0_);
      }
      if (x0_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, x0_);
      }
      if (yPx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, yPx_);
      }
      if (xPx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, xPx_);
      }
      if (yOff_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, yOff_);
      }
      if (xOff_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, xOff_);
      }
      if (!getAltUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, altUrl_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.SubImage)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.SubImage other = (gamma.player.util.GammaProto.SubImage) obj;

      boolean result = true;
      result = result && (getY0()
          == other.getY0());
      result = result && (getX0()
          == other.getX0());
      result = result && (getYPx()
          == other.getYPx());
      result = result && (getXPx()
          == other.getXPx());
      result = result && (getYOff()
          == other.getYOff());
      result = result && (getXOff()
          == other.getXOff());
      result = result && getAltUrl()
          .equals(other.getAltUrl());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + Y0_FIELD_NUMBER;
      hash = (53 * hash) + getY0();
      hash = (37 * hash) + X0_FIELD_NUMBER;
      hash = (53 * hash) + getX0();
      hash = (37 * hash) + Y_PX_FIELD_NUMBER;
      hash = (53 * hash) + getYPx();
      hash = (37 * hash) + X_PX_FIELD_NUMBER;
      hash = (53 * hash) + getXPx();
      hash = (37 * hash) + Y_OFF_FIELD_NUMBER;
      hash = (53 * hash) + getYOff();
      hash = (37 * hash) + X_OFF_FIELD_NUMBER;
      hash = (53 * hash) + getXOff();
      hash = (37 * hash) + ALT_URL_FIELD_NUMBER;
      hash = (53 * hash) + getAltUrl().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.SubImage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.SubImage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.SubImage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.SubImage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.SubImage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.SubImage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.SubImage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.SubImage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.SubImage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.SubImage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.SubImage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * override implict image location (from parsing ndx relative to ImageAry)
     * </pre>
     *
     * Protobuf type {@code SubImage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SubImage)
        gamma.player.util.GammaProto.SubImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_SubImage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_SubImage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.SubImage.class, gamma.player.util.GammaProto.SubImage.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.SubImage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        y0_ = 0;

        x0_ = 0;

        yPx_ = 0;

        xPx_ = 0;

        yOff_ = 0;

        xOff_ = 0;

        altUrl_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_SubImage_descriptor;
      }

      public gamma.player.util.GammaProto.SubImage getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.SubImage.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.SubImage build() {
        gamma.player.util.GammaProto.SubImage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.SubImage buildPartial() {
        gamma.player.util.GammaProto.SubImage result = new gamma.player.util.GammaProto.SubImage(this);
        result.y0_ = y0_;
        result.x0_ = x0_;
        result.yPx_ = yPx_;
        result.xPx_ = xPx_;
        result.yOff_ = yOff_;
        result.xOff_ = xOff_;
        result.altUrl_ = altUrl_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.SubImage) {
          return mergeFrom((gamma.player.util.GammaProto.SubImage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.SubImage other) {
        if (other == gamma.player.util.GammaProto.SubImage.getDefaultInstance()) return this;
        if (other.getY0() != 0) {
          setY0(other.getY0());
        }
        if (other.getX0() != 0) {
          setX0(other.getX0());
        }
        if (other.getYPx() != 0) {
          setYPx(other.getYPx());
        }
        if (other.getXPx() != 0) {
          setXPx(other.getXPx());
        }
        if (other.getYOff() != 0) {
          setYOff(other.getYOff());
        }
        if (other.getXOff() != 0) {
          setXOff(other.getXOff());
        }
        if (!other.getAltUrl().isEmpty()) {
          altUrl_ = other.altUrl_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.SubImage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.SubImage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int y0_ ;
      /**
       * <pre>
       * npixels*(r=tvid/ncols)
       * </pre>
       *
       * <code>uint32 y0 = 2;</code>
       */
      public int getY0() {
        return y0_;
      }
      /**
       * <pre>
       * npixels*(r=tvid/ncols)
       * </pre>
       *
       * <code>uint32 y0 = 2;</code>
       */
      public Builder setY0(int value) {
        
        y0_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * npixels*(r=tvid/ncols)
       * </pre>
       *
       * <code>uint32 y0 = 2;</code>
       */
      public Builder clearY0() {
        
        y0_ = 0;
        onChanged();
        return this;
      }

      private int x0_ ;
      /**
       * <pre>
       * npixels*(c=tvid%ncols)
       * </pre>
       *
       * <code>uint32 x0 = 3;</code>
       */
      public int getX0() {
        return x0_;
      }
      /**
       * <pre>
       * npixels*(c=tvid%ncols)
       * </pre>
       *
       * <code>uint32 x0 = 3;</code>
       */
      public Builder setX0(int value) {
        
        x0_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * npixels*(c=tvid%ncols)
       * </pre>
       *
       * <code>uint32 x0 = 3;</code>
       */
      public Builder clearX0() {
        
        x0_ = 0;
        onChanged();
        return this;
      }

      private int yPx_ ;
      /**
       * <pre>
       * npixels
       * </pre>
       *
       * <code>uint32 y_px = 4;</code>
       */
      public int getYPx() {
        return yPx_;
      }
      /**
       * <pre>
       * npixels
       * </pre>
       *
       * <code>uint32 y_px = 4;</code>
       */
      public Builder setYPx(int value) {
        
        yPx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * npixels
       * </pre>
       *
       * <code>uint32 y_px = 4;</code>
       */
      public Builder clearYPx() {
        
        yPx_ = 0;
        onChanged();
        return this;
      }

      private int xPx_ ;
      /**
       * <pre>
       * npixels
       * </pre>
       *
       * <code>uint32 x_px = 5;</code>
       */
      public int getXPx() {
        return xPx_;
      }
      /**
       * <pre>
       * npixels
       * </pre>
       *
       * <code>uint32 x_px = 5;</code>
       */
      public Builder setXPx(int value) {
        
        xPx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * npixels
       * </pre>
       *
       * <code>uint32 x_px = 5;</code>
       */
      public Builder clearXPx() {
        
        xPx_ = 0;
        onChanged();
        return this;
      }

      private int yOff_ ;
      /**
       * <pre>
       * 0 (offset to drag/rotate center)
       * </pre>
       *
       * <code>uint32 y_off = 6;</code>
       */
      public int getYOff() {
        return yOff_;
      }
      /**
       * <pre>
       * 0 (offset to drag/rotate center)
       * </pre>
       *
       * <code>uint32 y_off = 6;</code>
       */
      public Builder setYOff(int value) {
        
        yOff_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0 (offset to drag/rotate center)
       * </pre>
       *
       * <code>uint32 y_off = 6;</code>
       */
      public Builder clearYOff() {
        
        yOff_ = 0;
        onChanged();
        return this;
      }

      private int xOff_ ;
      /**
       * <pre>
       * 0 (offset to drag/rotate center)
       * </pre>
       *
       * <code>uint32 x_off = 7;</code>
       */
      public int getXOff() {
        return xOff_;
      }
      /**
       * <pre>
       * 0 (offset to drag/rotate center)
       * </pre>
       *
       * <code>uint32 x_off = 7;</code>
       */
      public Builder setXOff(int value) {
        
        xOff_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0 (offset to drag/rotate center)
       * </pre>
       *
       * <code>uint32 x_off = 7;</code>
       */
      public Builder clearXOff() {
        
        xOff_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object altUrl_ = "";
      /**
       * <pre>
       * use alternative image (RARE)
       * </pre>
       *
       * <code>string alt_url = 8;</code>
       */
      public java.lang.String getAltUrl() {
        java.lang.Object ref = altUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          altUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * use alternative image (RARE)
       * </pre>
       *
       * <code>string alt_url = 8;</code>
       */
      public com.google.protobuf.ByteString
          getAltUrlBytes() {
        java.lang.Object ref = altUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          altUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * use alternative image (RARE)
       * </pre>
       *
       * <code>string alt_url = 8;</code>
       */
      public Builder setAltUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        altUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * use alternative image (RARE)
       * </pre>
       *
       * <code>string alt_url = 8;</code>
       */
      public Builder clearAltUrl() {
        
        altUrl_ = getDefaultInstance().getAltUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * use alternative image (RARE)
       * </pre>
       *
       * <code>string alt_url = 8;</code>
       */
      public Builder setAltUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        altUrl_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:SubImage)
    }

    // @@protoc_insertion_point(class_scope:SubImage)
    private static final gamma.player.util.GammaProto.SubImage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.SubImage();
    }

    public static gamma.player.util.GammaProto.SubImage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SubImage>
        PARSER = new com.google.protobuf.AbstractParser<SubImage>() {
      public SubImage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SubImage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SubImage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SubImage> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.SubImage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImageAryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ImageAry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * each sub-image is npixels X npixels, in  row major order
     * </pre>
     *
     * <code>uint32 npixels = 1;</code>
     */
    int getNpixels();

    /**
     * <pre>
     * each of the nrows
     * </pre>
     *
     * <code>uint32 nrows = 2;</code>
     */
    int getNrows();

    /**
     * <pre>
     * has ncols
     * </pre>
     *
     * <code>uint32 ncols = 3;</code>
     */
    int getNcols();

    /**
     * <pre>
     * fetch master image
     * </pre>
     *
     * <code>string url = 4;</code>
     */
    java.lang.String getUrl();
    /**
     * <pre>
     * fetch master image
     * </pre>
     *
     * <code>string url = 4;</code>
     */
    com.google.protobuf.ByteString
        getUrlBytes();
  }
  /**
   * <pre>
   * usage: extract a single pixel at img[r,c] given a {x,y,tvid}
   * tvid maps to a npx X npx subimage
   * img[r,c] -&gt; tvid(r*ncols+c); tvid-&gt;(tvid/ncols,tvid%ncols)
   * TODO: rename to ImageBlock [because ImageAry is not an ARRAY in the ts sense]
   * </pre>
   *
   * Protobuf type {@code ImageAry}
   */
  public  static final class ImageAry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ImageAry)
      ImageAryOrBuilder {
    // Use ImageAry.newBuilder() to construct.
    private ImageAry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ImageAry() {
      npixels_ = 0;
      nrows_ = 0;
      ncols_ = 0;
      url_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ImageAry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              npixels_ = input.readUInt32();
              break;
            }
            case 16: {

              nrows_ = input.readUInt32();
              break;
            }
            case 24: {

              ncols_ = input.readUInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              url_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_ImageAry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_ImageAry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.ImageAry.class, gamma.player.util.GammaProto.ImageAry.Builder.class);
    }

    public static final int NPIXELS_FIELD_NUMBER = 1;
    private int npixels_;
    /**
     * <pre>
     * each sub-image is npixels X npixels, in  row major order
     * </pre>
     *
     * <code>uint32 npixels = 1;</code>
     */
    public int getNpixels() {
      return npixels_;
    }

    public static final int NROWS_FIELD_NUMBER = 2;
    private int nrows_;
    /**
     * <pre>
     * each of the nrows
     * </pre>
     *
     * <code>uint32 nrows = 2;</code>
     */
    public int getNrows() {
      return nrows_;
    }

    public static final int NCOLS_FIELD_NUMBER = 3;
    private int ncols_;
    /**
     * <pre>
     * has ncols
     * </pre>
     *
     * <code>uint32 ncols = 3;</code>
     */
    public int getNcols() {
      return ncols_;
    }

    public static final int URL_FIELD_NUMBER = 4;
    private volatile java.lang.Object url_;
    /**
     * <pre>
     * fetch master image
     * </pre>
     *
     * <code>string url = 4;</code>
     */
    public java.lang.String getUrl() {
      java.lang.Object ref = url_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        url_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * fetch master image
     * </pre>
     *
     * <code>string url = 4;</code>
     */
    public com.google.protobuf.ByteString
        getUrlBytes() {
      java.lang.Object ref = url_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        url_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (npixels_ != 0) {
        output.writeUInt32(1, npixels_);
      }
      if (nrows_ != 0) {
        output.writeUInt32(2, nrows_);
      }
      if (ncols_ != 0) {
        output.writeUInt32(3, ncols_);
      }
      if (!getUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, url_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (npixels_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, npixels_);
      }
      if (nrows_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nrows_);
      }
      if (ncols_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ncols_);
      }
      if (!getUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, url_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.ImageAry)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.ImageAry other = (gamma.player.util.GammaProto.ImageAry) obj;

      boolean result = true;
      result = result && (getNpixels()
          == other.getNpixels());
      result = result && (getNrows()
          == other.getNrows());
      result = result && (getNcols()
          == other.getNcols());
      result = result && getUrl()
          .equals(other.getUrl());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NPIXELS_FIELD_NUMBER;
      hash = (53 * hash) + getNpixels();
      hash = (37 * hash) + NROWS_FIELD_NUMBER;
      hash = (53 * hash) + getNrows();
      hash = (37 * hash) + NCOLS_FIELD_NUMBER;
      hash = (53 * hash) + getNcols();
      hash = (37 * hash) + URL_FIELD_NUMBER;
      hash = (53 * hash) + getUrl().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.ImageAry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.ImageAry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.ImageAry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.ImageAry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.ImageAry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.ImageAry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.ImageAry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.ImageAry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.ImageAry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.ImageAry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.ImageAry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * usage: extract a single pixel at img[r,c] given a {x,y,tvid}
     * tvid maps to a npx X npx subimage
     * img[r,c] -&gt; tvid(r*ncols+c); tvid-&gt;(tvid/ncols,tvid%ncols)
     * TODO: rename to ImageBlock [because ImageAry is not an ARRAY in the ts sense]
     * </pre>
     *
     * Protobuf type {@code ImageAry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ImageAry)
        gamma.player.util.GammaProto.ImageAryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_ImageAry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_ImageAry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.ImageAry.class, gamma.player.util.GammaProto.ImageAry.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.ImageAry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        npixels_ = 0;

        nrows_ = 0;

        ncols_ = 0;

        url_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_ImageAry_descriptor;
      }

      public gamma.player.util.GammaProto.ImageAry getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.ImageAry.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.ImageAry build() {
        gamma.player.util.GammaProto.ImageAry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.ImageAry buildPartial() {
        gamma.player.util.GammaProto.ImageAry result = new gamma.player.util.GammaProto.ImageAry(this);
        result.npixels_ = npixels_;
        result.nrows_ = nrows_;
        result.ncols_ = ncols_;
        result.url_ = url_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.ImageAry) {
          return mergeFrom((gamma.player.util.GammaProto.ImageAry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.ImageAry other) {
        if (other == gamma.player.util.GammaProto.ImageAry.getDefaultInstance()) return this;
        if (other.getNpixels() != 0) {
          setNpixels(other.getNpixels());
        }
        if (other.getNrows() != 0) {
          setNrows(other.getNrows());
        }
        if (other.getNcols() != 0) {
          setNcols(other.getNcols());
        }
        if (!other.getUrl().isEmpty()) {
          url_ = other.url_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.ImageAry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.ImageAry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int npixels_ ;
      /**
       * <pre>
       * each sub-image is npixels X npixels, in  row major order
       * </pre>
       *
       * <code>uint32 npixels = 1;</code>
       */
      public int getNpixels() {
        return npixels_;
      }
      /**
       * <pre>
       * each sub-image is npixels X npixels, in  row major order
       * </pre>
       *
       * <code>uint32 npixels = 1;</code>
       */
      public Builder setNpixels(int value) {
        
        npixels_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * each sub-image is npixels X npixels, in  row major order
       * </pre>
       *
       * <code>uint32 npixels = 1;</code>
       */
      public Builder clearNpixels() {
        
        npixels_ = 0;
        onChanged();
        return this;
      }

      private int nrows_ ;
      /**
       * <pre>
       * each of the nrows
       * </pre>
       *
       * <code>uint32 nrows = 2;</code>
       */
      public int getNrows() {
        return nrows_;
      }
      /**
       * <pre>
       * each of the nrows
       * </pre>
       *
       * <code>uint32 nrows = 2;</code>
       */
      public Builder setNrows(int value) {
        
        nrows_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * each of the nrows
       * </pre>
       *
       * <code>uint32 nrows = 2;</code>
       */
      public Builder clearNrows() {
        
        nrows_ = 0;
        onChanged();
        return this;
      }

      private int ncols_ ;
      /**
       * <pre>
       * has ncols
       * </pre>
       *
       * <code>uint32 ncols = 3;</code>
       */
      public int getNcols() {
        return ncols_;
      }
      /**
       * <pre>
       * has ncols
       * </pre>
       *
       * <code>uint32 ncols = 3;</code>
       */
      public Builder setNcols(int value) {
        
        ncols_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * has ncols
       * </pre>
       *
       * <code>uint32 ncols = 3;</code>
       */
      public Builder clearNcols() {
        
        ncols_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object url_ = "";
      /**
       * <pre>
       * fetch master image
       * </pre>
       *
       * <code>string url = 4;</code>
       */
      public java.lang.String getUrl() {
        java.lang.Object ref = url_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          url_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * fetch master image
       * </pre>
       *
       * <code>string url = 4;</code>
       */
      public com.google.protobuf.ByteString
          getUrlBytes() {
        java.lang.Object ref = url_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          url_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * fetch master image
       * </pre>
       *
       * <code>string url = 4;</code>
       */
      public Builder setUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        url_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * fetch master image
       * </pre>
       *
       * <code>string url = 4;</code>
       */
      public Builder clearUrl() {
        
        url_ = getDefaultInstance().getUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * fetch master image
       * </pre>
       *
       * <code>string url = 4;</code>
       */
      public Builder setUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        url_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ImageAry)
    }

    // @@protoc_insertion_point(class_scope:ImageAry)
    private static final gamma.player.util.GammaProto.ImageAry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.ImageAry();
    }

    public static gamma.player.util.GammaProto.ImageAry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ImageAry>
        PARSER = new com.google.protobuf.AbstractParser<ImageAry>() {
      public ImageAry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ImageAry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ImageAry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ImageAry> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.ImageAry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TerImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TerImage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * assign name &amp; subimage to tvid
     * </pre>
     *
     * <code>uint32 tvid = 1;</code>
     */
    int getTvid();

    /**
     * <pre>
     * advisory, for alt presentation, description
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * advisory, for alt presentation, description
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * optional (use tvid/ncols,tvid%ncols,npix,npix)
     * </pre>
     *
     * <code>.SubImage sub_image = 3;</code>
     */
    boolean hasSubImage();
    /**
     * <pre>
     * optional (use tvid/ncols,tvid%ncols,npix,npix)
     * </pre>
     *
     * <code>.SubImage sub_image = 3;</code>
     */
    gamma.player.util.GammaProto.SubImage getSubImage();
    /**
     * <pre>
     * optional (use tvid/ncols,tvid%ncols,npix,npix)
     * </pre>
     *
     * <code>.SubImage sub_image = 3;</code>
     */
    gamma.player.util.GammaProto.SubImageOrBuilder getSubImageOrBuilder();
  }
  /**
   * <pre>
   * ImageAry implicitly associates tvids in range [0..nr*nc]
   * with the sub-images in ImageAry at: img[r=tvid/ncols, c=tvid%ncols] [npixels X npixels]
   * TerImage associates each tvid with a display name
   * </pre>
   *
   * Protobuf type {@code TerImage}
   */
  public  static final class TerImage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TerImage)
      TerImageOrBuilder {
    // Use TerImage.newBuilder() to construct.
    private TerImage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TerImage() {
      tvid_ = 0;
      name_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TerImage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              tvid_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              gamma.player.util.GammaProto.SubImage.Builder subBuilder = null;
              if (subImage_ != null) {
                subBuilder = subImage_.toBuilder();
              }
              subImage_ = input.readMessage(gamma.player.util.GammaProto.SubImage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(subImage_);
                subImage_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_TerImage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_TerImage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.TerImage.class, gamma.player.util.GammaProto.TerImage.Builder.class);
    }

    public static final int TVID_FIELD_NUMBER = 1;
    private int tvid_;
    /**
     * <pre>
     * assign name &amp; subimage to tvid
     * </pre>
     *
     * <code>uint32 tvid = 1;</code>
     */
    public int getTvid() {
      return tvid_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * advisory, for alt presentation, description
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * advisory, for alt presentation, description
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUB_IMAGE_FIELD_NUMBER = 3;
    private gamma.player.util.GammaProto.SubImage subImage_;
    /**
     * <pre>
     * optional (use tvid/ncols,tvid%ncols,npix,npix)
     * </pre>
     *
     * <code>.SubImage sub_image = 3;</code>
     */
    public boolean hasSubImage() {
      return subImage_ != null;
    }
    /**
     * <pre>
     * optional (use tvid/ncols,tvid%ncols,npix,npix)
     * </pre>
     *
     * <code>.SubImage sub_image = 3;</code>
     */
    public gamma.player.util.GammaProto.SubImage getSubImage() {
      return subImage_ == null ? gamma.player.util.GammaProto.SubImage.getDefaultInstance() : subImage_;
    }
    /**
     * <pre>
     * optional (use tvid/ncols,tvid%ncols,npix,npix)
     * </pre>
     *
     * <code>.SubImage sub_image = 3;</code>
     */
    public gamma.player.util.GammaProto.SubImageOrBuilder getSubImageOrBuilder() {
      return getSubImage();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (tvid_ != 0) {
        output.writeUInt32(1, tvid_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (subImage_ != null) {
        output.writeMessage(3, getSubImage());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (tvid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tvid_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (subImage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSubImage());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.TerImage)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.TerImage other = (gamma.player.util.GammaProto.TerImage) obj;

      boolean result = true;
      result = result && (getTvid()
          == other.getTvid());
      result = result && getName()
          .equals(other.getName());
      result = result && (hasSubImage() == other.hasSubImage());
      if (hasSubImage()) {
        result = result && getSubImage()
            .equals(other.getSubImage());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TVID_FIELD_NUMBER;
      hash = (53 * hash) + getTvid();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasSubImage()) {
        hash = (37 * hash) + SUB_IMAGE_FIELD_NUMBER;
        hash = (53 * hash) + getSubImage().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.TerImage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.TerImage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerImage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.TerImage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerImage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.TerImage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerImage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.TerImage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerImage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.TerImage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.TerImage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ImageAry implicitly associates tvids in range [0..nr*nc]
     * with the sub-images in ImageAry at: img[r=tvid/ncols, c=tvid%ncols] [npixels X npixels]
     * TerImage associates each tvid with a display name
     * </pre>
     *
     * Protobuf type {@code TerImage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TerImage)
        gamma.player.util.GammaProto.TerImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_TerImage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_TerImage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.TerImage.class, gamma.player.util.GammaProto.TerImage.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.TerImage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        tvid_ = 0;

        name_ = "";

        if (subImageBuilder_ == null) {
          subImage_ = null;
        } else {
          subImage_ = null;
          subImageBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_TerImage_descriptor;
      }

      public gamma.player.util.GammaProto.TerImage getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.TerImage.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.TerImage build() {
        gamma.player.util.GammaProto.TerImage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.TerImage buildPartial() {
        gamma.player.util.GammaProto.TerImage result = new gamma.player.util.GammaProto.TerImage(this);
        result.tvid_ = tvid_;
        result.name_ = name_;
        if (subImageBuilder_ == null) {
          result.subImage_ = subImage_;
        } else {
          result.subImage_ = subImageBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.TerImage) {
          return mergeFrom((gamma.player.util.GammaProto.TerImage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.TerImage other) {
        if (other == gamma.player.util.GammaProto.TerImage.getDefaultInstance()) return this;
        if (other.getTvid() != 0) {
          setTvid(other.getTvid());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasSubImage()) {
          mergeSubImage(other.getSubImage());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.TerImage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.TerImage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int tvid_ ;
      /**
       * <pre>
       * assign name &amp; subimage to tvid
       * </pre>
       *
       * <code>uint32 tvid = 1;</code>
       */
      public int getTvid() {
        return tvid_;
      }
      /**
       * <pre>
       * assign name &amp; subimage to tvid
       * </pre>
       *
       * <code>uint32 tvid = 1;</code>
       */
      public Builder setTvid(int value) {
        
        tvid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * assign name &amp; subimage to tvid
       * </pre>
       *
       * <code>uint32 tvid = 1;</code>
       */
      public Builder clearTvid() {
        
        tvid_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * advisory, for alt presentation, description
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * advisory, for alt presentation, description
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * advisory, for alt presentation, description
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * advisory, for alt presentation, description
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * advisory, for alt presentation, description
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private gamma.player.util.GammaProto.SubImage subImage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.SubImage, gamma.player.util.GammaProto.SubImage.Builder, gamma.player.util.GammaProto.SubImageOrBuilder> subImageBuilder_;
      /**
       * <pre>
       * optional (use tvid/ncols,tvid%ncols,npix,npix)
       * </pre>
       *
       * <code>.SubImage sub_image = 3;</code>
       */
      public boolean hasSubImage() {
        return subImageBuilder_ != null || subImage_ != null;
      }
      /**
       * <pre>
       * optional (use tvid/ncols,tvid%ncols,npix,npix)
       * </pre>
       *
       * <code>.SubImage sub_image = 3;</code>
       */
      public gamma.player.util.GammaProto.SubImage getSubImage() {
        if (subImageBuilder_ == null) {
          return subImage_ == null ? gamma.player.util.GammaProto.SubImage.getDefaultInstance() : subImage_;
        } else {
          return subImageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * optional (use tvid/ncols,tvid%ncols,npix,npix)
       * </pre>
       *
       * <code>.SubImage sub_image = 3;</code>
       */
      public Builder setSubImage(gamma.player.util.GammaProto.SubImage value) {
        if (subImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subImage_ = value;
          onChanged();
        } else {
          subImageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * optional (use tvid/ncols,tvid%ncols,npix,npix)
       * </pre>
       *
       * <code>.SubImage sub_image = 3;</code>
       */
      public Builder setSubImage(
          gamma.player.util.GammaProto.SubImage.Builder builderForValue) {
        if (subImageBuilder_ == null) {
          subImage_ = builderForValue.build();
          onChanged();
        } else {
          subImageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * optional (use tvid/ncols,tvid%ncols,npix,npix)
       * </pre>
       *
       * <code>.SubImage sub_image = 3;</code>
       */
      public Builder mergeSubImage(gamma.player.util.GammaProto.SubImage value) {
        if (subImageBuilder_ == null) {
          if (subImage_ != null) {
            subImage_ =
              gamma.player.util.GammaProto.SubImage.newBuilder(subImage_).mergeFrom(value).buildPartial();
          } else {
            subImage_ = value;
          }
          onChanged();
        } else {
          subImageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * optional (use tvid/ncols,tvid%ncols,npix,npix)
       * </pre>
       *
       * <code>.SubImage sub_image = 3;</code>
       */
      public Builder clearSubImage() {
        if (subImageBuilder_ == null) {
          subImage_ = null;
          onChanged();
        } else {
          subImage_ = null;
          subImageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * optional (use tvid/ncols,tvid%ncols,npix,npix)
       * </pre>
       *
       * <code>.SubImage sub_image = 3;</code>
       */
      public gamma.player.util.GammaProto.SubImage.Builder getSubImageBuilder() {
        
        onChanged();
        return getSubImageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * optional (use tvid/ncols,tvid%ncols,npix,npix)
       * </pre>
       *
       * <code>.SubImage sub_image = 3;</code>
       */
      public gamma.player.util.GammaProto.SubImageOrBuilder getSubImageOrBuilder() {
        if (subImageBuilder_ != null) {
          return subImageBuilder_.getMessageOrBuilder();
        } else {
          return subImage_ == null ?
              gamma.player.util.GammaProto.SubImage.getDefaultInstance() : subImage_;
        }
      }
      /**
       * <pre>
       * optional (use tvid/ncols,tvid%ncols,npix,npix)
       * </pre>
       *
       * <code>.SubImage sub_image = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.SubImage, gamma.player.util.GammaProto.SubImage.Builder, gamma.player.util.GammaProto.SubImageOrBuilder> 
          getSubImageFieldBuilder() {
        if (subImageBuilder_ == null) {
          subImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.SubImage, gamma.player.util.GammaProto.SubImage.Builder, gamma.player.util.GammaProto.SubImageOrBuilder>(
                  getSubImage(),
                  getParentForChildren(),
                  isClean());
          subImage_ = null;
        }
        return subImageBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:TerImage)
    }

    // @@protoc_insertion_point(class_scope:TerImage)
    private static final gamma.player.util.GammaProto.TerImage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.TerImage();
    }

    public static gamma.player.util.GammaProto.TerImage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TerImage>
        PARSER = new com.google.protobuf.AbstractParser<TerImage>() {
      public TerImage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TerImage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TerImage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TerImage> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.TerImage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TerStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TerStats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * expected sight range, cover or prob of seeing?
     * </pre>
     *
     * <code>float visibilty = 1;</code>
     */
    float getVisibilty();

    /**
     * <pre>
     * difficulty of traverals/exporation by scout
     * </pre>
     *
     * <code>float scoutablity = 2;</code>
     */
    float getScoutablity();
  }
  /**
   * <pre>
   * indexed by tvid
   * </pre>
   *
   * Protobuf type {@code TerStats}
   */
  public  static final class TerStats extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TerStats)
      TerStatsOrBuilder {
    // Use TerStats.newBuilder() to construct.
    private TerStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TerStats() {
      visibilty_ = 0F;
      scoutablity_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TerStats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 13: {

              visibilty_ = input.readFloat();
              break;
            }
            case 21: {

              scoutablity_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_TerStats_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_TerStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.TerStats.class, gamma.player.util.GammaProto.TerStats.Builder.class);
    }

    public static final int VISIBILTY_FIELD_NUMBER = 1;
    private float visibilty_;
    /**
     * <pre>
     * expected sight range, cover or prob of seeing?
     * </pre>
     *
     * <code>float visibilty = 1;</code>
     */
    public float getVisibilty() {
      return visibilty_;
    }

    public static final int SCOUTABLITY_FIELD_NUMBER = 2;
    private float scoutablity_;
    /**
     * <pre>
     * difficulty of traverals/exporation by scout
     * </pre>
     *
     * <code>float scoutablity = 2;</code>
     */
    public float getScoutablity() {
      return scoutablity_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (visibilty_ != 0F) {
        output.writeFloat(1, visibilty_);
      }
      if (scoutablity_ != 0F) {
        output.writeFloat(2, scoutablity_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (visibilty_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, visibilty_);
      }
      if (scoutablity_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, scoutablity_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.TerStats)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.TerStats other = (gamma.player.util.GammaProto.TerStats) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getVisibilty())
          == java.lang.Float.floatToIntBits(
              other.getVisibilty()));
      result = result && (
          java.lang.Float.floatToIntBits(getScoutablity())
          == java.lang.Float.floatToIntBits(
              other.getScoutablity()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + VISIBILTY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getVisibilty());
      hash = (37 * hash) + SCOUTABLITY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getScoutablity());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.TerStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.TerStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.TerStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.TerStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.TerStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.TerStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.TerStats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * indexed by tvid
     * </pre>
     *
     * Protobuf type {@code TerStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TerStats)
        gamma.player.util.GammaProto.TerStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_TerStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_TerStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.TerStats.class, gamma.player.util.GammaProto.TerStats.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.TerStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        visibilty_ = 0F;

        scoutablity_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_TerStats_descriptor;
      }

      public gamma.player.util.GammaProto.TerStats getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.TerStats.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.TerStats build() {
        gamma.player.util.GammaProto.TerStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.TerStats buildPartial() {
        gamma.player.util.GammaProto.TerStats result = new gamma.player.util.GammaProto.TerStats(this);
        result.visibilty_ = visibilty_;
        result.scoutablity_ = scoutablity_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.TerStats) {
          return mergeFrom((gamma.player.util.GammaProto.TerStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.TerStats other) {
        if (other == gamma.player.util.GammaProto.TerStats.getDefaultInstance()) return this;
        if (other.getVisibilty() != 0F) {
          setVisibilty(other.getVisibilty());
        }
        if (other.getScoutablity() != 0F) {
          setScoutablity(other.getScoutablity());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.TerStats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.TerStats) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float visibilty_ ;
      /**
       * <pre>
       * expected sight range, cover or prob of seeing?
       * </pre>
       *
       * <code>float visibilty = 1;</code>
       */
      public float getVisibilty() {
        return visibilty_;
      }
      /**
       * <pre>
       * expected sight range, cover or prob of seeing?
       * </pre>
       *
       * <code>float visibilty = 1;</code>
       */
      public Builder setVisibilty(float value) {
        
        visibilty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * expected sight range, cover or prob of seeing?
       * </pre>
       *
       * <code>float visibilty = 1;</code>
       */
      public Builder clearVisibilty() {
        
        visibilty_ = 0F;
        onChanged();
        return this;
      }

      private float scoutablity_ ;
      /**
       * <pre>
       * difficulty of traverals/exporation by scout
       * </pre>
       *
       * <code>float scoutablity = 2;</code>
       */
      public float getScoutablity() {
        return scoutablity_;
      }
      /**
       * <pre>
       * difficulty of traverals/exporation by scout
       * </pre>
       *
       * <code>float scoutablity = 2;</code>
       */
      public Builder setScoutablity(float value) {
        
        scoutablity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * difficulty of traverals/exporation by scout
       * </pre>
       *
       * <code>float scoutablity = 2;</code>
       */
      public Builder clearScoutablity() {
        
        scoutablity_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:TerStats)
    }

    // @@protoc_insertion_point(class_scope:TerStats)
    private static final gamma.player.util.GammaProto.TerStats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.TerStats();
    }

    public static gamma.player.util.GammaProto.TerStats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TerStats>
        PARSER = new com.google.protobuf.AbstractParser<TerStats>() {
      public TerStats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TerStats(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TerStats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TerStats> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.TerStats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RoadStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RoadStats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * level of difficulty/ease;
     * </pre>
     *
     * <code>float quality = 1;</code>
     */
    float getQuality();
  }
  /**
   * <pre>
   * indexed by unit_id (objectId of path segment)
   * </pre>
   *
   * Protobuf type {@code RoadStats}
   */
  public  static final class RoadStats extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RoadStats)
      RoadStatsOrBuilder {
    // Use RoadStats.newBuilder() to construct.
    private RoadStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RoadStats() {
      quality_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RoadStats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 13: {

              quality_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_RoadStats_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_RoadStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.RoadStats.class, gamma.player.util.GammaProto.RoadStats.Builder.class);
    }

    public static final int QUALITY_FIELD_NUMBER = 1;
    private float quality_;
    /**
     * <pre>
     * level of difficulty/ease;
     * </pre>
     *
     * <code>float quality = 1;</code>
     */
    public float getQuality() {
      return quality_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (quality_ != 0F) {
        output.writeFloat(1, quality_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (quality_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, quality_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.RoadStats)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.RoadStats other = (gamma.player.util.GammaProto.RoadStats) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getQuality())
          == java.lang.Float.floatToIntBits(
              other.getQuality()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + QUALITY_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getQuality());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.RoadStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.RoadStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.RoadStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.RoadStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.RoadStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.RoadStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.RoadStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.RoadStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.RoadStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.RoadStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.RoadStats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * indexed by unit_id (objectId of path segment)
     * </pre>
     *
     * Protobuf type {@code RoadStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RoadStats)
        gamma.player.util.GammaProto.RoadStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_RoadStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_RoadStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.RoadStats.class, gamma.player.util.GammaProto.RoadStats.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.RoadStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        quality_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_RoadStats_descriptor;
      }

      public gamma.player.util.GammaProto.RoadStats getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.RoadStats.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.RoadStats build() {
        gamma.player.util.GammaProto.RoadStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.RoadStats buildPartial() {
        gamma.player.util.GammaProto.RoadStats result = new gamma.player.util.GammaProto.RoadStats(this);
        result.quality_ = quality_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.RoadStats) {
          return mergeFrom((gamma.player.util.GammaProto.RoadStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.RoadStats other) {
        if (other == gamma.player.util.GammaProto.RoadStats.getDefaultInstance()) return this;
        if (other.getQuality() != 0F) {
          setQuality(other.getQuality());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.RoadStats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.RoadStats) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float quality_ ;
      /**
       * <pre>
       * level of difficulty/ease;
       * </pre>
       *
       * <code>float quality = 1;</code>
       */
      public float getQuality() {
        return quality_;
      }
      /**
       * <pre>
       * level of difficulty/ease;
       * </pre>
       *
       * <code>float quality = 1;</code>
       */
      public Builder setQuality(float value) {
        
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * level of difficulty/ease;
       * </pre>
       *
       * <code>float quality = 1;</code>
       */
      public Builder clearQuality() {
        
        quality_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:RoadStats)
    }

    // @@protoc_insertion_point(class_scope:RoadStats)
    private static final gamma.player.util.GammaProto.RoadStats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.RoadStats();
    }

    public static gamma.player.util.GammaProto.RoadStats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RoadStats>
        PARSER = new com.google.protobuf.AbstractParser<RoadStats>() {
      public RoadStats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RoadStats(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RoadStats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RoadStats> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.RoadStats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TerImageSeqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TerImageSeq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * required: composite image
     * </pre>
     *
     * <code>.ImageAry comp_image = 1;</code>
     */
    boolean hasCompImage();
    /**
     * <pre>
     * required: composite image
     * </pre>
     *
     * <code>.ImageAry comp_image = 1;</code>
     */
    gamma.player.util.GammaProto.ImageAry getCompImage();
    /**
     * <pre>
     * required: composite image
     * </pre>
     *
     * <code>.ImageAry comp_image = 1;</code>
     */
    gamma.player.util.GammaProto.ImageAryOrBuilder getCompImageOrBuilder();

    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>repeated .TerImage tmag = 2;</code>
     */
    java.util.List<gamma.player.util.GammaProto.TerImage> 
        getTmagList();
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>repeated .TerImage tmag = 2;</code>
     */
    gamma.player.util.GammaProto.TerImage getTmag(int index);
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>repeated .TerImage tmag = 2;</code>
     */
    int getTmagCount();
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>repeated .TerImage tmag = 2;</code>
     */
    java.util.List<? extends gamma.player.util.GammaProto.TerImageOrBuilder> 
        getTmagOrBuilderList();
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>repeated .TerImage tmag = 2;</code>
     */
    gamma.player.util.GammaProto.TerImageOrBuilder getTmagOrBuilder(
        int index);

    /**
     * <pre>
     * length=1023 (2^10-1): elevation in meters, by zndx
     * </pre>
     *
     * <code>repeated int32 zval = 3;</code>
     */
    java.util.List<java.lang.Integer> getZvalList();
    /**
     * <pre>
     * length=1023 (2^10-1): elevation in meters, by zndx
     * </pre>
     *
     * <code>repeated int32 zval = 3;</code>
     */
    int getZvalCount();
    /**
     * <pre>
     * length=1023 (2^10-1): elevation in meters, by zndx
     * </pre>
     *
     * <code>repeated int32 zval = 3;</code>
     */
    int getZval(int index);

    /**
     * <pre>
     * length&lt;64: map 6-bit tvid -&gt; indx; ImgageAry[r*ncols+c]
     * </pre>
     *
     * <code>repeated int32 indx = 4;</code>
     */
    java.util.List<java.lang.Integer> getIndxList();
    /**
     * <pre>
     * length&lt;64: map 6-bit tvid -&gt; indx; ImgageAry[r*ncols+c]
     * </pre>
     *
     * <code>repeated int32 indx = 4;</code>
     */
    int getIndxCount();
    /**
     * <pre>
     * length&lt;64: map 6-bit tvid -&gt; indx; ImgageAry[r*ncols+c]
     * </pre>
     *
     * <code>repeated int32 indx = 4;</code>
     */
    int getIndx(int index);
  }
  /**
   * <pre>
   * comp_of AMessage 
   * </pre>
   *
   * Protobuf type {@code TerImageSeq}
   */
  public  static final class TerImageSeq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TerImageSeq)
      TerImageSeqOrBuilder {
    // Use TerImageSeq.newBuilder() to construct.
    private TerImageSeq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TerImageSeq() {
      tmag_ = java.util.Collections.emptyList();
      zval_ = java.util.Collections.emptyList();
      indx_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TerImageSeq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              gamma.player.util.GammaProto.ImageAry.Builder subBuilder = null;
              if (compImage_ != null) {
                subBuilder = compImage_.toBuilder();
              }
              compImage_ = input.readMessage(gamma.player.util.GammaProto.ImageAry.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(compImage_);
                compImage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                tmag_ = new java.util.ArrayList<gamma.player.util.GammaProto.TerImage>();
                mutable_bitField0_ |= 0x00000002;
              }
              tmag_.add(
                  input.readMessage(gamma.player.util.GammaProto.TerImage.parser(), extensionRegistry));
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                zval_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              zval_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                zval_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                zval_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                indx_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              indx_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                indx_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                indx_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          tmag_ = java.util.Collections.unmodifiableList(tmag_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          zval_ = java.util.Collections.unmodifiableList(zval_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          indx_ = java.util.Collections.unmodifiableList(indx_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_TerImageSeq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_TerImageSeq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.TerImageSeq.class, gamma.player.util.GammaProto.TerImageSeq.Builder.class);
    }

    private int bitField0_;
    public static final int COMP_IMAGE_FIELD_NUMBER = 1;
    private gamma.player.util.GammaProto.ImageAry compImage_;
    /**
     * <pre>
     * required: composite image
     * </pre>
     *
     * <code>.ImageAry comp_image = 1;</code>
     */
    public boolean hasCompImage() {
      return compImage_ != null;
    }
    /**
     * <pre>
     * required: composite image
     * </pre>
     *
     * <code>.ImageAry comp_image = 1;</code>
     */
    public gamma.player.util.GammaProto.ImageAry getCompImage() {
      return compImage_ == null ? gamma.player.util.GammaProto.ImageAry.getDefaultInstance() : compImage_;
    }
    /**
     * <pre>
     * required: composite image
     * </pre>
     *
     * <code>.ImageAry comp_image = 1;</code>
     */
    public gamma.player.util.GammaProto.ImageAryOrBuilder getCompImageOrBuilder() {
      return getCompImage();
    }

    public static final int TMAG_FIELD_NUMBER = 2;
    private java.util.List<gamma.player.util.GammaProto.TerImage> tmag_;
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>repeated .TerImage tmag = 2;</code>
     */
    public java.util.List<gamma.player.util.GammaProto.TerImage> getTmagList() {
      return tmag_;
    }
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>repeated .TerImage tmag = 2;</code>
     */
    public java.util.List<? extends gamma.player.util.GammaProto.TerImageOrBuilder> 
        getTmagOrBuilderList() {
      return tmag_;
    }
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>repeated .TerImage tmag = 2;</code>
     */
    public int getTmagCount() {
      return tmag_.size();
    }
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>repeated .TerImage tmag = 2;</code>
     */
    public gamma.player.util.GammaProto.TerImage getTmag(int index) {
      return tmag_.get(index);
    }
    /**
     * <pre>
     * optional
     * </pre>
     *
     * <code>repeated .TerImage tmag = 2;</code>
     */
    public gamma.player.util.GammaProto.TerImageOrBuilder getTmagOrBuilder(
        int index) {
      return tmag_.get(index);
    }

    public static final int ZVAL_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> zval_;
    /**
     * <pre>
     * length=1023 (2^10-1): elevation in meters, by zndx
     * </pre>
     *
     * <code>repeated int32 zval = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getZvalList() {
      return zval_;
    }
    /**
     * <pre>
     * length=1023 (2^10-1): elevation in meters, by zndx
     * </pre>
     *
     * <code>repeated int32 zval = 3;</code>
     */
    public int getZvalCount() {
      return zval_.size();
    }
    /**
     * <pre>
     * length=1023 (2^10-1): elevation in meters, by zndx
     * </pre>
     *
     * <code>repeated int32 zval = 3;</code>
     */
    public int getZval(int index) {
      return zval_.get(index);
    }
    private int zvalMemoizedSerializedSize = -1;

    public static final int INDX_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> indx_;
    /**
     * <pre>
     * length&lt;64: map 6-bit tvid -&gt; indx; ImgageAry[r*ncols+c]
     * </pre>
     *
     * <code>repeated int32 indx = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getIndxList() {
      return indx_;
    }
    /**
     * <pre>
     * length&lt;64: map 6-bit tvid -&gt; indx; ImgageAry[r*ncols+c]
     * </pre>
     *
     * <code>repeated int32 indx = 4;</code>
     */
    public int getIndxCount() {
      return indx_.size();
    }
    /**
     * <pre>
     * length&lt;64: map 6-bit tvid -&gt; indx; ImgageAry[r*ncols+c]
     * </pre>
     *
     * <code>repeated int32 indx = 4;</code>
     */
    public int getIndx(int index) {
      return indx_.get(index);
    }
    private int indxMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (compImage_ != null) {
        output.writeMessage(1, getCompImage());
      }
      for (int i = 0; i < tmag_.size(); i++) {
        output.writeMessage(2, tmag_.get(i));
      }
      if (getZvalList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(zvalMemoizedSerializedSize);
      }
      for (int i = 0; i < zval_.size(); i++) {
        output.writeInt32NoTag(zval_.get(i));
      }
      if (getIndxList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(indxMemoizedSerializedSize);
      }
      for (int i = 0; i < indx_.size(); i++) {
        output.writeInt32NoTag(indx_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (compImage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getCompImage());
      }
      for (int i = 0; i < tmag_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, tmag_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < zval_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(zval_.get(i));
        }
        size += dataSize;
        if (!getZvalList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        zvalMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < indx_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(indx_.get(i));
        }
        size += dataSize;
        if (!getIndxList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        indxMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.TerImageSeq)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.TerImageSeq other = (gamma.player.util.GammaProto.TerImageSeq) obj;

      boolean result = true;
      result = result && (hasCompImage() == other.hasCompImage());
      if (hasCompImage()) {
        result = result && getCompImage()
            .equals(other.getCompImage());
      }
      result = result && getTmagList()
          .equals(other.getTmagList());
      result = result && getZvalList()
          .equals(other.getZvalList());
      result = result && getIndxList()
          .equals(other.getIndxList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCompImage()) {
        hash = (37 * hash) + COMP_IMAGE_FIELD_NUMBER;
        hash = (53 * hash) + getCompImage().hashCode();
      }
      if (getTmagCount() > 0) {
        hash = (37 * hash) + TMAG_FIELD_NUMBER;
        hash = (53 * hash) + getTmagList().hashCode();
      }
      if (getZvalCount() > 0) {
        hash = (37 * hash) + ZVAL_FIELD_NUMBER;
        hash = (53 * hash) + getZvalList().hashCode();
      }
      if (getIndxCount() > 0) {
        hash = (37 * hash) + INDX_FIELD_NUMBER;
        hash = (53 * hash) + getIndxList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.TerImageSeq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.TerImageSeq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerImageSeq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.TerImageSeq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerImageSeq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.TerImageSeq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerImageSeq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.TerImageSeq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.TerImageSeq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.TerImageSeq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.TerImageSeq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * comp_of AMessage 
     * </pre>
     *
     * Protobuf type {@code TerImageSeq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TerImageSeq)
        gamma.player.util.GammaProto.TerImageSeqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_TerImageSeq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_TerImageSeq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.TerImageSeq.class, gamma.player.util.GammaProto.TerImageSeq.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.TerImageSeq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTmagFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (compImageBuilder_ == null) {
          compImage_ = null;
        } else {
          compImage_ = null;
          compImageBuilder_ = null;
        }
        if (tmagBuilder_ == null) {
          tmag_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          tmagBuilder_.clear();
        }
        zval_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        indx_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_TerImageSeq_descriptor;
      }

      public gamma.player.util.GammaProto.TerImageSeq getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.TerImageSeq.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.TerImageSeq build() {
        gamma.player.util.GammaProto.TerImageSeq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.TerImageSeq buildPartial() {
        gamma.player.util.GammaProto.TerImageSeq result = new gamma.player.util.GammaProto.TerImageSeq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (compImageBuilder_ == null) {
          result.compImage_ = compImage_;
        } else {
          result.compImage_ = compImageBuilder_.build();
        }
        if (tmagBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            tmag_ = java.util.Collections.unmodifiableList(tmag_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.tmag_ = tmag_;
        } else {
          result.tmag_ = tmagBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          zval_ = java.util.Collections.unmodifiableList(zval_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.zval_ = zval_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          indx_ = java.util.Collections.unmodifiableList(indx_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.indx_ = indx_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.TerImageSeq) {
          return mergeFrom((gamma.player.util.GammaProto.TerImageSeq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.TerImageSeq other) {
        if (other == gamma.player.util.GammaProto.TerImageSeq.getDefaultInstance()) return this;
        if (other.hasCompImage()) {
          mergeCompImage(other.getCompImage());
        }
        if (tmagBuilder_ == null) {
          if (!other.tmag_.isEmpty()) {
            if (tmag_.isEmpty()) {
              tmag_ = other.tmag_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTmagIsMutable();
              tmag_.addAll(other.tmag_);
            }
            onChanged();
          }
        } else {
          if (!other.tmag_.isEmpty()) {
            if (tmagBuilder_.isEmpty()) {
              tmagBuilder_.dispose();
              tmagBuilder_ = null;
              tmag_ = other.tmag_;
              bitField0_ = (bitField0_ & ~0x00000002);
              tmagBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTmagFieldBuilder() : null;
            } else {
              tmagBuilder_.addAllMessages(other.tmag_);
            }
          }
        }
        if (!other.zval_.isEmpty()) {
          if (zval_.isEmpty()) {
            zval_ = other.zval_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureZvalIsMutable();
            zval_.addAll(other.zval_);
          }
          onChanged();
        }
        if (!other.indx_.isEmpty()) {
          if (indx_.isEmpty()) {
            indx_ = other.indx_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureIndxIsMutable();
            indx_.addAll(other.indx_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.TerImageSeq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.TerImageSeq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private gamma.player.util.GammaProto.ImageAry compImage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.ImageAry, gamma.player.util.GammaProto.ImageAry.Builder, gamma.player.util.GammaProto.ImageAryOrBuilder> compImageBuilder_;
      /**
       * <pre>
       * required: composite image
       * </pre>
       *
       * <code>.ImageAry comp_image = 1;</code>
       */
      public boolean hasCompImage() {
        return compImageBuilder_ != null || compImage_ != null;
      }
      /**
       * <pre>
       * required: composite image
       * </pre>
       *
       * <code>.ImageAry comp_image = 1;</code>
       */
      public gamma.player.util.GammaProto.ImageAry getCompImage() {
        if (compImageBuilder_ == null) {
          return compImage_ == null ? gamma.player.util.GammaProto.ImageAry.getDefaultInstance() : compImage_;
        } else {
          return compImageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * required: composite image
       * </pre>
       *
       * <code>.ImageAry comp_image = 1;</code>
       */
      public Builder setCompImage(gamma.player.util.GammaProto.ImageAry value) {
        if (compImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          compImage_ = value;
          onChanged();
        } else {
          compImageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * required: composite image
       * </pre>
       *
       * <code>.ImageAry comp_image = 1;</code>
       */
      public Builder setCompImage(
          gamma.player.util.GammaProto.ImageAry.Builder builderForValue) {
        if (compImageBuilder_ == null) {
          compImage_ = builderForValue.build();
          onChanged();
        } else {
          compImageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * required: composite image
       * </pre>
       *
       * <code>.ImageAry comp_image = 1;</code>
       */
      public Builder mergeCompImage(gamma.player.util.GammaProto.ImageAry value) {
        if (compImageBuilder_ == null) {
          if (compImage_ != null) {
            compImage_ =
              gamma.player.util.GammaProto.ImageAry.newBuilder(compImage_).mergeFrom(value).buildPartial();
          } else {
            compImage_ = value;
          }
          onChanged();
        } else {
          compImageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * required: composite image
       * </pre>
       *
       * <code>.ImageAry comp_image = 1;</code>
       */
      public Builder clearCompImage() {
        if (compImageBuilder_ == null) {
          compImage_ = null;
          onChanged();
        } else {
          compImage_ = null;
          compImageBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * required: composite image
       * </pre>
       *
       * <code>.ImageAry comp_image = 1;</code>
       */
      public gamma.player.util.GammaProto.ImageAry.Builder getCompImageBuilder() {
        
        onChanged();
        return getCompImageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * required: composite image
       * </pre>
       *
       * <code>.ImageAry comp_image = 1;</code>
       */
      public gamma.player.util.GammaProto.ImageAryOrBuilder getCompImageOrBuilder() {
        if (compImageBuilder_ != null) {
          return compImageBuilder_.getMessageOrBuilder();
        } else {
          return compImage_ == null ?
              gamma.player.util.GammaProto.ImageAry.getDefaultInstance() : compImage_;
        }
      }
      /**
       * <pre>
       * required: composite image
       * </pre>
       *
       * <code>.ImageAry comp_image = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.ImageAry, gamma.player.util.GammaProto.ImageAry.Builder, gamma.player.util.GammaProto.ImageAryOrBuilder> 
          getCompImageFieldBuilder() {
        if (compImageBuilder_ == null) {
          compImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.ImageAry, gamma.player.util.GammaProto.ImageAry.Builder, gamma.player.util.GammaProto.ImageAryOrBuilder>(
                  getCompImage(),
                  getParentForChildren(),
                  isClean());
          compImage_ = null;
        }
        return compImageBuilder_;
      }

      private java.util.List<gamma.player.util.GammaProto.TerImage> tmag_ =
        java.util.Collections.emptyList();
      private void ensureTmagIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          tmag_ = new java.util.ArrayList<gamma.player.util.GammaProto.TerImage>(tmag_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          gamma.player.util.GammaProto.TerImage, gamma.player.util.GammaProto.TerImage.Builder, gamma.player.util.GammaProto.TerImageOrBuilder> tmagBuilder_;

      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public java.util.List<gamma.player.util.GammaProto.TerImage> getTmagList() {
        if (tmagBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tmag_);
        } else {
          return tmagBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public int getTmagCount() {
        if (tmagBuilder_ == null) {
          return tmag_.size();
        } else {
          return tmagBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public gamma.player.util.GammaProto.TerImage getTmag(int index) {
        if (tmagBuilder_ == null) {
          return tmag_.get(index);
        } else {
          return tmagBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public Builder setTmag(
          int index, gamma.player.util.GammaProto.TerImage value) {
        if (tmagBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTmagIsMutable();
          tmag_.set(index, value);
          onChanged();
        } else {
          tmagBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public Builder setTmag(
          int index, gamma.player.util.GammaProto.TerImage.Builder builderForValue) {
        if (tmagBuilder_ == null) {
          ensureTmagIsMutable();
          tmag_.set(index, builderForValue.build());
          onChanged();
        } else {
          tmagBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public Builder addTmag(gamma.player.util.GammaProto.TerImage value) {
        if (tmagBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTmagIsMutable();
          tmag_.add(value);
          onChanged();
        } else {
          tmagBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public Builder addTmag(
          int index, gamma.player.util.GammaProto.TerImage value) {
        if (tmagBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTmagIsMutable();
          tmag_.add(index, value);
          onChanged();
        } else {
          tmagBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public Builder addTmag(
          gamma.player.util.GammaProto.TerImage.Builder builderForValue) {
        if (tmagBuilder_ == null) {
          ensureTmagIsMutable();
          tmag_.add(builderForValue.build());
          onChanged();
        } else {
          tmagBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public Builder addTmag(
          int index, gamma.player.util.GammaProto.TerImage.Builder builderForValue) {
        if (tmagBuilder_ == null) {
          ensureTmagIsMutable();
          tmag_.add(index, builderForValue.build());
          onChanged();
        } else {
          tmagBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public Builder addAllTmag(
          java.lang.Iterable<? extends gamma.player.util.GammaProto.TerImage> values) {
        if (tmagBuilder_ == null) {
          ensureTmagIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tmag_);
          onChanged();
        } else {
          tmagBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public Builder clearTmag() {
        if (tmagBuilder_ == null) {
          tmag_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          tmagBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public Builder removeTmag(int index) {
        if (tmagBuilder_ == null) {
          ensureTmagIsMutable();
          tmag_.remove(index);
          onChanged();
        } else {
          tmagBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public gamma.player.util.GammaProto.TerImage.Builder getTmagBuilder(
          int index) {
        return getTmagFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public gamma.player.util.GammaProto.TerImageOrBuilder getTmagOrBuilder(
          int index) {
        if (tmagBuilder_ == null) {
          return tmag_.get(index);  } else {
          return tmagBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public java.util.List<? extends gamma.player.util.GammaProto.TerImageOrBuilder> 
           getTmagOrBuilderList() {
        if (tmagBuilder_ != null) {
          return tmagBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tmag_);
        }
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public gamma.player.util.GammaProto.TerImage.Builder addTmagBuilder() {
        return getTmagFieldBuilder().addBuilder(
            gamma.player.util.GammaProto.TerImage.getDefaultInstance());
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public gamma.player.util.GammaProto.TerImage.Builder addTmagBuilder(
          int index) {
        return getTmagFieldBuilder().addBuilder(
            index, gamma.player.util.GammaProto.TerImage.getDefaultInstance());
      }
      /**
       * <pre>
       * optional
       * </pre>
       *
       * <code>repeated .TerImage tmag = 2;</code>
       */
      public java.util.List<gamma.player.util.GammaProto.TerImage.Builder> 
           getTmagBuilderList() {
        return getTmagFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          gamma.player.util.GammaProto.TerImage, gamma.player.util.GammaProto.TerImage.Builder, gamma.player.util.GammaProto.TerImageOrBuilder> 
          getTmagFieldBuilder() {
        if (tmagBuilder_ == null) {
          tmagBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              gamma.player.util.GammaProto.TerImage, gamma.player.util.GammaProto.TerImage.Builder, gamma.player.util.GammaProto.TerImageOrBuilder>(
                  tmag_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          tmag_ = null;
        }
        return tmagBuilder_;
      }

      private java.util.List<java.lang.Integer> zval_ = java.util.Collections.emptyList();
      private void ensureZvalIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          zval_ = new java.util.ArrayList<java.lang.Integer>(zval_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * length=1023 (2^10-1): elevation in meters, by zndx
       * </pre>
       *
       * <code>repeated int32 zval = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getZvalList() {
        return java.util.Collections.unmodifiableList(zval_);
      }
      /**
       * <pre>
       * length=1023 (2^10-1): elevation in meters, by zndx
       * </pre>
       *
       * <code>repeated int32 zval = 3;</code>
       */
      public int getZvalCount() {
        return zval_.size();
      }
      /**
       * <pre>
       * length=1023 (2^10-1): elevation in meters, by zndx
       * </pre>
       *
       * <code>repeated int32 zval = 3;</code>
       */
      public int getZval(int index) {
        return zval_.get(index);
      }
      /**
       * <pre>
       * length=1023 (2^10-1): elevation in meters, by zndx
       * </pre>
       *
       * <code>repeated int32 zval = 3;</code>
       */
      public Builder setZval(
          int index, int value) {
        ensureZvalIsMutable();
        zval_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * length=1023 (2^10-1): elevation in meters, by zndx
       * </pre>
       *
       * <code>repeated int32 zval = 3;</code>
       */
      public Builder addZval(int value) {
        ensureZvalIsMutable();
        zval_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * length=1023 (2^10-1): elevation in meters, by zndx
       * </pre>
       *
       * <code>repeated int32 zval = 3;</code>
       */
      public Builder addAllZval(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureZvalIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, zval_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * length=1023 (2^10-1): elevation in meters, by zndx
       * </pre>
       *
       * <code>repeated int32 zval = 3;</code>
       */
      public Builder clearZval() {
        zval_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> indx_ = java.util.Collections.emptyList();
      private void ensureIndxIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          indx_ = new java.util.ArrayList<java.lang.Integer>(indx_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * length&lt;64: map 6-bit tvid -&gt; indx; ImgageAry[r*ncols+c]
       * </pre>
       *
       * <code>repeated int32 indx = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getIndxList() {
        return java.util.Collections.unmodifiableList(indx_);
      }
      /**
       * <pre>
       * length&lt;64: map 6-bit tvid -&gt; indx; ImgageAry[r*ncols+c]
       * </pre>
       *
       * <code>repeated int32 indx = 4;</code>
       */
      public int getIndxCount() {
        return indx_.size();
      }
      /**
       * <pre>
       * length&lt;64: map 6-bit tvid -&gt; indx; ImgageAry[r*ncols+c]
       * </pre>
       *
       * <code>repeated int32 indx = 4;</code>
       */
      public int getIndx(int index) {
        return indx_.get(index);
      }
      /**
       * <pre>
       * length&lt;64: map 6-bit tvid -&gt; indx; ImgageAry[r*ncols+c]
       * </pre>
       *
       * <code>repeated int32 indx = 4;</code>
       */
      public Builder setIndx(
          int index, int value) {
        ensureIndxIsMutable();
        indx_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * length&lt;64: map 6-bit tvid -&gt; indx; ImgageAry[r*ncols+c]
       * </pre>
       *
       * <code>repeated int32 indx = 4;</code>
       */
      public Builder addIndx(int value) {
        ensureIndxIsMutable();
        indx_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * length&lt;64: map 6-bit tvid -&gt; indx; ImgageAry[r*ncols+c]
       * </pre>
       *
       * <code>repeated int32 indx = 4;</code>
       */
      public Builder addAllIndx(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIndxIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, indx_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * length&lt;64: map 6-bit tvid -&gt; indx; ImgageAry[r*ncols+c]
       * </pre>
       *
       * <code>repeated int32 indx = 4;</code>
       */
      public Builder clearIndx() {
        indx_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:TerImageSeq)
    }

    // @@protoc_insertion_point(class_scope:TerImageSeq)
    private static final gamma.player.util.GammaProto.TerImageSeq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.TerImageSeq();
    }

    public static gamma.player.util.GammaProto.TerImageSeq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TerImageSeq>
        PARSER = new com.google.protobuf.AbstractParser<TerImageSeq>() {
      public TerImageSeq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TerImageSeq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TerImageSeq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TerImageSeq> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.TerImageSeq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ModImageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ModImage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 mndx = 1;</code>
     */
    int getMndx();

    /**
     * <pre>
     * model/image display name (dubious)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * model/image display name (dubious)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>.SubImage sub_image = 3;</code>
     */
    boolean hasSubImage();
    /**
     * <code>.SubImage sub_image = 3;</code>
     */
    gamma.player.util.GammaProto.SubImage getSubImage();
    /**
     * <code>.SubImage sub_image = 3;</code>
     */
    gamma.player.util.GammaProto.SubImageOrBuilder getSubImageOrBuilder();

    /**
     * <pre>
     * replace pixels of this RGB with player's color [livery]
     * </pre>
     *
     * <code>uint32 p_color = 5;</code>
     */
    int getPColor();
  }
  /**
   * <pre>
   * images for unit models, or other non-terrain things (on the unit-canvas)
   * set mapping from m_ndx and icon_ndx to image (in ImageAry mblk)
   * for each player, create a master with the livery color replaced
   * </pre>
   *
   * Protobuf type {@code ModImage}
   */
  public  static final class ModImage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ModImage)
      ModImageOrBuilder {
    // Use ModImage.newBuilder() to construct.
    private ModImage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ModImage() {
      mndx_ = 0;
      name_ = "";
      pColor_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ModImage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              mndx_ = input.readUInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 26: {
              gamma.player.util.GammaProto.SubImage.Builder subBuilder = null;
              if (subImage_ != null) {
                subBuilder = subImage_.toBuilder();
              }
              subImage_ = input.readMessage(gamma.player.util.GammaProto.SubImage.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(subImage_);
                subImage_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              pColor_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_ModImage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_ModImage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.ModImage.class, gamma.player.util.GammaProto.ModImage.Builder.class);
    }

    public static final int MNDX_FIELD_NUMBER = 1;
    private int mndx_;
    /**
     * <code>uint32 mndx = 1;</code>
     */
    public int getMndx() {
      return mndx_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * model/image display name (dubious)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * model/image display name (dubious)
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUB_IMAGE_FIELD_NUMBER = 3;
    private gamma.player.util.GammaProto.SubImage subImage_;
    /**
     * <code>.SubImage sub_image = 3;</code>
     */
    public boolean hasSubImage() {
      return subImage_ != null;
    }
    /**
     * <code>.SubImage sub_image = 3;</code>
     */
    public gamma.player.util.GammaProto.SubImage getSubImage() {
      return subImage_ == null ? gamma.player.util.GammaProto.SubImage.getDefaultInstance() : subImage_;
    }
    /**
     * <code>.SubImage sub_image = 3;</code>
     */
    public gamma.player.util.GammaProto.SubImageOrBuilder getSubImageOrBuilder() {
      return getSubImage();
    }

    public static final int P_COLOR_FIELD_NUMBER = 5;
    private int pColor_;
    /**
     * <pre>
     * replace pixels of this RGB with player's color [livery]
     * </pre>
     *
     * <code>uint32 p_color = 5;</code>
     */
    public int getPColor() {
      return pColor_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mndx_ != 0) {
        output.writeUInt32(1, mndx_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      if (subImage_ != null) {
        output.writeMessage(3, getSubImage());
      }
      if (pColor_ != 0) {
        output.writeUInt32(5, pColor_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mndx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, mndx_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      if (subImage_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSubImage());
      }
      if (pColor_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, pColor_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.ModImage)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.ModImage other = (gamma.player.util.GammaProto.ModImage) obj;

      boolean result = true;
      result = result && (getMndx()
          == other.getMndx());
      result = result && getName()
          .equals(other.getName());
      result = result && (hasSubImage() == other.hasSubImage());
      if (hasSubImage()) {
        result = result && getSubImage()
            .equals(other.getSubImage());
      }
      result = result && (getPColor()
          == other.getPColor());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MNDX_FIELD_NUMBER;
      hash = (53 * hash) + getMndx();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasSubImage()) {
        hash = (37 * hash) + SUB_IMAGE_FIELD_NUMBER;
        hash = (53 * hash) + getSubImage().hashCode();
      }
      hash = (37 * hash) + P_COLOR_FIELD_NUMBER;
      hash = (53 * hash) + getPColor();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.ModImage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.ModImage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.ModImage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.ModImage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.ModImage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.ModImage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.ModImage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.ModImage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.ModImage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.ModImage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.ModImage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * images for unit models, or other non-terrain things (on the unit-canvas)
     * set mapping from m_ndx and icon_ndx to image (in ImageAry mblk)
     * for each player, create a master with the livery color replaced
     * </pre>
     *
     * Protobuf type {@code ModImage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ModImage)
        gamma.player.util.GammaProto.ModImageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_ModImage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_ModImage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.ModImage.class, gamma.player.util.GammaProto.ModImage.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.ModImage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        mndx_ = 0;

        name_ = "";

        if (subImageBuilder_ == null) {
          subImage_ = null;
        } else {
          subImage_ = null;
          subImageBuilder_ = null;
        }
        pColor_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_ModImage_descriptor;
      }

      public gamma.player.util.GammaProto.ModImage getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.ModImage.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.ModImage build() {
        gamma.player.util.GammaProto.ModImage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.ModImage buildPartial() {
        gamma.player.util.GammaProto.ModImage result = new gamma.player.util.GammaProto.ModImage(this);
        result.mndx_ = mndx_;
        result.name_ = name_;
        if (subImageBuilder_ == null) {
          result.subImage_ = subImage_;
        } else {
          result.subImage_ = subImageBuilder_.build();
        }
        result.pColor_ = pColor_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.ModImage) {
          return mergeFrom((gamma.player.util.GammaProto.ModImage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.ModImage other) {
        if (other == gamma.player.util.GammaProto.ModImage.getDefaultInstance()) return this;
        if (other.getMndx() != 0) {
          setMndx(other.getMndx());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasSubImage()) {
          mergeSubImage(other.getSubImage());
        }
        if (other.getPColor() != 0) {
          setPColor(other.getPColor());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.ModImage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.ModImage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int mndx_ ;
      /**
       * <code>uint32 mndx = 1;</code>
       */
      public int getMndx() {
        return mndx_;
      }
      /**
       * <code>uint32 mndx = 1;</code>
       */
      public Builder setMndx(int value) {
        
        mndx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 mndx = 1;</code>
       */
      public Builder clearMndx() {
        
        mndx_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * model/image display name (dubious)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * model/image display name (dubious)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * model/image display name (dubious)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * model/image display name (dubious)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * model/image display name (dubious)
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private gamma.player.util.GammaProto.SubImage subImage_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.SubImage, gamma.player.util.GammaProto.SubImage.Builder, gamma.player.util.GammaProto.SubImageOrBuilder> subImageBuilder_;
      /**
       * <code>.SubImage sub_image = 3;</code>
       */
      public boolean hasSubImage() {
        return subImageBuilder_ != null || subImage_ != null;
      }
      /**
       * <code>.SubImage sub_image = 3;</code>
       */
      public gamma.player.util.GammaProto.SubImage getSubImage() {
        if (subImageBuilder_ == null) {
          return subImage_ == null ? gamma.player.util.GammaProto.SubImage.getDefaultInstance() : subImage_;
        } else {
          return subImageBuilder_.getMessage();
        }
      }
      /**
       * <code>.SubImage sub_image = 3;</code>
       */
      public Builder setSubImage(gamma.player.util.GammaProto.SubImage value) {
        if (subImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subImage_ = value;
          onChanged();
        } else {
          subImageBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.SubImage sub_image = 3;</code>
       */
      public Builder setSubImage(
          gamma.player.util.GammaProto.SubImage.Builder builderForValue) {
        if (subImageBuilder_ == null) {
          subImage_ = builderForValue.build();
          onChanged();
        } else {
          subImageBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.SubImage sub_image = 3;</code>
       */
      public Builder mergeSubImage(gamma.player.util.GammaProto.SubImage value) {
        if (subImageBuilder_ == null) {
          if (subImage_ != null) {
            subImage_ =
              gamma.player.util.GammaProto.SubImage.newBuilder(subImage_).mergeFrom(value).buildPartial();
          } else {
            subImage_ = value;
          }
          onChanged();
        } else {
          subImageBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.SubImage sub_image = 3;</code>
       */
      public Builder clearSubImage() {
        if (subImageBuilder_ == null) {
          subImage_ = null;
          onChanged();
        } else {
          subImage_ = null;
          subImageBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.SubImage sub_image = 3;</code>
       */
      public gamma.player.util.GammaProto.SubImage.Builder getSubImageBuilder() {
        
        onChanged();
        return getSubImageFieldBuilder().getBuilder();
      }
      /**
       * <code>.SubImage sub_image = 3;</code>
       */
      public gamma.player.util.GammaProto.SubImageOrBuilder getSubImageOrBuilder() {
        if (subImageBuilder_ != null) {
          return subImageBuilder_.getMessageOrBuilder();
        } else {
          return subImage_ == null ?
              gamma.player.util.GammaProto.SubImage.getDefaultInstance() : subImage_;
        }
      }
      /**
       * <code>.SubImage sub_image = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.SubImage, gamma.player.util.GammaProto.SubImage.Builder, gamma.player.util.GammaProto.SubImageOrBuilder> 
          getSubImageFieldBuilder() {
        if (subImageBuilder_ == null) {
          subImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.SubImage, gamma.player.util.GammaProto.SubImage.Builder, gamma.player.util.GammaProto.SubImageOrBuilder>(
                  getSubImage(),
                  getParentForChildren(),
                  isClean());
          subImage_ = null;
        }
        return subImageBuilder_;
      }

      private int pColor_ ;
      /**
       * <pre>
       * replace pixels of this RGB with player's color [livery]
       * </pre>
       *
       * <code>uint32 p_color = 5;</code>
       */
      public int getPColor() {
        return pColor_;
      }
      /**
       * <pre>
       * replace pixels of this RGB with player's color [livery]
       * </pre>
       *
       * <code>uint32 p_color = 5;</code>
       */
      public Builder setPColor(int value) {
        
        pColor_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * replace pixels of this RGB with player's color [livery]
       * </pre>
       *
       * <code>uint32 p_color = 5;</code>
       */
      public Builder clearPColor() {
        
        pColor_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ModImage)
    }

    // @@protoc_insertion_point(class_scope:ModImage)
    private static final gamma.player.util.GammaProto.ModImage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.ModImage();
    }

    public static gamma.player.util.GammaProto.ModImage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ModImage>
        PARSER = new com.google.protobuf.AbstractParser<ModImage>() {
      public ModImage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ModImage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ModImage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ModImage> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.ModImage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ModImageSeqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ModImageSeq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * master image
     * </pre>
     *
     * <code>.ImageAry mblk = 1;</code>
     */
    boolean hasMblk();
    /**
     * <pre>
     * master image
     * </pre>
     *
     * <code>.ImageAry mblk = 1;</code>
     */
    gamma.player.util.GammaProto.ImageAry getMblk();
    /**
     * <pre>
     * master image
     * </pre>
     *
     * <code>.ImageAry mblk = 1;</code>
     */
    gamma.player.util.GammaProto.ImageAryOrBuilder getMblkOrBuilder();

    /**
     * <pre>
     * extract sub-image(a 2D model), call it models[mndx] 
     * </pre>
     *
     * <code>repeated .ModImage model = 2;</code>
     */
    java.util.List<gamma.player.util.GammaProto.ModImage> 
        getModelList();
    /**
     * <pre>
     * extract sub-image(a 2D model), call it models[mndx] 
     * </pre>
     *
     * <code>repeated .ModImage model = 2;</code>
     */
    gamma.player.util.GammaProto.ModImage getModel(int index);
    /**
     * <pre>
     * extract sub-image(a 2D model), call it models[mndx] 
     * </pre>
     *
     * <code>repeated .ModImage model = 2;</code>
     */
    int getModelCount();
    /**
     * <pre>
     * extract sub-image(a 2D model), call it models[mndx] 
     * </pre>
     *
     * <code>repeated .ModImage model = 2;</code>
     */
    java.util.List<? extends gamma.player.util.GammaProto.ModImageOrBuilder> 
        getModelOrBuilderList();
    /**
     * <pre>
     * extract sub-image(a 2D model), call it models[mndx] 
     * </pre>
     *
     * <code>repeated .ModImage model = 2;</code>
     */
    gamma.player.util.GammaProto.ModImageOrBuilder getModelOrBuilder(
        int index);
  }
  /**
   * <pre>
   * comp_of AMessage 
   * </pre>
   *
   * Protobuf type {@code ModImageSeq}
   */
  public  static final class ModImageSeq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ModImageSeq)
      ModImageSeqOrBuilder {
    // Use ModImageSeq.newBuilder() to construct.
    private ModImageSeq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ModImageSeq() {
      model_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ModImageSeq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              gamma.player.util.GammaProto.ImageAry.Builder subBuilder = null;
              if (mblk_ != null) {
                subBuilder = mblk_.toBuilder();
              }
              mblk_ = input.readMessage(gamma.player.util.GammaProto.ImageAry.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mblk_);
                mblk_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                model_ = new java.util.ArrayList<gamma.player.util.GammaProto.ModImage>();
                mutable_bitField0_ |= 0x00000002;
              }
              model_.add(
                  input.readMessage(gamma.player.util.GammaProto.ModImage.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          model_ = java.util.Collections.unmodifiableList(model_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return gamma.player.util.GammaProto.internal_static_ModImageSeq_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return gamma.player.util.GammaProto.internal_static_ModImageSeq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              gamma.player.util.GammaProto.ModImageSeq.class, gamma.player.util.GammaProto.ModImageSeq.Builder.class);
    }

    private int bitField0_;
    public static final int MBLK_FIELD_NUMBER = 1;
    private gamma.player.util.GammaProto.ImageAry mblk_;
    /**
     * <pre>
     * master image
     * </pre>
     *
     * <code>.ImageAry mblk = 1;</code>
     */
    public boolean hasMblk() {
      return mblk_ != null;
    }
    /**
     * <pre>
     * master image
     * </pre>
     *
     * <code>.ImageAry mblk = 1;</code>
     */
    public gamma.player.util.GammaProto.ImageAry getMblk() {
      return mblk_ == null ? gamma.player.util.GammaProto.ImageAry.getDefaultInstance() : mblk_;
    }
    /**
     * <pre>
     * master image
     * </pre>
     *
     * <code>.ImageAry mblk = 1;</code>
     */
    public gamma.player.util.GammaProto.ImageAryOrBuilder getMblkOrBuilder() {
      return getMblk();
    }

    public static final int MODEL_FIELD_NUMBER = 2;
    private java.util.List<gamma.player.util.GammaProto.ModImage> model_;
    /**
     * <pre>
     * extract sub-image(a 2D model), call it models[mndx] 
     * </pre>
     *
     * <code>repeated .ModImage model = 2;</code>
     */
    public java.util.List<gamma.player.util.GammaProto.ModImage> getModelList() {
      return model_;
    }
    /**
     * <pre>
     * extract sub-image(a 2D model), call it models[mndx] 
     * </pre>
     *
     * <code>repeated .ModImage model = 2;</code>
     */
    public java.util.List<? extends gamma.player.util.GammaProto.ModImageOrBuilder> 
        getModelOrBuilderList() {
      return model_;
    }
    /**
     * <pre>
     * extract sub-image(a 2D model), call it models[mndx] 
     * </pre>
     *
     * <code>repeated .ModImage model = 2;</code>
     */
    public int getModelCount() {
      return model_.size();
    }
    /**
     * <pre>
     * extract sub-image(a 2D model), call it models[mndx] 
     * </pre>
     *
     * <code>repeated .ModImage model = 2;</code>
     */
    public gamma.player.util.GammaProto.ModImage getModel(int index) {
      return model_.get(index);
    }
    /**
     * <pre>
     * extract sub-image(a 2D model), call it models[mndx] 
     * </pre>
     *
     * <code>repeated .ModImage model = 2;</code>
     */
    public gamma.player.util.GammaProto.ModImageOrBuilder getModelOrBuilder(
        int index) {
      return model_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mblk_ != null) {
        output.writeMessage(1, getMblk());
      }
      for (int i = 0; i < model_.size(); i++) {
        output.writeMessage(2, model_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mblk_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMblk());
      }
      for (int i = 0; i < model_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, model_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof gamma.player.util.GammaProto.ModImageSeq)) {
        return super.equals(obj);
      }
      gamma.player.util.GammaProto.ModImageSeq other = (gamma.player.util.GammaProto.ModImageSeq) obj;

      boolean result = true;
      result = result && (hasMblk() == other.hasMblk());
      if (hasMblk()) {
        result = result && getMblk()
            .equals(other.getMblk());
      }
      result = result && getModelList()
          .equals(other.getModelList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMblk()) {
        hash = (37 * hash) + MBLK_FIELD_NUMBER;
        hash = (53 * hash) + getMblk().hashCode();
      }
      if (getModelCount() > 0) {
        hash = (37 * hash) + MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getModelList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static gamma.player.util.GammaProto.ModImageSeq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.ModImageSeq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.ModImageSeq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static gamma.player.util.GammaProto.ModImageSeq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.ModImageSeq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.ModImageSeq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.ModImageSeq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.ModImageSeq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static gamma.player.util.GammaProto.ModImageSeq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static gamma.player.util.GammaProto.ModImageSeq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(gamma.player.util.GammaProto.ModImageSeq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * comp_of AMessage 
     * </pre>
     *
     * Protobuf type {@code ModImageSeq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ModImageSeq)
        gamma.player.util.GammaProto.ModImageSeqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return gamma.player.util.GammaProto.internal_static_ModImageSeq_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return gamma.player.util.GammaProto.internal_static_ModImageSeq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                gamma.player.util.GammaProto.ModImageSeq.class, gamma.player.util.GammaProto.ModImageSeq.Builder.class);
      }

      // Construct using gamma.player.util.GammaProto.ModImageSeq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getModelFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (mblkBuilder_ == null) {
          mblk_ = null;
        } else {
          mblk_ = null;
          mblkBuilder_ = null;
        }
        if (modelBuilder_ == null) {
          model_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          modelBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return gamma.player.util.GammaProto.internal_static_ModImageSeq_descriptor;
      }

      public gamma.player.util.GammaProto.ModImageSeq getDefaultInstanceForType() {
        return gamma.player.util.GammaProto.ModImageSeq.getDefaultInstance();
      }

      public gamma.player.util.GammaProto.ModImageSeq build() {
        gamma.player.util.GammaProto.ModImageSeq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public gamma.player.util.GammaProto.ModImageSeq buildPartial() {
        gamma.player.util.GammaProto.ModImageSeq result = new gamma.player.util.GammaProto.ModImageSeq(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (mblkBuilder_ == null) {
          result.mblk_ = mblk_;
        } else {
          result.mblk_ = mblkBuilder_.build();
        }
        if (modelBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            model_ = java.util.Collections.unmodifiableList(model_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.model_ = model_;
        } else {
          result.model_ = modelBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof gamma.player.util.GammaProto.ModImageSeq) {
          return mergeFrom((gamma.player.util.GammaProto.ModImageSeq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(gamma.player.util.GammaProto.ModImageSeq other) {
        if (other == gamma.player.util.GammaProto.ModImageSeq.getDefaultInstance()) return this;
        if (other.hasMblk()) {
          mergeMblk(other.getMblk());
        }
        if (modelBuilder_ == null) {
          if (!other.model_.isEmpty()) {
            if (model_.isEmpty()) {
              model_ = other.model_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureModelIsMutable();
              model_.addAll(other.model_);
            }
            onChanged();
          }
        } else {
          if (!other.model_.isEmpty()) {
            if (modelBuilder_.isEmpty()) {
              modelBuilder_.dispose();
              modelBuilder_ = null;
              model_ = other.model_;
              bitField0_ = (bitField0_ & ~0x00000002);
              modelBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getModelFieldBuilder() : null;
            } else {
              modelBuilder_.addAllMessages(other.model_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        gamma.player.util.GammaProto.ModImageSeq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (gamma.player.util.GammaProto.ModImageSeq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private gamma.player.util.GammaProto.ImageAry mblk_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.ImageAry, gamma.player.util.GammaProto.ImageAry.Builder, gamma.player.util.GammaProto.ImageAryOrBuilder> mblkBuilder_;
      /**
       * <pre>
       * master image
       * </pre>
       *
       * <code>.ImageAry mblk = 1;</code>
       */
      public boolean hasMblk() {
        return mblkBuilder_ != null || mblk_ != null;
      }
      /**
       * <pre>
       * master image
       * </pre>
       *
       * <code>.ImageAry mblk = 1;</code>
       */
      public gamma.player.util.GammaProto.ImageAry getMblk() {
        if (mblkBuilder_ == null) {
          return mblk_ == null ? gamma.player.util.GammaProto.ImageAry.getDefaultInstance() : mblk_;
        } else {
          return mblkBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * master image
       * </pre>
       *
       * <code>.ImageAry mblk = 1;</code>
       */
      public Builder setMblk(gamma.player.util.GammaProto.ImageAry value) {
        if (mblkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mblk_ = value;
          onChanged();
        } else {
          mblkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * master image
       * </pre>
       *
       * <code>.ImageAry mblk = 1;</code>
       */
      public Builder setMblk(
          gamma.player.util.GammaProto.ImageAry.Builder builderForValue) {
        if (mblkBuilder_ == null) {
          mblk_ = builderForValue.build();
          onChanged();
        } else {
          mblkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * master image
       * </pre>
       *
       * <code>.ImageAry mblk = 1;</code>
       */
      public Builder mergeMblk(gamma.player.util.GammaProto.ImageAry value) {
        if (mblkBuilder_ == null) {
          if (mblk_ != null) {
            mblk_ =
              gamma.player.util.GammaProto.ImageAry.newBuilder(mblk_).mergeFrom(value).buildPartial();
          } else {
            mblk_ = value;
          }
          onChanged();
        } else {
          mblkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * master image
       * </pre>
       *
       * <code>.ImageAry mblk = 1;</code>
       */
      public Builder clearMblk() {
        if (mblkBuilder_ == null) {
          mblk_ = null;
          onChanged();
        } else {
          mblk_ = null;
          mblkBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * master image
       * </pre>
       *
       * <code>.ImageAry mblk = 1;</code>
       */
      public gamma.player.util.GammaProto.ImageAry.Builder getMblkBuilder() {
        
        onChanged();
        return getMblkFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * master image
       * </pre>
       *
       * <code>.ImageAry mblk = 1;</code>
       */
      public gamma.player.util.GammaProto.ImageAryOrBuilder getMblkOrBuilder() {
        if (mblkBuilder_ != null) {
          return mblkBuilder_.getMessageOrBuilder();
        } else {
          return mblk_ == null ?
              gamma.player.util.GammaProto.ImageAry.getDefaultInstance() : mblk_;
        }
      }
      /**
       * <pre>
       * master image
       * </pre>
       *
       * <code>.ImageAry mblk = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          gamma.player.util.GammaProto.ImageAry, gamma.player.util.GammaProto.ImageAry.Builder, gamma.player.util.GammaProto.ImageAryOrBuilder> 
          getMblkFieldBuilder() {
        if (mblkBuilder_ == null) {
          mblkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              gamma.player.util.GammaProto.ImageAry, gamma.player.util.GammaProto.ImageAry.Builder, gamma.player.util.GammaProto.ImageAryOrBuilder>(
                  getMblk(),
                  getParentForChildren(),
                  isClean());
          mblk_ = null;
        }
        return mblkBuilder_;
      }

      private java.util.List<gamma.player.util.GammaProto.ModImage> model_ =
        java.util.Collections.emptyList();
      private void ensureModelIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          model_ = new java.util.ArrayList<gamma.player.util.GammaProto.ModImage>(model_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          gamma.player.util.GammaProto.ModImage, gamma.player.util.GammaProto.ModImage.Builder, gamma.player.util.GammaProto.ModImageOrBuilder> modelBuilder_;

      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public java.util.List<gamma.player.util.GammaProto.ModImage> getModelList() {
        if (modelBuilder_ == null) {
          return java.util.Collections.unmodifiableList(model_);
        } else {
          return modelBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public int getModelCount() {
        if (modelBuilder_ == null) {
          return model_.size();
        } else {
          return modelBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public gamma.player.util.GammaProto.ModImage getModel(int index) {
        if (modelBuilder_ == null) {
          return model_.get(index);
        } else {
          return modelBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public Builder setModel(
          int index, gamma.player.util.GammaProto.ModImage value) {
        if (modelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModelIsMutable();
          model_.set(index, value);
          onChanged();
        } else {
          modelBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public Builder setModel(
          int index, gamma.player.util.GammaProto.ModImage.Builder builderForValue) {
        if (modelBuilder_ == null) {
          ensureModelIsMutable();
          model_.set(index, builderForValue.build());
          onChanged();
        } else {
          modelBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public Builder addModel(gamma.player.util.GammaProto.ModImage value) {
        if (modelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModelIsMutable();
          model_.add(value);
          onChanged();
        } else {
          modelBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public Builder addModel(
          int index, gamma.player.util.GammaProto.ModImage value) {
        if (modelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureModelIsMutable();
          model_.add(index, value);
          onChanged();
        } else {
          modelBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public Builder addModel(
          gamma.player.util.GammaProto.ModImage.Builder builderForValue) {
        if (modelBuilder_ == null) {
          ensureModelIsMutable();
          model_.add(builderForValue.build());
          onChanged();
        } else {
          modelBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public Builder addModel(
          int index, gamma.player.util.GammaProto.ModImage.Builder builderForValue) {
        if (modelBuilder_ == null) {
          ensureModelIsMutable();
          model_.add(index, builderForValue.build());
          onChanged();
        } else {
          modelBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public Builder addAllModel(
          java.lang.Iterable<? extends gamma.player.util.GammaProto.ModImage> values) {
        if (modelBuilder_ == null) {
          ensureModelIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, model_);
          onChanged();
        } else {
          modelBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public Builder clearModel() {
        if (modelBuilder_ == null) {
          model_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          modelBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public Builder removeModel(int index) {
        if (modelBuilder_ == null) {
          ensureModelIsMutable();
          model_.remove(index);
          onChanged();
        } else {
          modelBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public gamma.player.util.GammaProto.ModImage.Builder getModelBuilder(
          int index) {
        return getModelFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public gamma.player.util.GammaProto.ModImageOrBuilder getModelOrBuilder(
          int index) {
        if (modelBuilder_ == null) {
          return model_.get(index);  } else {
          return modelBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public java.util.List<? extends gamma.player.util.GammaProto.ModImageOrBuilder> 
           getModelOrBuilderList() {
        if (modelBuilder_ != null) {
          return modelBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(model_);
        }
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public gamma.player.util.GammaProto.ModImage.Builder addModelBuilder() {
        return getModelFieldBuilder().addBuilder(
            gamma.player.util.GammaProto.ModImage.getDefaultInstance());
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public gamma.player.util.GammaProto.ModImage.Builder addModelBuilder(
          int index) {
        return getModelFieldBuilder().addBuilder(
            index, gamma.player.util.GammaProto.ModImage.getDefaultInstance());
      }
      /**
       * <pre>
       * extract sub-image(a 2D model), call it models[mndx] 
       * </pre>
       *
       * <code>repeated .ModImage model = 2;</code>
       */
      public java.util.List<gamma.player.util.GammaProto.ModImage.Builder> 
           getModelBuilderList() {
        return getModelFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          gamma.player.util.GammaProto.ModImage, gamma.player.util.GammaProto.ModImage.Builder, gamma.player.util.GammaProto.ModImageOrBuilder> 
          getModelFieldBuilder() {
        if (modelBuilder_ == null) {
          modelBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              gamma.player.util.GammaProto.ModImage, gamma.player.util.GammaProto.ModImage.Builder, gamma.player.util.GammaProto.ModImageOrBuilder>(
                  model_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          model_ = null;
        }
        return modelBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:ModImageSeq)
    }

    // @@protoc_insertion_point(class_scope:ModImageSeq)
    private static final gamma.player.util.GammaProto.ModImageSeq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new gamma.player.util.GammaProto.ModImageSeq();
    }

    public static gamma.player.util.GammaProto.ModImageSeq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ModImageSeq>
        PARSER = new com.google.protobuf.AbstractParser<ModImageSeq>() {
      public ModImageSeq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ModImageSeq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ModImageSeq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ModImageSeq> getParserForType() {
      return PARSER;
    }

    public gamma.player.util.GammaProto.ModImageSeq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Iloc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Iloc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Floc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Floc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IDloc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_IDloc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FDloc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_FDloc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Dloc_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Dloc_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Turn_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Turn_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_AMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_AMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Update_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Update_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_UpdateSeq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_UpdateSeq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Ident_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Ident_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Add_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Add_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_AddSeq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_AddSeq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Del_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Del_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DelSeq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DelSeq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TerRunX_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TerRunX_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TerRowY_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TerRowY_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RevealSeq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RevealSeq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SubImage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SubImage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ImageAry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ImageAry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TerImage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TerImage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TerStats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TerStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RoadStats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RoadStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TerImageSeq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TerImageSeq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ModImage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ModImage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ModImageSeq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ModImageSeq_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013gamma.proto\"\034\n\004Iloc\022\t\n\001y\030\001 \001(\005\022\t\n\001x\030\002 " +
      "\001(\005\"\034\n\004Floc\022\t\n\001y\030\001 \001(\002\022\t\n\001x\030\002 \001(\002\"\037\n\005IDl" +
      "oc\022\n\n\002dy\030\001 \001(\005\022\n\n\002dx\030\002 \001(\005\"\037\n\005FDloc\022\n\n\002d" +
      "y\030\001 \001(\002\022\n\n\002dx\030\002 \001(\002\"$\n\004Dloc\022\r\n\005dy_dt\030\001 \001" +
      "(\002\022\r\n\005dx_dt\030\002 \001(\002\"\022\n\004Turn\022\n\n\002id\030\001 \001(\r\"\313\001" +
      "\n\010AMessage\022\023\n\004turn\030\001 \001(\0132\005.Turn\022\033\n\007updat" +
      "es\030\002 \001(\0132\n.UpdateSeq\022\033\n\007reveals\030\003 \001(\0132\n." +
      "RevealSeq\022\025\n\004adds\030\004 \001(\0132\007.AddSeq\022\025\n\004dels" +
      "\030\005 \001(\0132\007.DelSeq\022 \n\nter_images\030\025 \001(\0132\014.Te" +
      "rImageSeq\022 \n\nmod_images\030\026 \001(\0132\014.ModImage",
      "Seq\"\304\001\n\006Update\022\n\n\002id\030\001 \001(\r\022\n\n\002hp\030\002 \001(\005\022\014" +
      "\n\004isHp\030\003 \001(\010\022\023\n\004floc\030\004 \001(\0132\005.Floc\022\017\n\007is_" +
      "floc\030\005 \001(\010\022\023\n\004iloc\030\006 \001(\0132\005.Iloc\022\017\n\007is_il" +
      "oc\030\007 \001(\010\022\023\n\004dloc\030\010 \001(\0132\005.Dloc\022\017\n\007is_dloc" +
      "\030\t \001(\010\022\021\n\tplayer_id\030\n \001(\r\022\017\n\007quality\030\013 \001" +
      "(\002\"%\n\tUpdateSeq\022\030\n\007updates\030\001 \003(\0132\007.Updat" +
      "e\"c\n\005Ident\022\n\n\002id\030\001 \001(\r\022\014\n\004type\030\002 \001(\t\022\r\n\005" +
      "i_ndx\030\003 \001(\r\022\r\n\005m_ndx\030\004 \001(\r\022\017\n\007display\030\010 " +
      "\001(\t\022\021\n\tplayer_id\030\n \001(\r\"5\n\003Add\022\025\n\005ident\030\001" +
      " \001(\0132\006.Ident\022\027\n\006update\030\002 \001(\0132\007.Update\"\034\n",
      "\006AddSeq\022\022\n\004adds\030\001 \003(\0132\004.Add\"\021\n\003Del\022\n\n\002id" +
      "\030\002 \001(\r\"\034\n\006DelSeq\022\022\n\004dels\030\001 \003(\0132\004.Del\"\"\n\007" +
      "TerRunX\022\n\n\002dx\030\002 \001(\005\022\013\n\003ztv\030\003 \001(\005\"5\n\007TerR" +
      "owY\022\022\n\003loc\030\001 \001(\0132\005.Iloc\022\026\n\004runx\030\002 \003(\0132\010." +
      "TerRunX\"#\n\tRevealSeq\022\026\n\004rowy\030\001 \003(\0132\010.Ter" +
      "RowY\"m\n\010SubImage\022\n\n\002y0\030\002 \001(\r\022\n\n\002x0\030\003 \001(\r" +
      "\022\014\n\004y_px\030\004 \001(\r\022\014\n\004x_px\030\005 \001(\r\022\r\n\005y_off\030\006 " +
      "\001(\r\022\r\n\005x_off\030\007 \001(\r\022\017\n\007alt_url\030\010 \001(\t\"F\n\010I" +
      "mageAry\022\017\n\007npixels\030\001 \001(\r\022\r\n\005nrows\030\002 \001(\r\022" +
      "\r\n\005ncols\030\003 \001(\r\022\013\n\003url\030\004 \001(\t\"D\n\010TerImage\022",
      "\014\n\004tvid\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\034\n\tsub_image" +
      "\030\003 \001(\0132\t.SubImage\"2\n\010TerStats\022\021\n\tvisibil" +
      "ty\030\001 \001(\002\022\023\n\013scoutablity\030\002 \001(\002\"\034\n\tRoadSta" +
      "ts\022\017\n\007quality\030\001 \001(\002\"a\n\013TerImageSeq\022\035\n\nco" +
      "mp_image\030\001 \001(\0132\t.ImageAry\022\027\n\004tmag\030\002 \003(\0132" +
      "\t.TerImage\022\014\n\004zval\030\003 \003(\005\022\014\n\004indx\030\004 \003(\005\"U" +
      "\n\010ModImage\022\014\n\004mndx\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\034" +
      "\n\tsub_image\030\003 \001(\0132\t.SubImage\022\017\n\007p_color\030" +
      "\005 \001(\r\"@\n\013ModImageSeq\022\027\n\004mblk\030\001 \001(\0132\t.Ima" +
      "geAry\022\030\n\005model\030\002 \003(\0132\t.ModImage*`\n\006Field",
      "s\022\010\n\004none\020\000\022\010\n\004turn\020\001\022\n\n\006update\020\002\022\n\n\006rev" +
      "eal\020\003\022\007\n\003add\020\004\022\007\n\003del\020\005\022\013\n\007timages\020\025\022\013\n\007" +
      "mimages\020\026B\037\n\021gamma.player.utilB\nGammaPro" +
      "tob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Iloc_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Iloc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Iloc_descriptor,
        new java.lang.String[] { "Y", "X", });
    internal_static_Floc_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Floc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Floc_descriptor,
        new java.lang.String[] { "Y", "X", });
    internal_static_IDloc_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_IDloc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_IDloc_descriptor,
        new java.lang.String[] { "Dy", "Dx", });
    internal_static_FDloc_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_FDloc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_FDloc_descriptor,
        new java.lang.String[] { "Dy", "Dx", });
    internal_static_Dloc_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Dloc_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Dloc_descriptor,
        new java.lang.String[] { "DyDt", "DxDt", });
    internal_static_Turn_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_Turn_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Turn_descriptor,
        new java.lang.String[] { "Id", });
    internal_static_AMessage_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_AMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_AMessage_descriptor,
        new java.lang.String[] { "Turn", "Updates", "Reveals", "Adds", "Dels", "TerImages", "ModImages", });
    internal_static_Update_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_Update_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Update_descriptor,
        new java.lang.String[] { "Id", "Hp", "IsHp", "Floc", "IsFloc", "Iloc", "IsIloc", "Dloc", "IsDloc", "PlayerId", "Quality", });
    internal_static_UpdateSeq_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_UpdateSeq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_UpdateSeq_descriptor,
        new java.lang.String[] { "Updates", });
    internal_static_Ident_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_Ident_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Ident_descriptor,
        new java.lang.String[] { "Id", "Type", "INdx", "MNdx", "Display", "PlayerId", });
    internal_static_Add_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_Add_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Add_descriptor,
        new java.lang.String[] { "Ident", "Update", });
    internal_static_AddSeq_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_AddSeq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_AddSeq_descriptor,
        new java.lang.String[] { "Adds", });
    internal_static_Del_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_Del_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Del_descriptor,
        new java.lang.String[] { "Id", });
    internal_static_DelSeq_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_DelSeq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DelSeq_descriptor,
        new java.lang.String[] { "Dels", });
    internal_static_TerRunX_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_TerRunX_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TerRunX_descriptor,
        new java.lang.String[] { "Dx", "Ztv", });
    internal_static_TerRowY_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_TerRowY_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TerRowY_descriptor,
        new java.lang.String[] { "Loc", "Runx", });
    internal_static_RevealSeq_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_RevealSeq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RevealSeq_descriptor,
        new java.lang.String[] { "Rowy", });
    internal_static_SubImage_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_SubImage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SubImage_descriptor,
        new java.lang.String[] { "Y0", "X0", "YPx", "XPx", "YOff", "XOff", "AltUrl", });
    internal_static_ImageAry_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_ImageAry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ImageAry_descriptor,
        new java.lang.String[] { "Npixels", "Nrows", "Ncols", "Url", });
    internal_static_TerImage_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_TerImage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TerImage_descriptor,
        new java.lang.String[] { "Tvid", "Name", "SubImage", });
    internal_static_TerStats_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_TerStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TerStats_descriptor,
        new java.lang.String[] { "Visibilty", "Scoutablity", });
    internal_static_RoadStats_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_RoadStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RoadStats_descriptor,
        new java.lang.String[] { "Quality", });
    internal_static_TerImageSeq_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_TerImageSeq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TerImageSeq_descriptor,
        new java.lang.String[] { "CompImage", "Tmag", "Zval", "Indx", });
    internal_static_ModImage_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_ModImage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ModImage_descriptor,
        new java.lang.String[] { "Mndx", "Name", "SubImage", "PColor", });
    internal_static_ModImageSeq_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_ModImageSeq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ModImageSeq_descriptor,
        new java.lang.String[] { "Mblk", "Model", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
